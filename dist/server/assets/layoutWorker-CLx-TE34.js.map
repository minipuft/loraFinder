{"version":3,"file":"layoutWorker-CLx-TE34.js","sources":["../src/client/workers/layoutWorker.ts"],"sourcesContent":["self.onmessage = (event) => {\r\n  if (event.data.action === \"calculateLayout\") {\r\n    const { images, containerWidth, containerHeight, targetRowHeight } =\r\n      event.data;\r\n    const layout = calculateOptimalLayout(\r\n      images,\r\n      containerWidth,\r\n      containerHeight,\r\n      targetRowHeight\r\n    );\r\n    self.postMessage({ action: \"layoutCalculated\", layout });\r\n  }\r\n};\r\n\r\ninterface Image {\r\n  id: string;\r\n  width: number;\r\n  height: number;\r\n  isVisible: boolean;\r\n  texture?: WebGLTexture;\r\n}\r\n\r\ninterface LayoutItem {\r\n  id: string;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  textureCoords?: {\r\n    s: number;\r\n    t: number;\r\n    u: number;\r\n    v: number;\r\n  };\r\n}\r\n\r\nfunction calculateOptimalLayout(\r\n  images: Image[],\r\n  containerWidth: number,\r\n  containerHeight: number,\r\n  targetRowHeight: number\r\n): LayoutItem[] {\r\n  const layout: LayoutItem[] = [];\r\n  let currentRow: Image[] = [];\r\n  let currentRowWidth = 0;\r\n  let y = 0;\r\n\r\n  for (const image of images) {\r\n    const aspectRatio = image.width / image.height;\r\n    const scaledWidth = targetRowHeight * aspectRatio;\r\n\r\n    if (\r\n      currentRowWidth + scaledWidth > containerWidth &&\r\n      currentRow.length > 0\r\n    ) {\r\n      const rowLayout = layoutRow(\r\n        currentRow,\r\n        containerWidth,\r\n        y,\r\n        targetRowHeight\r\n      );\r\n      layout.push(...rowLayout);\r\n      y += targetRowHeight;\r\n      currentRow = [];\r\n      currentRowWidth = 0;\r\n    }\r\n\r\n    currentRow.push(image);\r\n    currentRowWidth += scaledWidth;\r\n  }\r\n\r\n  if (currentRow.length > 0) {\r\n    const rowLayout = layoutRow(currentRow, containerWidth, y, targetRowHeight);\r\n    layout.push(...rowLayout);\r\n  }\r\n\r\n  return layout;\r\n}\r\nfunction layoutRow(\r\n  row: Image[],\r\n  containerWidth: number,\r\n  y: number,\r\n  targetHeight: number\r\n): LayoutItem[] {\r\n  const totalAspectRatio = row.reduce(\r\n    (sum, img) => sum + img.width / img.height,\r\n    0\r\n  );\r\n  const rowWidth = containerWidth;\r\n  const rowHeight = rowWidth / totalAspectRatio;\r\n\r\n  let x = 0;\r\n  return row.map((image) => {\r\n    const width = (image.width / image.height) * rowHeight;\r\n    const item: LayoutItem = {\r\n      id: image.id,\r\n      x,\r\n      y,\r\n      width,\r\n      height: rowHeight,\r\n      textureCoords: {\r\n        s: x / containerWidth,\r\n        t: y / containerWidth,\r\n\r\n        u: (x + width) / containerWidth,\r\n        v: (y + rowHeight) / containerWidth,\r\n      },\r\n    };\r\n    x += width;\r\n    return item;\r\n  });\r\n}\r\n"],"names":["layoutRow","row","containerWidth","y","targetHeight","totalAspectRatio","reduce","sum","img","width","height","rowHeight","x","map","image","item","id","textureCoords","s","t","u","v","self","onmessage","event","data","action","images","containerHeight","targetRowHeight","layout","currentRow","currentRowWidth","scaledWidth","length","rowLayout","push","calculateOptimalLayout","postMessage"],"mappings":"yBA8EA,SAASA,EACPC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAmBJ,EAAIK,QAC3B,CAACC,EAAKC,IAAQD,EAAMC,EAAIC,MAAQD,EAAIE,QACpC,GAGIC,EADWT,EACYG,EAE7B,IAAIO,EAAI,EACD,OAAAX,EAAIY,KAAKC,IACd,MAAML,EAASK,EAAML,MAAQK,EAAMJ,OAAUC,EACvCI,EAAmB,CACvBC,GAAIF,EAAME,GACVJ,IACAT,IACAM,QACAC,OAAQC,EACRM,cAAe,CACbC,EAAGN,EAAIV,EACPiB,EAAGhB,EAAID,EAEPkB,GAAIR,EAAIH,GAASP,EACjBmB,GAAIlB,EAAIQ,GAAaT,IAIlB,OADFU,GAAAH,EACEM,CAAA,GAEX,CA/GKO,KAAAC,UAAaC,IACZ,GAAsB,oBAAtBA,EAAMC,KAAKC,OAA8B,CAC3C,MAAMC,OAAEA,EAAQzB,eAAAA,EAAA0B,gBAAgBA,EAAiBC,gBAAAA,GAC/CL,EAAMC,KACFK,EAgCV,SACEH,EACAzB,EACA0B,EACAC,GAEA,MAAMC,EAAuB,GAC7B,IAAIC,EAAsB,GACtBC,EAAkB,EAClB7B,EAAI,EAER,IAAA,MAAWW,KAASa,EAAQ,CACpB,MACAM,EAAcJ,GADAf,EAAML,MAAQK,EAAMJ,QAGxC,GACEsB,EAAkBC,EAAc/B,GAChC6B,EAAWG,OAAS,EACpB,CACA,MAAMC,EAAYnC,EAChB+B,EACA7B,EACAC,GAGK2B,EAAAM,QAAQD,GACVhC,GAAA0B,EACLE,EAAa,GACKC,EAAA,CACpB,CAEAD,EAAWK,KAAKtB,GACGkB,GAAAC,CACrB,CAEI,GAAAF,EAAWG,OAAS,EAAG,CACzB,MAAMC,EAAYnC,EAAU+B,EAAY7B,EAAgBC,GACjD2B,EAAAM,QAAQD,EACjB,CAEO,OAAAL,CACT,CAzEmBO,CACbV,EACAzB,EACA0B,EACAC,GAEFP,KAAKgB,YAAY,CAAEZ,OAAQ,mBAAoBI,UACjD"}