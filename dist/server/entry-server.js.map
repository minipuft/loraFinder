{"version":3,"file":"entry-server.js","sources":["../../src/components/Sidebar.tsx","../../src/components/CurrentDirectoryButton.tsx","../../src/components/SearchBar.tsx","../../src/components/ZoomSlider.tsx","../../src/types.ts","../../src/components/Navbar.tsx","../../src/components/ImageSkeleton.tsx","../../src/utils/stringUtils.ts","../../src/utils/layoutCalculator.ts","../../src/utils/AnimationSystem.ts","../../src/components/ImageItem.tsx","../../src/hooks/useIntersectionObserver.ts","../../src/components/ImageRow.tsx","../../src/workers/imageProcessor.ts","../../src/components/views/BannerView.tsx","../../src/components/views/MasonryView.tsx","../../src/components/views/CarouselView.tsx","../../src/components/RippleEffect.tsx","../../src/components/ImageFeed.tsx","../../src/hooks/useWindowSize.ts","../../src/components/ImageViewer.tsx","../../src/components/MainContent.tsx","../../src/lib/api.ts","../../src/components/ParticleBackground.tsx","../../src/components/LottieBackground.tsx","../../src/utils/constants.ts","../../src/components/Layout.tsx","../../src/hooks/useCustomProperties.ts","../../src/pages/Home.tsx","../../src/App.tsx","../../src/entry-server.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { FolderInfo } from \"../types.js\";\r\nimport styles from \"../styles/Sidebar.module.scss\";\r\nimport { motion } from 'framer-motion';\r\n\r\n// Define the props interface for the Sidebar component\r\ninterface SidebarProps {\r\n  folders: FolderInfo[];\r\n  selectedFolder: string;\r\n  onFolderChange: (folder: string) => void;\r\n}\r\n\r\n// Define the Sidebar component\r\nconst Sidebar: React.FC<SidebarProps> = ({\r\n  folders,\r\n  selectedFolder,\r\n  onFolderChange,\r\n}) => {\r\n  return (\r\n    // Main sidebar container\r\n    <motion.div\r\n      initial={{ x: -300 }}\r\n      animate={{ x: 0 }}\r\n      transition={{ type: 'spring', stiffness: 120 }}\r\n      className={styles.sidebar}\r\n    >\r\n      <div className={`${styles.sidebar} flex flex-col h-full`}>\r\n        {/* Logo section */}\r\n        <div className={styles.logo}>Lora Finder</div>\r\n        {/* Folder list */}\r\n        <ul className={`${styles.folderList} flex-grow overflow-y-auto`}>\r\n          {/* Map through folders and create buttons for each */}\r\n          {folders.map((folder) => (\r\n            <li key={folder.name} className={styles.folderItem}>\r\n              <button\r\n                onClick={() => onFolderChange(folder.name)}\r\n                className={`${styles.folderButton} ${\r\n                  selectedFolder === folder.name ? styles.selectedFolder : \"\"\r\n                }`}\r\n              >\r\n                {folder.name}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {/* Upload button */}\r\n        <div className=\"p-8 mt-auto\">\r\n          <button className={`${styles.uploadButton} w-full`}>Upload</button>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\n// Export the Sidebar component\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { IconFolder } from '@tabler/icons-react';\r\nimport { motion } from 'framer-motion';\r\n\r\n/** Props for the CurrentDirectoryButton component. */\r\ninterface CurrentDirectoryButtonProps {\r\n  currentDirectory: string;\r\n}\r\n\r\n/** CurrentDirectoryButton component that displays the current directory.*/\r\nconst CurrentDirectoryButton: React.FC<CurrentDirectoryButtonProps> = ({ currentDirectory }) => {\r\n  return (\r\n    <motion.button\r\n      className=\"flex items-center bg-gray-700 px-3 py-1 rounded-md text-peach text-sm hover:bg-gray-600 transition-all duration-300 ease-in-out\"\r\n      whileHover={{ scale: 1.05 }}\r\n      whileTap={{ scale: 0.95 }}\r\n    >\r\n      {/* Folder icon */}\r\n      <IconFolder size={16} className=\"mr-2 text-yellow-500\" />\r\n      \r\n      {/* Current directory path */}\r\n      <motion.div\r\n        className=\"truncate max-w-xs\"\r\n        initial={{ clipPath: 'circle(0% at 50% 50%)' }}\r\n        animate={{ clipPath: 'circle(100% at 50% 50%)' }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n        <span>{currentDirectory}</span>\r\n      </motion.div>\r\n    </motion.button>\r\n  );\r\n};\r\n\r\nexport default CurrentDirectoryButton;\r\n","import { motion, useAnimation } from 'framer-motion';\r\nimport { useState } from 'react';\r\nimport styles from '../styles/SearchBar.module.scss';\r\n\r\n// Define the props interface for the SearchBar component\r\ninterface SearchBarProps {\r\n  onSearch: (query: string) => void;\r\n}\r\n\r\n// Define the SearchBar component\r\nconst SearchBar: React.FC<SearchBarProps> = ({ onSearch }) => {\r\n  // State to manage the search query\r\n  const [query, setQuery] = useState('');\r\n  const controls = useAnimation();\r\n\r\n  // Handler for form submission\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onSearch(query);\r\n  };\r\n\r\n  // Render the SearchBar component\r\n  return (\r\n    <motion.form\r\n      onSubmit={handleSubmit}\r\n      className={styles.searchBarContainer}\r\n      initial={{ width: '200px' }}\r\n      animate={{ width: query ? '300px' : '200px' }}\r\n      transition={{ type: 'spring', stiffness: 300, damping: 30 }}\r\n    >\r\n      <motion.div\r\n        className={styles.searchBackground}\r\n        animate={{\r\n          background: query\r\n            ? 'linear-gradient(90deg, #4a00e0 0%, #8e2de2 100%)'\r\n            : 'rgba(255, 255, 255, 0.1)',\r\n        }}\r\n      />\r\n      <motion.input\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        className={styles.searchInput}\r\n        placeholder=\"Search the future...\"\r\n        whileFocus={{ scale: 1.05 }}\r\n        transition={{ type: 'spring', stiffness: 400, damping: 30 }}\r\n      />\r\n    </motion.form>\r\n  );\r\n};\r\n\r\n// Export the SearchBar component\r\nexport default SearchBar;\r\n","import React, { useEffect, useState } from \"react\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { useSpring, animated } from \"react-spring\";\n\n// Define the props interface for the ZoomSlider component\ninterface ZoomSliderProps {\n  zoom: number;\n  onZoomChange: (zoom: number) => void;\n}\n\n// ZoomSlider component for adjusting image zoom level\nconst ZoomSlider: React.FC<ZoomSliderProps> = ({ zoom, onZoomChange }) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const controls = useAnimation();\n  \n  const sliderSpring = useSpring({\n    width: `${((zoom - 0.5) / 1.5) * 100}%`,\n    config: { \n      tension: 300, \n      friction: 10,\n      precision: 0.01\n    }\n  });\n\n  const glowSpring = useSpring({\n    opacity: isDragging ? 1 : 0.6,\n    scale: isDragging ? 1.1 : 1,\n    config: {\n      tension: 300,\n      friction: 20\n    }\n  });\n\n  useEffect(() => {\n    controls.start({\n      scale: isDragging ? 1.05 : 1,\n      transition: {\n        type: \"spring\",\n        stiffness: 300,\n        damping: 20\n      }\n    });\n  }, [isDragging, controls]);\n\n  return (\n    <motion.div \n      className=\"relative flex items-center bg-gray-800/80 backdrop-blur-md rounded-full p-3 overflow-hidden\"\n      style={{ \n        boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n        width: '200px'\n      }}\n      animate={controls}\n    >\n      {/* Zoom out icon */}\n      <motion.div\n        className=\"relative\"\n        whileHover={{ scale: 1.2 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={() => onZoomChange(Math.max(0.5, zoom - 0.1))}\n      >\n        <motion.svg\n          className=\"text-gray-200 mr-3 cursor-pointer\"\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          whileHover={{ rotate: -90 }}\n          transition={{ duration: 0.3 }}\n        >\n          <path d=\"M21 21L16.65 16.65M11 8V14M8 11H14M19 11C19 15.4183 15.4183 19 11 19C6.58172 19 3 15.4183 3 11C3 6.58172 6.58172 3 11 3C15.4183 3 19 6.58172 19 11Z\" \n            stroke=\"currentColor\" \n            strokeWidth=\"2\" \n            strokeLinecap=\"round\" \n            strokeLinejoin=\"round\"\n          />\n        </motion.svg>\n        <animated.div\n          style={{\n            ...glowSpring,\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            width: '30px',\n            height: '30px',\n            background: 'radial-gradient(circle, rgba(59,130,246,0.2) 0%, rgba(59,130,246,0) 70%)',\n            transform: 'translate(-50%, -50%)',\n            pointerEvents: 'none'\n          }}\n        />\n      </motion.div>\n\n      {/* Slider track */}\n      <div className=\"relative flex-1 h-2 bg-gray-700 rounded-full overflow-hidden\">\n        <animated.div \n          className=\"absolute top-0 left-0 h-full bg-blue-500 rounded-full\"\n          style={{\n            ...sliderSpring,\n            boxShadow: '0 0 10px rgba(59,130,246,0.5)'\n          }}\n        />\n        <input\n          type=\"range\"\n          min=\"0.5\"\n          max=\"2\"\n          step=\"0.1\"\n          value={zoom}\n          onChange={(e) => onZoomChange(parseFloat(e.target.value))}\n          onMouseDown={() => setIsDragging(true)}\n          onMouseUp={() => setIsDragging(false)}\n          onTouchStart={() => setIsDragging(true)}\n          onTouchEnd={() => setIsDragging(false)}\n          className=\"absolute top-0 left-0 w-full h-full opacity-0 cursor-pointer\"\n        />\n      </div>\n\n      {/* Zoom in icon */}\n      <motion.div\n        className=\"relative\"\n        whileHover={{ scale: 1.2 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={() => onZoomChange(Math.min(2, zoom + 0.1))}\n      >\n        <motion.svg\n          className=\"text-gray-200 ml-3 cursor-pointer\"\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          whileHover={{ rotate: 90 }}\n          transition={{ duration: 0.3 }}\n        >\n          <path d=\"M21 21L16.65 16.65M19 11C19 15.4183 15.4183 19 11 19C6.58172 19 3 15.4183 3 11C3 6.58172 6.58172 3 11 3C15.4183 3 19 6.58172 19 11Z\" \n            stroke=\"currentColor\" \n            strokeWidth=\"2\" \n            strokeLinecap=\"round\" \n            strokeLinejoin=\"round\"\n          />\n        </motion.svg>\n        <animated.div\n          style={{\n            ...glowSpring,\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            width: '30px',\n            height: '30px',\n            background: 'radial-gradient(circle, rgba(59,130,246,0.2) 0%, rgba(59,130,246,0) 70%)',\n            transform: 'translate(-50%, -50%)',\n            pointerEvents: 'none'\n          }}\n        />\n      </motion.div>\n    </motion.div>\n  );\n};\n\n// Export the ZoomSlider component\nexport default ZoomSlider;\n","// Update ImageInfo to match the definition in src/types/index.ts\nexport interface ImageInfo {\n  id: string;\n  src: string;\n  alt: string;\n  title: string;\n  width: number;\n  height: number;\n  group?: {\n    key: string;\n    images: ImageInfo[];\n    isCarousel: boolean;\n  };\n}\n\n// Keep FolderInfo as is\nexport interface FolderInfo {\n  name: string;    // Name of the folder\n  path: string;    // Path to the folder\n}\n\n// You can keep GroupedImageInfo if it's still needed\nexport interface GroupedImageInfo {\n  id: string;\n  title: string;\n  images: ImageInfo[];\n}\n\n// Export other interfaces from src/types/index.ts if needed\nexport * from './types/index';\n\nexport enum ViewMode {\n  GRID = 'grid',\n  BANNER = 'banner',\n  MASONRY = 'masonry',\n  CAROUSEL = 'carousel'\n}","import React, { useEffect, useRef } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport CurrentDirectoryButton from './CurrentDirectoryButton';\r\nimport SearchBar from './SearchBar';\r\nimport ZoomSlider from './ZoomSlider';\r\nimport { ViewMode } from '../types.js';\r\nimport styles from '../styles/Navbar.module.scss';\r\n\r\n// Update the props interface for the Navbar component\r\ninterface NavbarProps {\r\n  currentDirectory: string;\r\n  onSearch: (query: string) => void;\r\n  zoom: number;\r\n  onZoomChange: (newZoom: number) => void;\r\n  isGrouped: boolean;\r\n  onGroupToggle: () => void;\r\n  viewMode: ViewMode;\r\n  onViewModeChange: (mode: ViewMode) => void;\r\n}\r\n\r\n// Define the Navbar component\r\nconst Navbar: React.FC<NavbarProps> = ({\r\n  currentDirectory,\r\n  onSearch,\r\n  zoom,\r\n  onZoomChange,\r\n  isGrouped,\r\n  onGroupToggle,\r\n  viewMode,\r\n  onViewModeChange,\r\n}) => {\r\n  const svgRef = useRef<SVGSVGElement>(null);\r\n\r\n  useEffect(() => {\r\n    const svg = svgRef.current;\r\n    if (svg) {\r\n      const animate = () => {\r\n        const path = svg.querySelector('path');\r\n        if (path) {\r\n          const length = path.getTotalLength();\r\n          path.style.strokeDasharray = `${length} ${length}`;\r\n          path.style.strokeDashoffset = `${length}`;\r\n          path.getBoundingClientRect();\r\n          path.style.transition = 'stroke-dashoffset 2s ease-in-out';\r\n          path.style.strokeDashoffset = '0';\r\n        }\r\n      };\r\n      animate();\r\n    }\r\n  }, []);\r\n\r\n  // Render the Navbar component\r\n  return (\r\n    <motion.div\r\n      className={styles.navbar}\r\n      initial={{ opacity: 0, y: -50 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <svg ref={svgRef} className={styles.navbarBackground}>\r\n        <path d=\"M0,0 Q50,20 100,10 T200,30 T300,5 T400,25 V100 Q350,80 300,90 T200,70 T100,95 T0,75 Z\" />\r\n      </svg>\r\n      {/* Left section of the navbar */}\r\n      <div className={styles.leftSection}>\r\n        {/* Display the current directory */}\r\n        <CurrentDirectoryButton currentDirectory={currentDirectory} />\r\n        {/* Search functionality */}\r\n        <SearchBar onSearch={onSearch} />\r\n      </div>\r\n      {/* Right section of the navbar */}\r\n      <div className={styles.rightSection}>\r\n        {/* View mode toggle buttons */}\r\n        <div className={styles.viewModeButtons}>\r\n          {Object.values(ViewMode).map((mode) => (\r\n            <motion.button\r\n              key={mode}\r\n              onClick={() => onViewModeChange(mode)}\r\n              className={`${styles.viewModeButton} ${viewMode === mode ? styles.active : ''}`}\r\n              whileHover={{ scale: 1.05 }}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              {mode.charAt(0).toUpperCase() + mode.slice(1)}\r\n            </motion.button>\r\n          ))}\r\n        </div>\r\n        <motion.button\r\n          onClick={onGroupToggle}\r\n          className={styles.viewToggleButton}\r\n          whileHover={{ scale: 1.05 }}\r\n          whileTap={{ scale: 0.95 }}\r\n        >\r\n          {isGrouped ? 'Ungroup' : 'Group'}\r\n        </motion.button>\r\n        {/* Zoom control slider */}\r\n        <ZoomSlider zoom={zoom} onZoomChange={onZoomChange} />\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\n// Export the Navbar component\r\nexport default Navbar;","import React from \"react\";\r\nimport styles from \"../styles/ImageItem.module.scss\";\r\n\r\ninterface ImageSkeletonProps {\r\n  containerWidth: number;\r\n  containerHeight: number;\r\n}\r\n\r\nconst ImageSkeleton: React.FC<ImageSkeletonProps> = ({ containerWidth, containerHeight }) => {\r\n  return (\r\n    <div \r\n      className={`${styles.imageItem} ${styles.imageSkeleton}`}\r\n      style={{\r\n        width: containerWidth,\r\n        height: containerHeight,\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n        aspectRatio: `${containerWidth} / ${containerHeight}`,\r\n      }}\r\n    >\r\n      <div className={styles.skeletonAnimation}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageSkeleton;\r\n","export function truncateImageTitle(title: string | undefined): string {\r\n  if (!title) return \"Untitled\";\r\n\r\n  // Remove file extensions and common suffixes anywhere in the string\r\n  const cleanTitle = title\r\n    // Remove file extensions and version numbers\r\n    .replace(/\\.(preview|thumbnail|jpg|jpeg|png|gif|webp)/gi, '')\r\n    .replace(/[-_.](v\\d+|example|intro|concept)[-_.]?\\d*/gi, '')\r\n    // Remove technical suffixes and common patterns\r\n    .replace(/[-_.]?(flux|lora|ai|toolkit|preview|example\\d*|poster)[-_.]?/gi, ' ')\r\n    // Remove numbered suffixes like .0, .1, .2\r\n    .replace(/\\.\\d+$/, '')\r\n    // Remove long number sequences and IDs\r\n    .replace(/[-_.]?\\d{6,}[-_.]?/g, '')\r\n    // Remove underscore/dash/dot between numbers\r\n    .replace(/(\\d)[-_.](\\d)/g, '$1$2')\r\n    // Remove numbers at the end of titles (like \"Character Style 1\")\r\n    .replace(/\\s+\\d+$/, '')\r\n    // Clean up remaining underscores, dashes, dots and extra spaces\r\n    .replace(/[-_.]+/g, ' ')\r\n    .replace(/\\s+/g, ' ');\r\n\r\n  // Split into words and properly capitalize each word\r\n  const formattedTitle = cleanTitle\r\n    .split(' ')\r\n    .map(word => {\r\n      // Keep acronyms uppercase, capitalize first letter of other words\r\n      return word.match(/^[A-Z]{2,}$/) ? \r\n        word : \r\n        word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\r\n    })\r\n    .join(' ')\r\n    .trim();\r\n\r\n  // Truncate if necessary\r\n  const maxLength = 30;\r\n  return formattedTitle.length > maxLength\r\n    ? formattedTitle.substring(0, maxLength) + \"...\"\r\n    : formattedTitle;\r\n}\r\n","import { ImageInfo, ViewMode } from \"../types\";\n\n// Constants\nexport const MIN_IMAGE_WIDTH = 200;\nexport const MAX_COLUMNS = 7;\nexport const MIN_COLUMNS = 1;\nexport const BASE_GAP = 4;\nexport const MIN_GAP = 2;\nexport const MAX_GAP = 12;\nexport const MIN_ZOOM = 0.5;\nexport const MAX_ZOOM = 3;\n\n// Types\nexport interface LayoutConfig {\n  containerWidth: number;\n  zoom: number;\n  viewMode: ViewMode;\n  isGrouped: boolean;\n}\n\nexport interface RowConfig {\n  width: number;\n  height: number;\n  gap: number;\n  images: ImageInfo[];\n  imageWidths?: number[];\n  offset?: number;\n}\n\nexport interface ImageDimensions {\n  width: number;\n  height: number;\n  aspectRatio: number;\n}\n\n// Cache for aspect ratios and dimensions\nconst aspectRatioCache = new WeakMap<ImageInfo, number>();\nconst layoutCache = new Map<string, RowConfig[]>();\n\n// Example: Caching sorted order of images\nconst sortedImagesCache = new Map<string, ImageInfo[]>();\n\nconst getSortedImages = (images: ImageInfo[]): ImageInfo[] => {\n  // Generate an identifier for the current order; could be a hash of ids\n  const cacheKey = images.map(img => img.id).join(',');\n  if (sortedImagesCache.has(cacheKey)) {\n    return sortedImagesCache.get(cacheKey)!;\n  }\n  // Sort images by aspect ratio (or any other criteria)\n  const sorted = [...images].sort((a, b) => (a.width / a.height) - (b.width / b.height));\n  sortedImagesCache.set(cacheKey, sorted);\n  return sorted;\n};\n\n// Enhanced cache key generation with size awareness\nconst generateCacheKey = (\n  images: ImageInfo[],\n  containerWidth: number,\n  zoom: number,\n  viewMode: string\n): string => {\n  return `${containerWidth}-${zoom}-${viewMode}-${images.map(img => img.id).join(',')}`;\n};\n\n// Cache invalidation threshold (in pixels)\nconst CACHE_INVALIDATION_THRESHOLD = 50;\n\nclass SizeAwareCache<T> {\n  private cache: Map<string, { data: T; width: number }>;\n  private maxSize: number;\n\n  constructor(maxSize: number) {\n    this.cache = new Map();\n    this.maxSize = maxSize;\n  }\n\n  set(key: string, value: T, width: number): void {\n    if (this.cache.size >= this.maxSize) {\n      const firstKey = this.cache.keys().next().value;\n      if (firstKey) {\n        this.cache.delete(firstKey);\n      }\n    }\n    this.cache.set(key, { data: value, width });\n  }\n\n  get(key: string, currentWidth: number): T | undefined {\n    const entry = this.cache.get(key);\n    if (!entry) return undefined;\n\n    // Invalidate cache if width difference exceeds threshold\n    if (Math.abs(entry.width - currentWidth) > CACHE_INVALIDATION_THRESHOLD) {\n      this.cache.delete(key);\n      return undefined;\n    }\n\n    return entry.data;\n  }\n\n  clear(): void {\n    this.cache.clear();\n  }\n}\n\n// Replace existing caches with size-aware versions\nconst rowLayoutCache = new SizeAwareCache<RowConfig>(100);\nconst dimensionsCache = new SizeAwareCache<ImageDimensions>(500);\n\n// Core calculation functions\nexport const calculateColumns = (containerWidth: number, zoom: number): number => {\n  const effectiveWidth = containerWidth / zoom;\n  const baseColumns = Math.floor(effectiveWidth / (MIN_IMAGE_WIDTH * zoom));\n  return Math.min(Math.max(baseColumns, MIN_COLUMNS), MAX_COLUMNS);\n};\n\n// Add smooth zoom transition helper\nexport const interpolateZoom = (\n  currentZoom: number,\n  targetZoom: number,\n  progress: number\n): number => {\n  return currentZoom + (targetZoom - currentZoom) * progress;\n};\n\nexport const calculateGapSize = (zoom: number): number => {\n  // Normalize zoom level\n  const normalizedZoom = Math.max(MIN_ZOOM, Math.min(MAX_ZOOM, zoom));\n  \n  // Calculate base gap size with finer granularity\n  const zoomFactor = (normalizedZoom - MIN_ZOOM) / (MAX_ZOOM - MIN_ZOOM);\n  const baseGap = BASE_GAP * (1 + zoomFactor * 0.25);\n  \n  // Round to nearest even number to ensure consistent spacing\n  const roundedGap = Math.round(baseGap * 2) / 2;\n  \n  // Ensure gap stays within bounds\n  return Math.min(Math.max(roundedGap, MIN_GAP), MAX_GAP);\n};\n\n// Optimized aspect ratio calculation with caching\nconst getAspectRatio = (image: ImageInfo): number => {\n  let ratio = aspectRatioCache.get(image);\n  if (!ratio) {\n    ratio = image.width / image.height;\n    aspectRatioCache.set(image, ratio);\n  }\n  return ratio;\n};\n\n// Batch process aspect ratios\nconst batchProcessAspectRatios = (images: ImageInfo[]): number[] => {\n  return images.map(getAspectRatio);\n};\n\n// Optimized image dimensions calculation with caching\nexport const calculateImageDimensions = (\n  image: ImageInfo,\n  containerWidth: number,\n  zoom: number\n): ImageDimensions => {\n  const cacheKey = generateCacheKey([image], containerWidth, zoom, 'dimensions');\n  const cachedDimensions = dimensionsCache.get(cacheKey, containerWidth);\n  \n  if (cachedDimensions) {\n    return cachedDimensions;\n  }\n\n  const aspectRatio = getAspectRatio(image);\n  const normalizedZoom = Math.max(MIN_ZOOM, Math.min(MAX_ZOOM, zoom));\n  \n  const maxWidth = Math.min(containerWidth, MIN_IMAGE_WIDTH * MAX_COLUMNS);\n  const baseWidth = Math.min(\n    Math.max(MIN_IMAGE_WIDTH * normalizedZoom, containerWidth / MAX_COLUMNS),\n    maxWidth\n  );\n  \n  const width = Math.round(baseWidth);\n  const height = Math.round(width / aspectRatio);\n\n  const dimensions = { width, height, aspectRatio };\n  dimensionsCache.set(cacheKey, dimensions, containerWidth);\n\n  return dimensions;\n};\n\nexport const detectOverflow = (\n  images: ImageInfo[],\n  containerWidth: number,\n  zoom: number\n): boolean => {\n  const gap = calculateGapSize(zoom);\n  const totalWidth = images.reduce((sum, image) => {\n    const { width } = calculateImageDimensions(image, containerWidth, zoom);\n    return sum + width + gap;\n  }, -gap); // Subtract last gap\n\n  return totalWidth > containerWidth;\n};\n\n// Add new helper function for calculating optimal row distribution\nconst calculateOptimalDistribution = (\n  images: ImageInfo[],\n  containerWidth: number,\n  zoom: number,\n  gap: number\n): { idealHeight: number; widths: number[] } => {\n  const aspectRatios = batchProcessAspectRatios(images);\n  const totalAspectRatio = aspectRatios.reduce((sum, ratio) => sum + ratio, 0);\n  const totalGapWidth = Math.max(0, (images.length - 1) * gap);\n  const availableWidth = Math.max(0, containerWidth - totalGapWidth);\n  \n  // Calculate ideal height that would make images fill the width perfectly\n  const idealHeight = availableWidth / totalAspectRatio;\n  \n  // Calculate widths based on aspect ratios and ideal height\n  const widths = aspectRatios.map(ratio => Math.floor(idealHeight * ratio));\n  \n  return { idealHeight, widths };\n};\n\n// Enhanced checkRowFit function\nconst checkRowFit = (\n  images: ImageInfo[],\n  containerWidth: number,\n  zoom: number,\n  gap: number\n): { fits: boolean; idealHeight: number; predictedWidths: number[] } => {\n  const { idealHeight, widths } = calculateOptimalDistribution(images, containerWidth, zoom, gap);\n  const minWidth = MIN_IMAGE_WIDTH * zoom;\n  \n  // Check if any image would be too narrow based on aspect ratio\n  const allImagesWideEnough = widths.every(width => width >= minWidth);\n  \n  // Calculate total width including gaps\n  const totalWidth = widths.reduce((sum, width) => sum + width, 0) + \n    (images.length - 1) * gap;\n  \n  return {\n    fits: allImagesWideEnough && totalWidth <= containerWidth,\n    idealHeight,\n    predictedWidths: widths\n  };\n};\n\n// Update distributeImages function\nexport const distributeImages = (\n  images: ImageInfo[],\n  containerWidth: number,\n  zoom: number,\n  targetRowHeight: number = 200\n): RowConfig[] => {\n  if (containerWidth <= 0 || images.length === 0) {\n    console.warn('Invalid input detected');\n    return [];\n  }\n\n  const sortedImages = getSortedImages(images);\n  const gap = calculateGapSize(zoom);\n  const rows: RowConfig[] = [];\n  let currentRow: ImageInfo[] = [];\n  let currentRowAspectRatio = 0;\n  \n  for (let i = 0; i < sortedImages.length; i++) {\n    const testRow = [...currentRow, sortedImages[i]];\n    const { fits, idealHeight, predictedWidths } = checkRowFit(testRow, containerWidth, zoom, gap);\n    \n    if (!fits && currentRow.length > 0) {\n      // Create row with current images\n      const { idealHeight: currentHeight, widths: currentWidths } = \n        calculateOptimalDistribution(currentRow, containerWidth, zoom, gap);\n      \n      rows.push({\n        width: containerWidth,\n        height: Math.floor(currentHeight),\n        gap,\n        images: currentRow,\n        imageWidths: currentWidths,\n        offset: 0\n      });\n      \n      // Start new row with current image\n      currentRow = [sortedImages[i]];\n      currentRowAspectRatio = getAspectRatio(sortedImages[i]);\n    } else {\n      // Add image to current row\n      currentRow = testRow;\n      currentRowAspectRatio += getAspectRatio(sortedImages[i]);\n    }\n  }\n\n  // Handle last row\n  if (currentRow.length > 0) {\n    const { idealHeight, widths } = calculateOptimalDistribution(currentRow, containerWidth, zoom, gap);\n    rows.push({\n      width: containerWidth,\n      height: Math.floor(idealHeight),\n      gap,\n      images: currentRow,\n      imageWidths: widths,\n      offset: 0\n    });\n  }\n\n  return rows;\n};\n\n// Helper function to create a centered row\nconst createCenteredRow = (\n  images: ImageInfo[],\n  containerWidth: number,\n  zoom: number,\n  gap: number\n): RowConfig => {\n  const aspectRatios = batchProcessAspectRatios(images);\n  const totalAspectRatio = aspectRatios.reduce((sum, ratio) => sum + ratio, 0);\n  \n  // Calculate total gap width for all spaces between images\n  const totalGapWidth = Math.max(0, (images.length - 1) * gap);\n  \n  // Calculate actual width available for images by subtracting gaps\n  const availableWidth = Math.max(0, containerWidth - totalGapWidth);\n  \n  // Calculate row height based on available width for images only\n  const idealHeight = availableWidth / totalAspectRatio;\n  \n  // Calculate image widths based on aspect ratios and available width\n  const imageWidths = aspectRatios.map(ratio => Math.floor(idealHeight * ratio));\n  \n  // Calculate actual total width including gaps\n  const totalWidth = imageWidths.reduce((sum, width) => sum + width, 0) + totalGapWidth;\n  \n  // Distribute any remaining pixels to prevent rounding issues\n  const remainingPixels = containerWidth - totalWidth;\n  if (remainingPixels > 0 && imageWidths.length > 0) {\n    // Add remaining pixels to the first image to maintain alignment\n    imageWidths[0] += remainingPixels;\n  }\n  \n  // Calculate centering offset\n  const offset = Math.floor((containerWidth - totalWidth) / 2);\n  \n  return {\n    width: containerWidth,\n    height: Math.floor(idealHeight),\n    gap,\n    images,\n    imageWidths,\n    offset\n  };\n};\n\n// Optimized row layout calculation\nexport const optimizeRowLayout = (\n  row: RowConfig,\n  containerWidth: number,\n  zoom: number\n): RowConfig => {\n  if (containerWidth <= 0) {\n    console.warn('Invalid container width detected in optimizeRowLayout');\n    return row;\n  }\n\n  const cacheKey = generateCacheKey(row.images, containerWidth, zoom, 'row');\n  const cachedLayout = rowLayoutCache.get(cacheKey, containerWidth);\n  if (cachedLayout) {\n    return cachedLayout;\n  }\n\n  const normalizedZoom = Math.max(MIN_ZOOM, Math.min(MAX_ZOOM, zoom));\n  const baseGap = calculateGapSize(normalizedZoom);\n  \n  // Ensure integer gaps to prevent rounding issues\n  const gap = Math.round(baseGap);\n  \n  // Calculate total gap width for all spaces between images\n  const totalGapWidth = Math.max(0, (row.images.length - 1) * gap);\n  \n  // Calculate actual width available for images by subtracting all gaps\n  const availableWidth = Math.max(0, containerWidth - totalGapWidth);\n  \n  const aspectRatios = batchProcessAspectRatios(row.images);\n  const totalAspectRatio = aspectRatios.reduce((sum, ratio) => sum + ratio, 0);\n  \n  // Calculate ideal height based on available width for images only\n  const idealHeight = availableWidth / totalAspectRatio;\n  const minRequiredHeight = MIN_IMAGE_WIDTH * zoom / Math.max(...aspectRatios);\n  const maxAllowedHeight = availableWidth / totalAspectRatio;\n  const rowHeight = Math.round(Math.max(minRequiredHeight, Math.min(maxAllowedHeight, idealHeight)));\n\n  // Calculate initial image widths based on aspect ratios\n  const imageWidths = aspectRatios.map(ratio => Math.floor(rowHeight * ratio));\n  \n  // Calculate total width of all images\n  const totalImageWidth = imageWidths.reduce((sum, width) => sum + width, 0);\n  \n  // Calculate the remaining width to distribute\n  const remainingWidth = availableWidth - totalImageWidth;\n  \n  if (remainingWidth !== 0 && imageWidths.length > 0) {\n    // Distribute remaining width evenly among all images\n    const widthPerImage = Math.floor(remainingWidth / imageWidths.length);\n    const extraPixels = remainingWidth % imageWidths.length;\n    \n    // Add base distribution to all images\n    imageWidths.forEach((_, index) => {\n      imageWidths[index] += widthPerImage;\n    });\n    \n    // Add any extra pixels to the first few images\n    for (let i = 0; i < extraPixels; i++) {\n      imageWidths[i] += 1;\n    }\n  }\n\n  // Verify total width matches container width exactly\n  const finalTotalWidth = imageWidths.reduce((sum, width) => sum + width, 0) + totalGapWidth;\n  if (finalTotalWidth !== containerWidth && imageWidths.length > 0) {\n    // Add any remaining pixels to the first image\n    const diff = containerWidth - finalTotalWidth;\n    imageWidths[0] += diff;\n  }\n\n  const optimizedRow = {\n    ...row,\n    width: containerWidth,\n    height: rowHeight,\n    gap,\n    imageWidths\n  };\n\n  rowLayoutCache.set(cacheKey, optimizedRow, containerWidth);\n  return optimizedRow;\n};\n\n// Layout calculation for different view modes\nexport const calculateLayout = (config: LayoutConfig) => {\n  const { containerWidth, zoom, viewMode, isGrouped } = config;\n  const columns = calculateColumns(containerWidth, zoom);\n  const gap = calculateGapSize(zoom);\n\n  return {\n    columns,\n    gap,\n    minImageWidth: MIN_IMAGE_WIDTH * zoom,\n    maxImageWidth: containerWidth / columns - gap,\n  };\n};\n\n// Utility function for maintaining aspect ratio\nexport const maintainAspectRatio = (\n  image: ImageInfo,\n  containerWidth: number,\n  containerHeight: number\n): { width: number; height: number } => {\n  const aspectRatio = getAspectRatio(image);\n  const containerRatio = containerWidth / containerHeight;\n\n  if (aspectRatio > containerRatio) {\n    return {\n      width: containerWidth,\n      height: Math.round(containerWidth / aspectRatio),\n    };\n  }\n\n  return {\n    width: Math.round(containerHeight * aspectRatio),\n    height: containerHeight,\n  };\n}; ","import gsap from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport { CustomEase } from 'gsap/CustomEase';\n\ngsap.registerPlugin(ScrollTrigger, CustomEase);\n\ninterface AnimationState {\n  energy: number;\n  activeItems: Set<string>;\n  timeline: gsap.core.Timeline;\n  ripples: Map<\n    string,\n    {\n      x: number;\n      y: number;\n      strength: number;\n      timestamp: number;\n    }\n  >;\n  spatialGrid: Map<string, Set<string>>;\n  colorEnergy: number;\n}\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\nexport class AnimationSystem {\n  private static instance: AnimationSystem;\n  private state: AnimationState;\n  private readonly MAX_ENERGY = 100;\n  private readonly MIN_ENERGY = 20;\n  private readonly ENERGY_DECAY_RATE = 0.95;\n  private readonly ENERGY_BOOST = 25;\n  private readonly RIPPLE_DURATION = 1.5;\n  private readonly BREATHING_INTENSITY = 0.02;\n  private readonly GRID_SIZE = 200; // pixels per grid cell\n  private readonly MAX_RIPPLES = 5;\n  private readonly RIPPLE_LIFETIME = 2000; // milliseconds\n\n  private constructor() {\n    this.state = {\n      energy: this.MIN_ENERGY,\n      activeItems: new Set(),\n      timeline: gsap.timeline(),\n      ripples: new Map(),\n      spatialGrid: new Map(),\n      colorEnergy: 0,\n    };\n\n    this.startEnergyDecay();\n    this.initializeCustomEases();\n  }\n\n  private initializeCustomEases() {\n    CustomEase.create(\n      'rippleOut',\n      'M0,0 C0.126,0.382 0.282,0.674 0.44,0.822 0.632,1.002 0.818,1 1,1'\n    );\n    CustomEase.create(\n      'energyPulse',\n      'M0,0 C0.39,0 0.575,0.565 0.669,0.782 0.762,1 0.846,1 1,1'\n    );\n  }\n\n  static getInstance(): AnimationSystem {\n    if (!AnimationSystem.instance) {\n      AnimationSystem.instance = new AnimationSystem();\n    }\n    return AnimationSystem.instance;\n  }\n\n  private startEnergyDecay() {\n    gsap.ticker.add(() => {\n      this.state.energy = Math.max(\n        this.MIN_ENERGY,\n        this.state.energy * this.ENERGY_DECAY_RATE\n      );\n\n      // Clean up old ripples\n      const now = Date.now();\n      for (const [id, ripple] of this.state.ripples.entries()) {\n        if (now - ripple.timestamp > this.RIPPLE_LIFETIME) {\n          this.state.ripples.delete(id);\n        }\n      }\n    });\n  }\n\n  addEnergy(amount: number = this.ENERGY_BOOST) {\n    this.state.energy = Math.min(this.MAX_ENERGY, this.state.energy + amount);\n  }\n\n  getEnergy(): number {\n    return this.state.energy;\n  }\n\n  getAnimationProperties(itemId: string): gsap.TweenVars {\n    const energy = this.state.energy;\n    const isActive = this.state.activeItems.has(itemId);\n\n    return {\n      duration: 0.3 + (1 - energy / this.MAX_ENERGY) * 0.7,\n      ease: energy > 70 ? 'elastic.out(1, 0.3)' : 'power2.out',\n      transformOrigin: 'center center',\n      // Add subtle movement based on energy\n      scale: 1 + (energy / this.MAX_ENERGY) * 0.05,\n      rotation: isActive\n        ? (Math.random() > 0.5 ? 1 : -1) * (energy / this.MAX_ENERGY) * 2\n        : 0,\n    };\n  }\n\n  private calculateRippleEffect(element: HTMLElement): {\n    scale: number;\n    rotation: number;\n    blur: number;\n    brightness: number;\n    translateZ: number;\n  } {\n    const rect = element.getBoundingClientRect();\n    const elementCenter = {\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2,\n    };\n\n    let totalEffect = {\n      scale: 1,\n      rotation: 0,\n      blur: 0,\n      brightness: 1,\n      translateZ: 0,\n    };\n\n    // Calculate combined effect of all active ripples\n    for (const ripple of this.state.ripples.values()) {\n      const distance = Math.hypot(\n        elementCenter.x - ripple.x,\n        elementCenter.y - ripple.y\n      );\n\n      const maxDistance = Math.max(window.innerWidth, window.innerHeight) * 0.5;\n      const normalizedDistance = Math.max(0, 1 - distance / maxDistance);\n      const rippleAge = (Date.now() - ripple.timestamp) / this.RIPPLE_LIFETIME;\n      const rippleStrength =\n        ripple.strength * (1 - rippleAge) * normalizedDistance;\n\n      totalEffect.scale += rippleStrength * 0.1;\n      totalEffect.rotation +=\n        rippleStrength * 5 * (Math.random() > 0.5 ? 1 : -1);\n      totalEffect.blur += rippleStrength * 2;\n      totalEffect.brightness += rippleStrength * 0.1;\n      totalEffect.translateZ += rippleStrength * 20;\n    }\n\n    const energyFactor = this.state.energy / this.MAX_ENERGY;\n    totalEffect.scale *= 1 + energyFactor * 0.1;\n    totalEffect.blur *= energyFactor;\n    totalEffect.brightness *= 1 + energyFactor * 0.2;\n\n    return totalEffect;\n  }\n\n  createBreathingAnimation(element: HTMLElement, itemId: string) {\n    const timeline = gsap.timeline({ repeat: -1 });\n    this.updateSpatialGrid(element, itemId);\n\n    const updateBreathing = () => {\n      const effects = this.calculateRippleEffect(element);\n      const energyFactor = this.state.energy / this.MAX_ENERGY;\n      const breathingIntensity = this.BREATHING_INTENSITY * (1 + energyFactor);\n\n      timeline\n        .to(element, {\n          scale: effects.scale * (1 + breathingIntensity),\n          rotation: effects.rotation,\n          filter: `blur(${effects.blur}px) brightness(${effects.brightness})`,\n          transform: `perspective(1000px) translateZ(${effects.translateZ}px)`,\n          duration: 2,\n          ease: 'energyPulse',\n        })\n        .to(element, {\n          scale: effects.scale,\n          rotation: 0,\n          filter: `blur(0px) brightness(1)`,\n          transform: 'perspective(1000px) translateZ(0)',\n          duration: 2,\n          ease: 'rippleOut',\n        });\n    };\n\n    gsap.ticker.add(updateBreathing);\n    return timeline;\n  }\n\n  createHoverAnimation(element: HTMLElement, itemId: string) {\n    this.state.activeItems.add(itemId);\n    this.addEnergy();\n\n    const energy = this.state.energy;\n    const intensity = energy / this.MAX_ENERGY;\n    const rippleEffect = this.calculateRippleEffect(element);\n\n    return gsap.to(element, {\n      scale: (1.05 + intensity * 0.05) * rippleEffect.scale,\n      rotationX: Math.random() * 10 - 5,\n      rotationY: Math.random() * 10 - 5,\n      rotation: rippleEffect.rotation,\n      duration: 0.3,\n      ease: 'power2.out',\n      onComplete: () => {\n        this.state.activeItems.delete(itemId);\n      },\n    });\n  }\n\n  createProximityAnimation(\n    element: HTMLElement,\n    itemId: string,\n    x: number,\n    y: number\n  ) {\n    const rect = element.getBoundingClientRect();\n    const globalX = rect.left + (x * rect.width) / 100;\n    const globalY = rect.top + (y * rect.height) / 100;\n\n    // Add a weak ripple effect for proximity\n    this.addRipple(globalX, globalY, 0.3);\n\n    const distance = Math.hypot(x - 50, y - 50);\n    const intensity = 1 - distance / 150;\n    const energy = this.state.energy / this.MAX_ENERGY;\n    const rippleEffect = this.calculateRippleEffect(element);\n\n    return gsap.to(element, {\n      duration: 0.5,\n      rotationX: (y - 50) * 0.1 * intensity * energy,\n      rotationY: (x - 50) * 0.1 * intensity * energy,\n      scale: rippleEffect.scale * (1 + 0.05 * intensity * energy),\n      rotation: rippleEffect.rotation,\n      ease: 'power2.out',\n      transformOrigin: 'center center',\n    });\n  }\n\n  createMorphAnimation(element: HTMLElement, itemId: string) {\n    const energy = this.state.energy;\n    const intensity = energy / this.MAX_ENERGY;\n    const rippleEffect = this.calculateRippleEffect(element);\n\n    return gsap.to(element, {\n      duration: 0.5,\n      scale: rippleEffect.scale,\n      rotation: rippleEffect.rotation,\n      borderRadius: `${8 + intensity * 12}px`,\n      boxShadow: `0 ${4 + intensity * 8}px ${\n        12 + intensity * 16\n      }px rgba(0,0,0,${0.1 + intensity * 0.1})`,\n      ease: 'power2.out',\n    });\n  }\n\n  private updateSpatialGrid(element: HTMLElement, itemId: string) {\n    const rect = element.getBoundingClientRect();\n    const gridX = Math.floor(rect.left / this.GRID_SIZE);\n    const gridY = Math.floor(rect.top / this.GRID_SIZE);\n    const gridKey = `${gridX},${gridY}`;\n\n    // Remove from old grid positions\n    this.state.spatialGrid.forEach((items, key) => {\n      items.delete(itemId);\n      if (items.size === 0) {\n        this.state.spatialGrid.delete(key);\n      }\n    });\n\n    // Add to new grid position\n    if (!this.state.spatialGrid.has(gridKey)) {\n      this.state.spatialGrid.set(gridKey, new Set());\n    }\n    this.state.spatialGrid.get(gridKey)!.add(itemId);\n  }\n\n  private getNearbyItems(point: Point): string[] {\n    const gridX = Math.floor(point.x / this.GRID_SIZE);\n    const gridY = Math.floor(point.y / this.GRID_SIZE);\n    const nearby = new Set<string>();\n\n    // Check surrounding grid cells\n    for (let dx = -1; dx <= 1; dx++) {\n      for (let dy = -1; dy <= 1; dy++) {\n        const key = `${gridX + dx},${gridY + dy}`;\n        const items = this.state.spatialGrid.get(key);\n        if (items) {\n          items.forEach((id) => nearby.add(id));\n        }\n      }\n    }\n\n    return Array.from(nearby);\n  }\n\n  addRipple(x: number, y: number, strength: number = 1) {\n    const rippleId = Date.now().toString();\n    if (this.state.ripples.size >= this.MAX_RIPPLES) {\n      // Remove oldest ripple\n      const oldest = Array.from(this.state.ripples.entries()).sort(\n        ([, a], [, b]) => a.timestamp - b.timestamp\n      )[0][0];\n      this.state.ripples.delete(oldest);\n    }\n\n    this.state.ripples.set(rippleId, {\n      x,\n      y,\n      strength,\n      timestamp: Date.now(),\n    });\n  }\n\n  updateColorEnergy() {\n    const hue = (this.state.colorEnergy * 360) % 360;\n    document.documentElement.style.setProperty('--energy-hue', hue.toString());\n    this.state.colorEnergy += 0.001 * (this.state.energy / this.MAX_ENERGY);\n  }\n\n  getRipples(): Array<{\n    x: number;\n    y: number;\n    strength: number;\n    timestamp: number;\n  }> {\n    return Array.from(this.state.ripples.values());\n  }\n}\n\nexport default AnimationSystem;\n","import React, { memo, useState, useEffect, useRef, useMemo, useCallback } from 'react';\nimport { motion, useAnimation, AnimatePresence, MotionStyle } from 'framer-motion';\nimport { useIntersectionObserver } from '../hooks/useIntersectionObserver.js';\nimport { truncateImageTitle } from '../utils/stringUtils.js';\nimport styles from \"../styles/ImageItem.module.scss\";\nimport { ImageInfo } from \"../types.js\";\nimport { maintainAspectRatio } from '../utils/layoutCalculator';\nimport throttle from 'lodash/throttle';\nimport gsap from 'gsap';\nimport AnimationSystem from '../utils/AnimationSystem';\n\ninterface CustomMotionStyle extends MotionStyle {\n  '--mouse-x'?: string;\n  '--mouse-y'?: string;\n}\n\ninterface ImageItemProps {\n  image: ImageInfo;\n  onClick: (image: ImageInfo) => void;\n  containerWidth: number;\n  containerHeight: number;\n  zoom: number;\n  groupCount?: number;\n  imageProcessor: any;\n  onResize?: (width: number, height: number) => void;\n  width: number;\n  height: number;\n  isCarousel: boolean;\n  groupImages: ImageInfo[];\n  processedImage?: {\n    low: string;\n    high: string;\n  };\n  onRipple?: (x: number, y: number, strength: number) => void;\n}\n\nconst ImageItem: React.FC<ImageItemProps> = ({\n  image,\n  onClick,\n  containerWidth,\n  containerHeight,\n  zoom,\n  groupCount,\n  imageProcessor,\n  onResize,\n  width,\n  height,\n  isCarousel,\n  groupImages,\n  processedImage,\n  onRipple,\n}) => {\n  const controls = useAnimation();\n  const imageRef = useRef<HTMLImageElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [currentImage, setCurrentImage] = useState(processedImage?.low || image.src);\n  const animationSystem = useMemo(() => AnimationSystem.getInstance(), []);\n  const breathingAnimation = useRef<gsap.core.Timeline>();\n  const [gestureEnergy, setGestureEnergy] = useState(0);\n  const gestureTimeoutRef = useRef<number>();\n  const lastMousePosition = useRef<{ x: number; y: number } | null>(null);\n  const velocityRef = useRef<{ x: number; y: number }>({ x: 0, y: 0 });\n  \n  const [ref, isIntersecting] = useIntersectionObserver({\n    threshold: 0.1,\n    rootMargin: '50px',\n    triggerOnce: false\n  });\n\n  // Memoized dimensions calculation\n  const dimensions = useMemo(() => \n    maintainAspectRatio(image, containerWidth, containerHeight),\n    [image, containerWidth, containerHeight]\n  );\n\n  // Notify parent of size changes using cached dimensions\n  useEffect(() => {\n    if (onResize) {\n      onResize(dimensions.width, dimensions.height);\n    }\n  }, [dimensions.width, dimensions.height, onResize]);\n\n  // Initialize breathing animation\n  useEffect(() => {\n    if (containerRef.current && isLoaded) {\n      breathingAnimation.current = animationSystem.createBreathingAnimation(\n        containerRef.current,\n        image.id\n      );\n    }\n\n    return () => {\n      breathingAnimation.current?.kill();\n    };\n  }, [isLoaded, image.id, animationSystem]);\n\n  // Enhanced hover animation\n  const handleHoverStart = useCallback(() => {\n    setIsHovered(true);\n    if (containerRef.current) {\n      breathingAnimation.current?.pause();\n      gsap.to(containerRef.current, {\n        scale: 1.05,\n        duration: 0.2,\n        ease: \"power2.out\",\n        overwrite: true\n      });\n    }\n  }, []);\n\n  const handleHoverEnd = useCallback(() => {\n    setIsHovered(false);\n    if (containerRef.current) {\n      breathingAnimation.current?.resume();\n      gsap.to(containerRef.current, {\n        scale: 1,\n        rotationX: 0,\n        rotationY: 0,\n        duration: 0.15,\n        ease: \"power1.out\",\n        overwrite: true\n      });\n    }\n  }, []);\n\n  // Enhanced gesture tracking with optimized performance\n  const handleMouseMove = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!containerRef.current) return;\n    \n    const rect = containerRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const normalizedX = (x / rect.width) * 100;\n    const normalizedY = (y / rect.height) * 100;\n\n    // Calculate velocity with smoothing\n    if (lastMousePosition.current) {\n      const dx = e.clientX - lastMousePosition.current.x;\n      const dy = e.clientY - lastMousePosition.current.y;\n      \n      // Smooth out velocity changes\n      velocityRef.current = {\n        x: velocityRef.current.x * 0.8 + dx * 0.2,\n        y: velocityRef.current.y * 0.8 + dy * 0.2\n      };\n\n      const speed = Math.hypot(velocityRef.current.x, velocityRef.current.y);\n      \n      // Only trigger ripple effect for significant movements\n      if (speed > 3 && onRipple) {\n        onRipple(e.clientX, e.clientY, Math.min(speed / 15, 1));\n      }\n\n      // Smoother energy updates\n      const newEnergy = Math.min(100, gestureEnergy + speed / 15);\n      setGestureEnergy(newEnergy);\n\n      if (gestureTimeoutRef.current) {\n        window.clearTimeout(gestureTimeoutRef.current);\n      }\n\n      // Gradual energy decay\n      gestureTimeoutRef.current = window.setTimeout(() => {\n        setGestureEnergy(prev => Math.max(0, prev * 0.9));\n      }, 50);\n\n      // Quick tilt response\n      gsap.to(containerRef.current, {\n        rotationX: (normalizedY - 50) * 0.1,\n        rotationY: (normalizedX - 50) * 0.1,\n        duration: 0.15,\n        ease: \"power1.out\",\n        overwrite: true\n      });\n    }\n\n    lastMousePosition.current = { x: e.clientX, y: e.clientY };\n    \n    if (containerRef.current) {\n      containerRef.current.style.setProperty('--mouse-x', `${normalizedX}%`);\n      containerRef.current.style.setProperty('--mouse-y', `${normalizedY}%`);\n    }\n  }, [gestureEnergy, onRipple]);\n\n  // Clean up gesture tracking\n  useEffect(() => {\n    return () => {\n      if (gestureTimeoutRef.current) {\n        window.clearTimeout(gestureTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Enhanced zoom animation\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    const animation = gsap.to(containerRef.current, {\n      width: dimensions.width,\n      height: dimensions.height,\n      ...animationSystem.getAnimationProperties(image.id),\n      onComplete: () => {\n        if (containerRef.current) {\n          containerRef.current.style.willChange = 'auto';\n          animationSystem.createMorphAnimation(containerRef.current, image.id);\n        }\n      }\n    });\n\n    return () => {\n      animation.kill();\n    };\n  }, [dimensions.width, dimensions.height, zoom, image.id, animationSystem]);\n\n  // Process image when in view\n  useEffect(() => {\n    if (isIntersecting && imageProcessor) {\n      imageProcessor.postMessage({\n        action: 'processImage',\n        imageSrc: image.src,\n        width: Math.ceil(dimensions.width),\n        height: Math.ceil(dimensions.height)\n      });\n\n      const handleMessage = (event: MessageEvent) => {\n        if (event.data.action === 'imageProcessed') {\n          setCurrentImage(event.data.processedImage);\n        }\n      };\n\n      imageProcessor.addEventListener('message', handleMessage);\n      return () => imageProcessor.removeEventListener('message', handleMessage);\n    }\n  }, [isIntersecting, image.src, dimensions.width, dimensions.height, imageProcessor]);\n\n  useEffect(() => {\n    if (processedImage?.high && isLoaded) {\n      setCurrentImage(processedImage.high);\n    }\n  }, [processedImage, isLoaded]);\n\n  return (\n    <motion.div\n      ref={containerRef}\n      className={styles.imageItem}\n      style={{\n        width: dimensions.width,\n        height: dimensions.height,\n        overflow: 'hidden',\n        borderRadius: '8px',\n        transformOrigin: 'center center',\n        willChange: 'transform',\n        position: 'relative',\n        backfaceVisibility: 'hidden',\n        WebkitBackfaceVisibility: 'hidden',\n        perspective: 1000,\n        WebkitPerspective: 1000,\n        '--mouse-x': '50%',\n        '--mouse-y': '50%',\n        transition: 'transform 0.15s ease-out'\n      } as CustomMotionStyle}\n      onMouseMove={handleMouseMove}\n      onMouseLeave={handleHoverEnd}\n      onHoverStart={handleHoverStart}\n      onHoverEnd={handleHoverEnd}\n      onClick={() => {\n        animationSystem.addEnergy();\n        onClick(image);\n      }}\n      layout=\"position\"\n      layoutDependency={zoom}\n    >\n      <motion.div \n        className={styles.imageWrapper}\n        layout\n        style={{\n          width: '100%',\n          height: '100%',\n          position: 'relative'\n        }}\n      >\n        <motion.img\n          ref={imageRef}\n          src={currentImage}\n          alt={image.alt}\n          className={styles.image}\n          loading=\"lazy\"\n          style={{\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover',\n            willChange: 'transform',\n            backfaceVisibility: 'hidden',\n            WebkitBackfaceVisibility: 'hidden'\n          }}\n          layoutId={`image-${image.id}`}\n          onLoad={() => setIsLoaded(true)}\n          initial={{ opacity: 0 }}\n          animate={{ \n            opacity: isLoaded ? 1 : 0,\n            scale: isLoaded ? 1 : 0.95\n          }}\n          transition={{ \n            duration: 0.3,\n            ease: \"easeOut\"\n          }}\n        />\n        \n        <AnimatePresence>\n          {groupCount && groupCount > 1 && (\n            <motion.div\n              className={styles.groupCounter}\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0.8 }}\n            >\n              {groupCount}\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {isCarousel && groupImages.length > 1 && (\n          <div className={styles.carouselIndicator}>\n            {groupImages.length}\n          </div>\n        )}\n\n        <motion.div\n          className={styles.imageTitle}\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ \n            opacity: isHovered ? 1 : 0, \n            y: isHovered ? 0 : 20 \n          }}\n          transition={{\n            duration: 0.2,\n            ease: \"easeOut\"\n          }}\n        >\n          {truncateImageTitle(image.alt)}\n        </motion.div>\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default memo(ImageItem, (prevProps, nextProps) => {\n  return (\n    prevProps.image.src === nextProps.image.src &&\n    prevProps.containerWidth === nextProps.containerWidth &&\n    prevProps.containerHeight === nextProps.containerHeight &&\n    prevProps.zoom === nextProps.zoom &&\n    prevProps.groupCount === nextProps.groupCount &&\n    prevProps.width === nextProps.width &&\n    prevProps.height === nextProps.height &&\n    prevProps.isCarousel === nextProps.isCarousel &&\n    prevProps.groupImages.length === nextProps.groupImages.length &&\n    prevProps.processedImage === nextProps.processedImage\n  );\n});\n","import { useEffect, useState, useRef } from \"react\";\n\nexport function useIntersectionObserver(options = {}) {\n  const [isIntersecting, setIsIntersecting] = useState(false);\n  const targetRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      setIsIntersecting(entry.isIntersecting);\n    }, options);\n\n    if (targetRef.current) {\n      observer.observe(targetRef.current);\n    }\n\n    return () => {\n      if (targetRef.current) {\n        observer.unobserve(targetRef.current);\n      }\n    };\n  }, [options]);\n\n  return [targetRef, isIntersecting];\n}\n","import React, { useRef, useEffect, useState, useMemo } from \"react\";\nimport useWindowSize from \"../hooks/useWindowSize.js\";\nimport { ImageInfo } from \"../types.js\";\nimport ImageItem from \"./ImageItem.js\";\nimport styles from \"../styles/ImageRow.module.scss\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { createImageProcessor } from '../workers/imageProcessor';\nimport gsap from 'gsap';\nimport { calculateImageDimensions, optimizeRowLayout } from '../utils/layoutCalculator';\n\n// Define the props interface for the ImageRow component\ninterface ImageRowProps {\n  images: ImageInfo[];\n  onImageClick: (clickedImage: ImageInfo) => void;\n  columns: number;\n  zoom: number;\n  isLastRow: boolean;\n  rowHeight: number;\n  groupedImages: { key: string; images: ImageInfo[]; isCarousel: boolean }[];\n  processedImages: { [key: string]: { low: string; high: string } };\n  imageProcessor: ReturnType<typeof createImageProcessor>;\n  onImageOverflow?: (image: ImageInfo) => void;\n  gap: number;\n  containerWidth: number;\n}\n\n// Define the ImageRow component\nconst ImageRow: React.FC<ImageRowProps> = ({\n  images,\n  onImageClick,\n  columns,\n  zoom,\n  isLastRow,\n  rowHeight,\n  groupedImages,\n  processedImages,\n  imageProcessor,\n  onImageOverflow,\n  gap,\n  containerWidth,\n}) => {\n  const rowRef = useRef<HTMLDivElement>(null);\n  const [imageStates, setImageStates] = useState<Map<string, { width: number; height: number }>>(new Map());\n  const controls = useAnimation();\n  const [isOverflowing, setIsOverflowing] = useState(false);\n\n  // Reset image states when images or groups change\n  useEffect(() => {\n    setImageStates(new Map());\n    setIsOverflowing(false);\n  }, [images, groupedImages]);\n\n  const optimizedLayout = useMemo(() => {\n    if (!images.length) return null;\n    \n    const validImages = images.every(img => img.width > 0 && img.height > 0);\n    if (!validImages) return null;\n    \n    // Uses cached layout calculations\n    return optimizeRowLayout(\n      {\n        width: containerWidth,\n        height: rowHeight,\n        gap,\n        images,\n      },\n      containerWidth,\n      zoom\n    );\n  }, [containerWidth, rowHeight, gap, images.length, zoom]);\n\n  // Enhanced image width calculation with overflow detection\n  const imageWidths = useMemo(() => {\n    if (!optimizedLayout) return [];\n\n    const totalGapWidth = gap * (images.length - 1);\n    const availableWidth = Math.max(0, containerWidth - totalGapWidth);\n    \n    // Calculate aspect ratios once\n    const aspectRatios = images.map(image => image.width / image.height);\n    const totalAspectRatio = aspectRatios.reduce((sum, ratio) => sum + ratio, 0);\n    \n    // First pass: calculate proportional widths\n    const widths = aspectRatios.map(ratio => {\n      const proportion = ratio / totalAspectRatio;\n      return Math.floor(availableWidth * proportion);\n    });\n\n    // Check if total width exceeds container width\n    const totalWidth = widths.reduce((sum, width) => sum + width, 0) + totalGapWidth;\n    const newIsOverflowing = totalWidth > containerWidth;\n    \n    if (newIsOverflowing !== isOverflowing) {\n      setIsOverflowing(newIsOverflowing);\n      if (newIsOverflowing && onImageOverflow) {\n        onImageOverflow(images[images.length - 1]);\n      }\n    }\n\n    // Second pass: adjust widths to fit container exactly\n    if (newIsOverflowing || totalWidth < containerWidth) {\n      const remainingWidth = containerWidth - totalWidth;\n      const adjustmentPerImage = Math.floor(remainingWidth / images.length);\n      \n      return widths.map((width, index) => {\n        // Add any remaining pixels to the last image\n        if (index === widths.length - 1) {\n          const usedWidth = widths.slice(0, -1).reduce((sum, w) => sum + w + adjustmentPerImage, 0) + totalGapWidth;\n          return Math.max(0, containerWidth - usedWidth);\n        }\n        return Math.max(0, width + adjustmentPerImage);\n      });\n    }\n\n    return widths;\n  }, [images, containerWidth, gap, optimizedLayout, isOverflowing, onImageOverflow]);\n\n  // Handle image resize with debouncing\n  const createHandleImageResize = (imageId: string) => (width: number, height: number) => {\n    setImageStates((prev: Map<string, { width: number; height: number }>) => {\n      const newMap = new Map(prev);\n      newMap.set(imageId, { width, height });\n      return newMap;\n    });\n  };\n\n  if (!images || images.length === 0 || !optimizedLayout) {\n    return null;\n  }\n\n  return (\n    <motion.div\n      ref={rowRef}\n      className={styles.imageRow}\n      animate={controls}\n      initial={false}\n      style={{\n        display: 'flex',\n        gap: `${gap}px`,\n        height: `${optimizedLayout.height}px`,\n        marginBottom: `${gap}px`,\n        position: 'relative',\n        willChange: 'transform',\n        width: '100%',\n        maxWidth: `${containerWidth}px`,\n        overflow: 'hidden',\n        justifyContent: 'flex-start',\n        alignItems: 'stretch',\n        flexWrap: 'nowrap'\n      }}\n      layout\n      transition={{\n        type: \"spring\",\n        stiffness: 300,\n        damping: 30,\n      }}\n    >\n      {images.map((image, index) => {\n        const group = groupedImages.find(g => g.images.some(img => img.id === image.id));\n        const width = imageWidths[index];\n\n        if (!width) return null;\n\n        return (\n          <motion.div\n            key={image.id}\n            className={styles.imageWrapper}\n            style={{ \n              width: `${width}px`,\n              height: `${optimizedLayout.height}px`,\n              flexShrink: 0,\n              flexGrow: 0,\n              position: 'relative',\n              overflow: 'hidden'\n            }}\n            layout\n          >\n            <ImageItem\n              image={image}\n              onClick={() => onImageClick(image)}\n              containerWidth={width}\n              containerHeight={optimizedLayout.height}\n              width={width}\n              height={optimizedLayout.height}\n              zoom={zoom}\n              isCarousel={group?.isCarousel || false}\n              groupImages={group?.images || []}\n              processedImage={processedImages[image.id]}\n              imageProcessor={imageProcessor}\n              onResize={createHandleImageResize(image.id)}\n            />\n          </motion.div>\n        );\n      })}\n    </motion.div>\n  );\n};\n\nexport default ImageRow;\n","import { openDB, IDBPDatabase } from 'idb';\r\n\r\ninterface ImageProcessorMessage {\r\n  action: 'processImage' | 'processBatch' | 'imageProcessed';\r\n  images?: { id: string; src: string; width: number; height: number }[];\r\n  id?: string;\r\n  processedImage?: string;\r\n}\r\n\r\nclass ImageProcessor {\r\n  private worker: Worker;\r\n  private db: IDBPDatabase | null = null;\r\n  private messageQueue: ImageProcessorMessage[] = [];\r\n  private isProcessing = false;\r\n\r\n  constructor() {\r\n    this.worker = new Worker(new URL('./imageProcessorWorker.ts', import.meta.url));\r\n    this.initDB();\r\n    this.worker.onmessage = this.handleWorkerMessage.bind(this);\r\n  }\r\n\r\n  private async initDB() {\r\n    this.db = await openDB('imageCache', 1, {\r\n      upgrade(db) {\r\n        db.createObjectStore('images');\r\n      },\r\n    });\r\n  }\r\n\r\n  private async getCachedImage(id: string): Promise<string | null> {\r\n    if (!this.db) return null;\r\n    return this.db.get('images', id);\r\n  }\r\n\r\n  private async cacheImage(id: string, imageData: string) {\r\n    if (!this.db) return;\r\n    await this.db.put('images', imageData, id);\r\n  }\r\n\r\n  private async processNextMessage() {\r\n    if (this.isProcessing || this.messageQueue.length === 0) return;\r\n\r\n    this.isProcessing = true;\r\n    const message = this.messageQueue.shift()!;\r\n\r\n    if (message.action === 'processImage' && message.images) {\r\n      await this.processImage(message.images[0]);\r\n    } else if (message.action === 'processBatch' && message.images) {\r\n      await this.processBatch(message.images);\r\n    }\r\n\r\n    this.isProcessing = false;\r\n    this.processNextMessage();\r\n  }\r\n\r\n  private async processImage(image: { id: string; src: string; width: number; height: number }) {\r\n    const cachedImage = await this.getCachedImage(image.id);\r\n    if (cachedImage) {\r\n      this.postMessage({ action: 'imageProcessed', id: image.id, processedImage: cachedImage });\r\n    } else {\r\n      this.worker.postMessage({ action: 'processImage', ...image });\r\n    }\r\n  }\r\n\r\n  private async processBatch(images: { id: string; src: string; width: number; height: number }[]) {\r\n    const uncachedImages = [];\r\n    for (const image of images) {\r\n      const cachedImage = await this.getCachedImage(image.id);\r\n      if (cachedImage) {\r\n        this.postMessage({ action: 'imageProcessed', id: image.id, processedImage: cachedImage });\r\n      } else {\r\n        uncachedImages.push(image);\r\n      }\r\n    }\r\n    if (uncachedImages.length > 0) {\r\n      this.worker.postMessage({ action: 'processBatch', images: uncachedImages });\r\n    }\r\n  }\r\n\r\n  private handleWorkerMessage(event: MessageEvent) {\r\n    if (event.data.action === 'imageProcessed') {\r\n      this.cacheImage(event.data.id, event.data.processedImage);\r\n      this.postMessage(event.data);\r\n    }\r\n  }\r\n\r\n  public postMessage(message: ImageProcessorMessage) {\r\n    this.messageQueue.push(message);\r\n    this.processNextMessage();\r\n  }\r\n\r\n  public terminate() {\r\n    this.worker.terminate();\r\n  }\r\n}\r\n\r\nexport function createImageProcessor() {\r\n  return new ImageProcessor();\r\n}\r\n","import React from 'react';\r\nimport { ImageInfo } from '../../types';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface BannerViewProps {\r\n  images: ImageInfo[];\r\n  zoom: number;\r\n}\r\n\r\nconst BannerView: React.FC<BannerViewProps> = ({ images, zoom }) => {\r\n  if (!images.length) {\r\n    return <div className=\"text-center text-gray-500 mt-8\">No images to display</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"banner-view space-y-4\">\r\n      {images.map((image, index) => (\r\n        <motion.div\r\n          key={image.id}\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5, delay: index * 0.1 }}\r\n          className=\"banner-item relative\"\r\n        >\r\n          <div \r\n            className=\"banner-image-container w-full h-[300px] rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300\"\r\n            style={{ height: `${300 * zoom}px` }}\r\n          >\r\n            <img\r\n              src={image.src}\r\n              alt={image.alt}\r\n              className=\"w-full h-full object-cover\"\r\n            />\r\n            <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-4\">\r\n              <h3 className=\"text-white text-lg font-semibold\">{image.title}</h3>\r\n              <p className=\"text-white/80 text-sm\">\r\n                {image.width} × {image.height}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BannerView; ","import React from 'react';\r\nimport { ImageInfo } from '../../types';\r\nimport Masonry from 'react-masonry-css';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface MasonryViewProps {\r\n  images: ImageInfo[];\r\n  zoom: number;\r\n}\r\n\r\nconst MasonryView: React.FC<MasonryViewProps> = ({ images, zoom }) => {\r\n  const breakpointColumns = {\r\n    default: 4,\r\n    1536: 4,\r\n    1280: 3,\r\n    1024: 3,\r\n    768: 2,\r\n    640: 1\r\n  };\r\n\r\n  if (!images.length) {\r\n    return <div className=\"text-center text-gray-500 mt-8\">No images to display</div>;\r\n  }\r\n\r\n  return (\r\n    <Masonry\r\n      breakpointCols={breakpointColumns}\r\n      className=\"flex -ml-4 w-auto\"\r\n      columnClassName=\"pl-4 bg-clip-padding\"\r\n    >\r\n      {images.map((image, index) => (\r\n        <motion.div\r\n          key={image.id}\r\n          initial={{ opacity: 0, scale: 0.9 }}\r\n          animate={{ opacity: 1, scale: 1 }}\r\n          transition={{ duration: 0.5, delay: index * 0.1 }}\r\n          className=\"mb-4\"\r\n        >\r\n          <div className=\"relative group rounded-lg overflow-hidden shadow-md hover:shadow-xl transition-shadow duration-300\">\r\n            <img\r\n              src={image.src}\r\n              alt={image.alt}\r\n              className=\"w-full h-auto\"\r\n              style={{\r\n                maxHeight: `${400 * zoom}px`,\r\n                objectFit: 'cover'\r\n              }}\r\n            />\r\n            <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-4 transform translate-y-full group-hover:translate-y-0 transition-transform duration-300\">\r\n              <h3 className=\"text-white text-lg font-semibold\">{image.title}</h3>\r\n              <p className=\"text-white/80 text-sm\">\r\n                {image.width} × {image.height}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      ))}\r\n    </Masonry>\r\n  );\r\n};\r\n\r\nexport default MasonryView; ","import React from 'react';\r\nimport { ImageInfo } from '../../types';\r\nimport Slider from 'react-slick';\r\nimport { motion } from 'framer-motion';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\n\r\ninterface CarouselViewProps {\r\n  images: ImageInfo[];\r\n  zoom: number;\r\n}\r\n\r\nconst NextArrow = (props: any) => {\r\n  const { onClick } = props;\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className=\"absolute right-4 top-1/2 -translate-y-1/2 z-10 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-colors duration-300\"\r\n    >\r\n      <FaChevronRight />\r\n    </button>\r\n  );\r\n};\r\n\r\nconst PrevArrow = (props: any) => {\r\n  const { onClick } = props;\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className=\"absolute left-4 top-1/2 -translate-y-1/2 z-10 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-colors duration-300\"\r\n    >\r\n      <FaChevronLeft />\r\n    </button>\r\n  );\r\n};\r\n\r\nconst CarouselView: React.FC<CarouselViewProps> = ({ images, zoom }) => {\r\n  if (!images.length) {\r\n    return <div className=\"text-center text-gray-500 mt-8\">No images to display</div>;\r\n  }\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    nextArrow: <NextArrow />,\r\n    prevArrow: <PrevArrow />,\r\n    adaptiveHeight: true,\r\n    customPaging: (i: number) => (\r\n      <div className=\"w-3 h-3 mx-1 rounded-full bg-white/50 hover:bg-white/70 transition-colors duration-300\" />\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div className=\"carousel-view\">\r\n      <Slider {...settings}>\r\n        {images.map((image, index) => (\r\n          <motion.div\r\n            key={image.id}\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{ duration: 0.5 }}\r\n            className=\"outline-none\"\r\n          >\r\n            <div className=\"relative aspect-video\">\r\n              <img\r\n                src={image.src}\r\n                alt={image.alt}\r\n                className=\"w-full h-full object-contain\"\r\n                style={{\r\n                  maxHeight: `${600 * zoom}px`\r\n                }}\r\n              />\r\n              <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-4\">\r\n                <h3 className=\"text-white text-lg font-semibold\">{image.title}</h3>\r\n                <p className=\"text-white/80 text-sm\">\r\n                  {image.width} × {image.height}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        ))}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarouselView; "," import React, { useEffect, useRef, useCallback } from 'react';\n\ninterface Point {\n  x: number;\n  y: number;\n  radius: number;\n  strength: number;\n  timestamp: number;\n}\n\ninterface RippleEffectProps {\n  width: number;\n  height: number;\n  resolution?: number;\n  damping?: number;\n  propagationSpeed?: number;\n  onReady?: () => void;\n}\n\nconst RippleEffect: React.FC<RippleEffectProps> = ({\n  width,\n  height,\n  resolution = 256,\n  damping = 0.97,\n  propagationSpeed = 5,\n  onReady\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const bufferRef = useRef<{ current: number[][]; previous: number[][] }>({\n    current: [],\n    previous: []\n  });\n  const ripplesRef = useRef<Point[]>([]);\n  const frameRef = useRef<number>(0);\n  const contextRef = useRef<CanvasRenderingContext2D | null>(null);\n\n  // Initialize grid buffers\n  const initializeBuffers = useCallback(() => {\n    const buffer = {\n      current: Array(resolution).fill(0).map(() => Array(resolution).fill(0)),\n      previous: Array(resolution).fill(0).map(() => Array(resolution).fill(0))\n    };\n    bufferRef.current = buffer;\n  }, [resolution]);\n\n  // Add a new ripple to the simulation\n  const addRipple = useCallback((x: number, y: number, strength: number = 1) => {\n    const ripple: Point = {\n      x: x * resolution,\n      y: y * resolution,\n      radius: 0,\n      strength: Math.min(Math.max(strength, 0), 1),\n      timestamp: Date.now()\n    };\n    ripplesRef.current.push(ripple);\n\n    // Add initial displacement to the buffer\n    const buffer = bufferRef.current.current;\n    const radius = 2;\n    const intensity = ripple.strength * 5;\n\n    for (let i = -radius; i <= radius; i++) {\n      for (let j = -radius; j <= radius; j++) {\n        const px = Math.floor(ripple.x + i);\n        const py = Math.floor(ripple.y + j);\n        \n        if (px >= 0 && px < resolution && py >= 0 && py < resolution) {\n          const distance = Math.sqrt(i * i + j * j);\n          if (distance <= radius) {\n            const factor = (1 - distance / radius) * intensity;\n            buffer[py][px] = factor;\n          }\n        }\n      }\n    }\n  }, [resolution]);\n\n  // Update wave simulation\n  const updateSimulation = useCallback(() => {\n    const { current, previous } = bufferRef.current;\n    const nextBuffer = Array(resolution).fill(0).map(() => Array(resolution).fill(0));\n\n    // Wave equation simulation using finite differences\n    for (let i = 1; i < resolution - 1; i++) {\n      for (let j = 1; j < resolution - 1; j++) {\n        const val = (\n          current[i-1][j] +\n          current[i+1][j] +\n          current[i][j-1] +\n          current[i][j+1]\n        ) / 2 - previous[i][j];\n        \n        nextBuffer[i][j] = val * damping;\n      }\n    }\n\n    // Update buffers\n    bufferRef.current.previous = current;\n    bufferRef.current.current = nextBuffer;\n  }, [resolution, damping]);\n\n  // Render the wave simulation to canvas\n  const render = useCallback(() => {\n    if (!canvasRef.current || !contextRef.current) return;\n\n    const ctx = contextRef.current;\n    const imageData = ctx.getImageData(0, 0, width, height);\n    const { data } = imageData;\n    const buffer = bufferRef.current.current;\n\n    // Map simulation values to pixel colors\n    for (let i = 0; i < resolution; i++) {\n      for (let j = 0; j < resolution; j++) {\n        const value = buffer[i][j];\n        const x = Math.floor((j / resolution) * width);\n        const y = Math.floor((i / resolution) * height);\n        const pixelIndex = (y * width + x) * 4;\n\n        // Create a water-like effect using value as displacement\n        const intensity = Math.min(Math.abs(value) * 255, 255);\n        data[pixelIndex] = intensity;     // R\n        data[pixelIndex + 1] = intensity; // G\n        data[pixelIndex + 2] = intensity; // B\n        data[pixelIndex + 3] = intensity * 0.5; // A\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n  }, [width, height, resolution]);\n\n  // Animation loop\n  const animate = useCallback(() => {\n    updateSimulation();\n    render();\n    frameRef.current = requestAnimationFrame(animate);\n  }, [updateSimulation, render]);\n\n  // Initialize canvas and start animation\n  useEffect(() => {\n    if (!canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    canvas.width = width;\n    canvas.height = height;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    contextRef.current = ctx;\n    initializeBuffers();\n    animate();\n    onReady?.();\n\n    return () => {\n      if (frameRef.current) {\n        cancelAnimationFrame(frameRef.current);\n      }\n    };\n  }, [width, height, initializeBuffers, animate, onReady]);\n\n  // Handle mouse/touch interaction\n  const handleInteraction = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const clientX = 'touches' in e ? e.touches[0].clientX : e.clientX;\n    const clientY = 'touches' in e ? e.touches[0].clientY : e.clientY;\n    \n    const x = (clientX - rect.left) / rect.width;\n    const y = (clientY - rect.top) / rect.height;\n    \n    addRipple(x, y, 1);\n  }, [addRipple]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        pointerEvents: 'none',\n        mixBlendMode: 'overlay',\n        opacity: 0.8,\n      }}\n      onMouseMove={handleInteraction}\n      onTouchMove={handleInteraction}\n    />\n  );\n};\n\nexport default RippleEffect;","import React, { useState, useCallback, useEffect, useMemo, useRef } from \"react\";\nimport { ImageInfo, ViewMode } from \"../types.js\";\nimport ImageSkeleton from \"./ImageSkeleton.js\";\nimport Lightbox from \"yet-another-react-lightbox\";\nimport \"yet-another-react-lightbox/styles.css\";\nimport styles from \"../styles/ImageFeed.module.scss\";\nimport ImageRow from \"./ImageRow.js\";\nimport Captions from \"yet-another-react-lightbox/plugins/captions\";\nimport Counter from \"yet-another-react-lightbox/plugins/counter\";\nimport Zoom from \"yet-another-react-lightbox/plugins/zoom\";\nimport Thumbnails from \"yet-another-react-lightbox/plugins/thumbnails\";\nimport \"yet-another-react-lightbox/plugins/thumbnails.css\";\nimport \"yet-another-react-lightbox/plugins/captions.css\";\nimport \"yet-another-react-lightbox/plugins/counter.css\";\nimport { truncateImageTitle } from \"../utils/stringUtils.js\";\nimport { motion, useViewportScroll, useTransform } from 'framer-motion';\n// import Lottie from 'react-lottie';\nimport { createImageProcessor } from '../workers/imageProcessor.js';\nimport { BannerView, MasonryView, CarouselView } from './views';\nimport {\n  calculateColumns,\n  calculateLayout,\n  distributeImages,\n  calculateGapSize,\n  LayoutConfig,\n  MIN_IMAGE_WIDTH\n} from \"../utils/layoutCalculator\";\nimport useWindowSize from \"../hooks/useWindowSize.js\";\nimport AnimationSystem from '../utils/AnimationSystem';\nimport { CSSProperties } from 'react';\nimport RippleEffect from './RippleEffect';\n\n// Define the props interface for ImageFeed component\ninterface ImageFeedProps {\n  images: ImageInfo[];\n  isLoading: boolean;\n  isGrouped: boolean;\n  zoom: number;\n  viewMode: ViewMode;\n}\n\ninterface CustomStyle extends CSSProperties {\n  '--energy-color'?: string;\n  '--ripple-x'?: string;\n  '--ripple-y'?: string;\n  '--ripple-strength'?: string;\n}\n\n// Define the ImageFeed component\nconst ImageFeed: React.FC<ImageFeedProps> = ({\n  images,\n  isLoading,\n  isGrouped,\n  zoom,\n  viewMode,\n}) => {\n  const windowSize = useWindowSize();\n  const feedRef = useRef<HTMLDivElement>(null);\n  const [containerWidth, setContainerWidth] = useState(0);\n  const [columns, setColumns] = useState(4);\n  const [lightboxIndex, setLightboxIndex] = useState<number>(-1);\n  const [lightboxImages, setLightboxImages] = useState<ImageInfo[]>([]);\n  const [rowTransforms, setRowTransforms] = useState<number[]>([]);\n  const { scrollY } = useViewportScroll();\n  const y1 = useTransform(scrollY, [0, 300], [0, 200]);\n  const y2 = useTransform(scrollY, [0, 300], [0, -200]);\n  const [processedImages, setProcessedImages] = useState<{ [key: string]: { low: string; high: string } }>({});\n  const animationSystem = useMemo(() => AnimationSystem.getInstance(), []);\n  const [energyColor, setEnergyColor] = useState('rgba(255, 255, 255, 0.5)');\n  const [ripples, setRipples] = useState<Array<{\n    id: number;\n    x: number;\n    y: number;\n    strength: number;\n  }>>([]);\n  const [waterEffectReady, setWaterEffectReady] = useState(false);\n  const waterEffectRef = useRef<HTMLDivElement>(null);\n\n  // Reset states when folder or view mode changes\n  useEffect(() => {\n    setLightboxIndex(-1);\n    setLightboxImages([]);\n    setProcessedImages({});\n    setRowTransforms([]);\n  }, [images, viewMode]);\n\n  // Enhanced container width management\n  useEffect(() => {\n    const updateContainerWidth = () => {\n      if (!feedRef.current) return;\n      \n      const rect = feedRef.current.getBoundingClientRect();\n      // Use the actual measured width from the container\n      const newWidth = Math.max(MIN_IMAGE_WIDTH, rect.width);\n      \n      if (newWidth !== containerWidth) {\n        setContainerWidth(newWidth);\n        const config: LayoutConfig = {\n          containerWidth: newWidth,\n          zoom,\n          viewMode,\n          isGrouped\n        };\n        const layout = calculateLayout(config);\n        setColumns(layout.columns);\n      }\n    };\n\n    updateContainerWidth();\n\n    // Add resize observer for more accurate width updates\n    const resizeObserver = new ResizeObserver(updateContainerWidth);\n    if (feedRef.current) {\n      resizeObserver.observe(feedRef.current);\n    }\n\n    window.addEventListener('resize', updateContainerWidth);\n\n    return () => {\n      resizeObserver.disconnect();\n      window.removeEventListener('resize', updateContainerWidth);\n    };\n  }, [zoom, viewMode, isGrouped, containerWidth]);\n\n  // Update energy color based on system state\n  useEffect(() => {\n    const updateColor = () => {\n      animationSystem.updateColorEnergy();\n      const hue = getComputedStyle(document.documentElement)\n        .getPropertyValue('--energy-hue')\n        .trim();\n      setEnergyColor(`hsla(${hue}, 80%, 60%, 0.5)`);\n    };\n\n    const interval = setInterval(updateColor, 50);\n    return () => clearInterval(interval);\n  }, [animationSystem]);\n\n  // Modified groupedImages calculation with better error handling\n  const groupedImages = useMemo(() => {\n    if (!Array.isArray(images) || images.length === 0) {\n      console.warn(\"No images provided or invalid images array\");\n      return [];\n    }\n\n    const validImages = images.filter(image => \n      image && \n      typeof image === 'object' && \n      'width' in image && \n      'height' in image &&\n      image.width > 0 &&\n      image.height > 0\n    );\n\n    if (validImages.length !== images.length) {\n      console.warn(`Filtered out ${images.length - validImages.length} invalid images`);\n    }\n\n    if (!isGrouped) {\n      return validImages.map((image) => ({\n        key: image.id,\n        images: [image],\n        isCarousel: false,\n      }));\n    }\n\n    const groups: { [key: string]: ImageInfo[] } = {};\n    validImages.forEach((image) => {\n      const processedTitle = truncateImageTitle(image.alt);\n      if (!groups[processedTitle]) {\n        groups[processedTitle] = [];\n      }\n      groups[processedTitle].push(image);\n    });\n\n    return Object.entries(groups).map(([key, group]) => ({\n      key,\n      images: group,\n      isCarousel: group.length > 1,\n    }));\n  }, [images, isGrouped]);\n\n  // Enhanced groupedRows calculation with better error handling and viewMode awareness\n  const groupedRows = useMemo(() => {\n    if (!containerWidth || groupedImages.length === 0 || viewMode !== ViewMode.GRID) return [];\n    \n    const firstImages = groupedImages\n      .map(group => group.images[0])\n      .filter(image => image && image.width > 0 && image.height > 0);\n\n    if (firstImages.length === 0) return [];\n\n    // Uses our optimized distributeImages function with sorted cache\n    return distributeImages(\n      firstImages,\n      containerWidth,\n      zoom,\n      200 /* base row height */\n    );\n  }, [groupedImages, zoom, containerWidth, viewMode]);\n\n  // Handle image overflow\n  const handleImageOverflow = useCallback((image: ImageInfo) => {\n    console.warn('Image overflow detected:', image.id);\n    // Implement any necessary overflow handling logic here\n  }, []);\n\n  // Update handleImageClick to work with grouped images and set lightbox plugins\n  const handleImageClick = useCallback(\n    (clickedImage: ImageInfo) => {\n      const groupIndex = groupedImages.findIndex((group) =>\n        group.images.some((img) => img.id === clickedImage.id)\n      );\n      if (groupIndex !== -1) {\n        const group = groupedImages[groupIndex];\n        setLightboxIndex(groupIndex);\n        setLightboxImages(group.images);\n      }\n    },\n    [groupedImages]\n  );\n\n  // Callback function to get the correct image URL\n  const getImageUrl = useCallback((imagePath: string) => {\n    const cleanPath = imagePath\n      .replace(/^(\\/|api\\/image\\/)+/, \"\")\n      .replace(/\\\\/g, \"/\");\n    return `/api/image/${cleanPath}`;\n  }, []);\n\n  const imageProcessor = useMemo(() => createImageProcessor(), []);\n\n  // Simplified ripple handler\n  const handleRipple = useCallback((x: number, y: number, strength: number) => {\n    const rippleId = Date.now();\n    setRipples(prev => {\n      const newRipples = prev.slice(-3); // Keep only last 3 ripples for performance\n      return [...newRipples, { id: rippleId, x, y, strength }];\n    });\n    \n    setTimeout(() => {\n      setRipples(prev => prev.filter(r => r.id !== rippleId));\n    }, 1000);\n  }, []);\n\n  // Enhanced renderContent\n  const renderContent = () => {\n    if (!containerWidth) return null;\n    const gap = calculateGapSize(zoom);\n\n    const commonProps = {\n      onRipple: handleRipple,\n      energyColor,\n    };\n\n    switch (viewMode) {\n      case ViewMode.BANNER:\n        return <BannerView images={images} zoom={zoom} {...commonProps} />;\n      case ViewMode.MASONRY:\n        return <MasonryView images={images} zoom={zoom} {...commonProps} />;\n      case ViewMode.CAROUSEL:\n        return <CarouselView images={images} zoom={zoom} {...commonProps} />;\n      case ViewMode.GRID:\n        if (!groupedRows.length) return null;\n        return (\n          <motion.div\n            className={styles.gridContainer}\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              gap: `${gap}px`,\n              '--energy-color': energyColor,\n            } as CustomStyle}\n          >\n            {groupedRows.map((row, index) => (\n              <ImageRow\n                key={`row-${index}-${row.images.map(img => img.id).join('-')}`}\n                images={row.images}\n                onImageClick={handleImageClick}\n                columns={columns}\n                zoom={zoom}\n                isLastRow={index === groupedRows.length - 1}\n                rowHeight={row.height}\n                groupedImages={groupedImages}\n                processedImages={processedImages}\n                imageProcessor={imageProcessor}\n                gap={gap}\n                containerWidth={containerWidth}\n                onImageOverflow={handleImageOverflow}\n              />\n            ))}\n          </motion.div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div \n      className=\"image-feed overflow-x-hidden\" \n      ref={feedRef}\n      style={{ \n        position: 'relative',\n        perspective: '1000px',\n        gap: `${calculateGapSize(zoom)}px`,\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        maxWidth: windowSize.width ? `${windowSize.width}px` : '100%',\n        overflow: 'hidden',\n      } as CustomStyle}\n    >\n      {/* Main content */}\n      <div className={styles.feedContent}>\n        {renderContent()}\n      </div>\n\n      {/* Ripple effect overlay */}\n      <RippleEffect\n        width={windowSize.width || window.innerWidth}\n        height={windowSize.height || window.innerHeight}\n        resolution={128}\n        damping={0.97}\n        propagationSpeed={5}\n        onReady={() => setWaterEffectReady(true)}\n      />\n\n      {isLoading && <ImageSkeleton containerWidth={800} containerHeight={600} />}\n      \n      <Lightbox\n        slides={lightboxImages.map((image) => ({\n          src: image.src,\n          alt: image.alt,\n          title: truncateImageTitle(image.alt),\n          description: `Image ${image.id}`,\n        }))}\n        open={lightboxIndex >= 0}\n        index={lightboxIndex-(lightboxIndex)}\n        close={() => setLightboxIndex(-1)}\n        plugins={[\n          Captions,\n          Counter,\n          Zoom,\n          ...(lightboxImages.length > 1 ? [Thumbnails] : []),\n        ]}\n        thumbnails={{\n          position: \"bottom\",\n          width: 120,\n          height: 80,\n          border: 1,\n          borderRadius: 4,\n          padding: 4,\n          gap: 16,\n        }}\n        animation={{\n          fade: 300,\n          swipe: 300,\n        }}\n        carousel={{\n          finite: true,\n          preload: 2,\n          padding: 0,\n          spacing: 30,\n          imageFit: 'contain',\n        }}\n        render={{\n          buttonPrev: () => null,\n          buttonNext: () => null,\n        }}\n      />\n      \n      <motion.div \n        className={styles.parallaxLayer} \n        style={{ \n          y: y1,\n          filter: `hue-rotate(calc(var(--energy-hue, 0) * 1deg))`,\n        }}\n      >\n        {/* Add some background elements for parallax effect */}\n      </motion.div>\n    </div>\n  );\n};\n\nexport default ImageFeed;\n","import { useState, useEffect, useCallback } from 'react';\n\n// Define the structure for the window size object\ninterface WindowSize {\n  width: number | undefined;\n  height: number | undefined;\n}\n\n// Debounce timeout in milliseconds\nconst DEBOUNCE_TIMEOUT = 150;\n\n// Custom hook to track and return the current window size\nfunction useWindowSize() {\n  // State to store the current window size\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  // Memoized resize handler\n  const handleResize = useCallback(() => {\n    const newWidth = window.innerWidth;\n    const newHeight = window.innerHeight;\n\n    // Only update if dimensions actually changed\n    if (newWidth !== windowSize.width || newHeight !== windowSize.height) {\n      // Use RAF for smooth updates\n      requestAnimationFrame(() => {\n        setWindowSize({\n          width: newWidth,\n          height: newHeight,\n        });\n      });\n    }\n  }, [windowSize.width, windowSize.height]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout | null = null;\n\n    // Debounced resize handler\n    function debouncedResize() {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      timeoutId = setTimeout(handleResize, DEBOUNCE_TIMEOUT);\n    }\n\n    // Initial size calculation\n    handleResize();\n\n    // Add event listener with debouncing\n    window.addEventListener('resize', debouncedResize);\n\n    // Cleanup\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      window.removeEventListener('resize', debouncedResize);\n    };\n  }, [handleResize]);\n\n  return windowSize;\n}\n\nexport default useWindowSize;","import React from \"react\";\nimport ImageFeed from \"./ImageFeed.js\";\nimport { ImageInfo, ViewMode } from \"../types.js\";\nimport styles from \"../styles/ImageViewer.module.scss\";\n\n// Define the props interface for the ImageViewer component\ninterface ImageViewerProps {\n  images: ImageInfo[];\n  isLoading: boolean;\n  error: string | null;\n  selectedFolder: string;\n  isGrouped: boolean;\n  zoom: number;\n  viewMode: ViewMode;\n}\n\n// Define the ImageViewer component\nconst ImageViewer: React.FC<ImageViewerProps> = ({\n  images,\n  isLoading,\n  error,\n  selectedFolder,\n  isGrouped,\n  zoom,\n  viewMode,\n}) => {\n\n  return (\n    // Main container with flex layout\n    <div className={`${styles.imageViewer} flex flex-col h-full`}>\n      {/* Content container with scrolling */}\n      <div className={`${styles.contentContainer} flex-1`}>\n        {/* Conditional rendering based on error, loading, and image availability */}\n        {error ? (\n          // Display error message if there's an error\n          <div className=\"text-center text-accent-red\">\n            <p>Error: {error}</p>\n            <p>\n              Please try again later or contact support if the problem persists.\n            </p>\n          </div>\n        ) : isLoading ? (\n          // Display loading message while images are being fetched\n          <div className=\"text-center text-gray-300\">Loading images...</div>\n        ) : images.length === 0 ? (\n          // Display message when no images are found in the folder\n          <div className=\"text-center text-gray-300\">\n            No images found in this folder.\n          </div>\n        ) : (\n          // Render ImageFeed component when images are available\n          <ImageFeed\n            images={images}\n            isLoading={isLoading}\n            isGrouped={isGrouped}\n            zoom={zoom}\n            viewMode={viewMode}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Export the ImageViewer component\nexport default ImageViewer;\n","import React, { useMemo } from 'react';\nimport ImageViewer from './ImageViewer.js';\nimport { ImageInfo, ViewMode } from '../types.js';\n\n// Define the props interface for the MainContent component\ninterface MainContentProps {\n  images: ImageInfo[];\n  selectedFolder: string;\n  searchQuery: string;\n  isLoading: boolean;\n  error: string | null;\n  zoom: number;\n  isGrouped: boolean;\n  viewMode: ViewMode;\n}\n\n// MainContent component that renders the primary content area of the application\nconst MainContent: React.FC<MainContentProps> = ({\n  images,\n  selectedFolder,\n  searchQuery,\n  isLoading,\n  error,\n  zoom,\n  isGrouped,\n  viewMode,\n}) => {\n  // Memoized filtered images based on the search query\n  const filteredImages = useMemo(() => {\n    if (!searchQuery) return images;\n    return images.filter(image => \n      image.alt.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n  }, [images, searchQuery]);\n\n  // Render the main content\n  return (\n    <>\n      {/* Render the ImageViewer component */}\n      <ImageViewer\n        images={filteredImages}\n        isLoading={isLoading}\n        error={error}\n        selectedFolder={selectedFolder}\n        zoom={zoom}\n        isGrouped={isGrouped}\n        viewMode={viewMode}\n      />\n    </>\n  );\n};\n\n// Export the MainContent component\nexport default MainContent;","import axios from \"axios\";\r\nimport { ImageInfo, FolderInfo } from \"../types.js\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"/api\", // Assuming your API routes are under /api\r\n});\r\n\r\n/**\r\n * Fetches the list of folders from the server.\r\n *\r\n * @returns {Promise<FolderInfo[]>} A promise that resolves to an array of folder information.\r\n * @throws Will throw an error if the API request fails.\r\n */\r\nexport async function getFolders(): Promise<FolderInfo[]> {\r\n  try {\r\n    const response = await api.get(\"/folders\");\r\n    return response.data.map((folder: { name: string; path: string }) => ({\r\n      name: folder.name,\r\n      path: folder.path,\r\n    }));\r\n  } catch (error) {\r\n    console.error(\"Error in getFolders:\", error);\r\n    throw new Error(\"Failed to fetch folders\");\r\n  }\r\n}\r\n\r\n/**\r\n * Fetches the list of images for a specific folder from the server.\r\n *\r\n * @param {string} folder - The name of the folder to fetch images from.\r\n * @returns {Promise<ImageInfo[]>} A promise that resolves to an array of image information.\r\n * @throws Will throw an error if the API request fails.\r\n */\r\nexport async function getImages(folder: string): Promise<ImageInfo[]> {\r\n  if (!folder) {\r\n    throw new Error(\"Folder parameter is required\");\r\n  }\r\n\r\n  try {\r\n    const response = await api.get(\r\n      `/images?folder=${encodeURIComponent(folder)}`\r\n    );\r\n    \r\n    if (!Array.isArray(response.data)) {\r\n      console.error(\"Invalid response data:\", response.data);\r\n      throw new Error(\"Invalid response format from server\");\r\n    }\r\n    \r\n    return response.data;\r\n  } catch (error: any) {\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      const message = error.response.data?.error || error.response.statusText;\r\n      throw new Error(`Server error: ${message}`);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      throw new Error(\"No response from server\");\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.error(\"Error in getImages:\", error);\r\n      throw new Error(error.message || \"Failed to fetch images\");\r\n    }\r\n  }\r\n}\r\n/**\r\n * Uploads files to a specified folder on the server.\r\n *\r\n * @param {string} folder - The name of the folder to upload files to.\r\n * @param {File[]} files - An array of File objects to be uploaded.\r\n * @param {function} onProgress - A callback function to report upload progress.\r\n * @returns {Promise<void>} A promise that resolves when the upload is complete.\r\n * @throws Will throw an error if the API request fails.\r\n */\r\nexport async function uploadFiles(\r\n  folder: string,\r\n  files: File[],\r\n  onProgress: (progress: number) => void\r\n): Promise<void> {\r\n  const formData = new FormData();\r\n  formData.append(\"folder\", folder);\r\n  files.forEach((file) => formData.append(\"files\", file));\r\n\r\n  try {\r\n    await api.post(\"/upload\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      onUploadProgress: (progressEvent) => {\r\n        if (progressEvent.total) {\r\n          const percentCompleted = Math.round(\r\n            (progressEvent.loaded * 100) / progressEvent.total\r\n          );\r\n          onProgress(percentCompleted);\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error in uploadFiles:\", error);\r\n    throw new Error(\"Failed to upload files\");\r\n  }\r\n}\r\n/**\r\n * Searches for images across all folders based on a query string.\r\n *\r\n * @param {string} query - The search query string.\r\n * @returns {Promise<ImageInfo[]>} A promise that resolves to an array of image information matching the search query.\r\n * @throws Will throw an error if the API request fails.\r\n */\r\nexport async function searchImages(query: string): Promise<ImageInfo[]> {\r\n  try {\r\n    const response = await api.get(`/search?q=${encodeURIComponent(query)}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error in searchImages:\", error);\r\n    throw new Error(\"Failed to search images\");\r\n  }\r\n}\r\n\r\n/**\r\n * Fetches the current main directory from the server.\r\n *\r\n * @returns {Promise<string>} A promise that resolves to the current main directory path.\r\n * @throws Will throw an error if the API request fails.\r\n */\r\nexport async function getCurrentDirectory(): Promise<string> {\r\n  try {\r\n    const response = await api.get(\"/getCurrentDirectory\");\r\n    return response.data.currentDirectory;\r\n  } catch (error) {\r\n    console.error(\"Error in getCurrentDirectory:\", error);\r\n    throw new Error(\"Failed to get current directory\");\r\n  }\r\n}\r\n","import React, { useEffect, useRef, useCallback, useMemo, useState } from 'react';\nimport styles from '../styles/ParticleBackground.module.scss';\n\ninterface Particle {\n  element: HTMLDivElement;\n  x: number;\n  y: number;\n  speedX: number;\n  speedY: number;\n  size: number;\n  opacity: number;\n  hue: number;\n  energy: number;\n  phase: number;\n  active: boolean; // Track if particle is active\n}\n\nconst ParticleBackground: React.FC = () => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const particlesRef = useRef<Particle[]>([]);\n  const animationFrameRef = useRef<number>();\n  const lastUpdateRef = useRef<number>(0);\n  const performanceMonitorRef = useRef<{ lastCheck: number; frames: number }>({ lastCheck: 0, frames: 0 });\n  const [reduced, setReduced] = useState(false);\n  \n  // Reduced FPS and optimized delay\n  const FPS = reduced ? 20 : 30;\n  const frameDelay = 1000 / FPS;\n\n  // Optimized particle parameters\n  const particleParams = useMemo(() => ({\n    maxParticles: reduced ? 8 : 12, // Reduced from 15\n    baseHues: [190, 160, 140],\n    sizeRange: { min: 15, max: 35 }, // Slightly reduced max size\n    opacityRange: { min: 0.15, max: 0.35 }, // Reduced opacity\n    speedRange: { min: -0.04, max: 0.04 }, // Reduced speed\n    poolSize: 20 // Size of particle pool for reuse\n  }), [reduced]);\n\n  // Initialize particle pool\n  const initializeParticlePool = useCallback(() => {\n    if (!containerRef.current) return;\n\n    // Clear existing particles\n    particlesRef.current.forEach(particle => particle.element.remove());\n    particlesRef.current = [];\n\n    // Create particle pool\n    for (let i = 0; i < particleParams.poolSize; i++) {\n      const particle = document.createElement('div');\n      particle.classList.add(styles.particle);\n      particle.style.display = 'none'; // Initially hidden\n      containerRef.current.appendChild(particle);\n\n      particlesRef.current.push({\n        element: particle,\n        x: 0,\n        y: 0,\n        speedX: 0,\n        speedY: 0,\n        size: 0,\n        opacity: 0,\n        hue: 0,\n        energy: 0,\n        phase: 0,\n        active: false\n      });\n    }\n  }, [particleParams.poolSize]);\n\n  // Optimized particle creation using pool\n  const activateParticle = useCallback(() => {\n    if (!containerRef.current) return;\n\n    // Find inactive particle in pool\n    const inactiveParticle = particlesRef.current.find(p => !p.active);\n    if (!inactiveParticle) return;\n\n    const size = Math.random() * \n      (particleParams.sizeRange.max - particleParams.sizeRange.min) + \n      particleParams.sizeRange.min;\n    \n    const hueIndex = Math.floor(Math.random() * particleParams.baseHues.length);\n    const hue = particleParams.baseHues[hueIndex] + Math.random() * 15;\n    \n    const x = Math.random() * 100;\n    const y = Math.random() * 100;\n    const opacity = Math.random() * \n      (particleParams.opacityRange.max - particleParams.opacityRange.min) + \n      particleParams.opacityRange.min;\n\n    // Update particle properties\n    Object.assign(inactiveParticle, {\n      x,\n      y,\n      speedX: Math.random() * \n        (particleParams.speedRange.max - particleParams.speedRange.min) + \n        particleParams.speedRange.min,\n      speedY: Math.random() * \n        (particleParams.speedRange.max - particleParams.speedRange.min) + \n        particleParams.speedRange.min,\n      size,\n      opacity,\n      hue,\n      energy: Math.random(),\n      phase: Math.random() * Math.PI * 2,\n      active: true\n    });\n\n    // Update particle element\n    inactiveParticle.element.style.cssText = `\n      display: block;\n      width: ${size}px;\n      height: ${size}px;\n      background: hsla(${hue}, 85%, 25%, ${opacity});\n      transform: translate(${x}%, ${y}%) scale(1);\n      will-change: transform, opacity;\n      pointer-events: none;\n    `;\n\n    // Limit active particles\n    const activeCount = particlesRef.current.filter(p => p.active).length;\n    if (activeCount > particleParams.maxParticles) {\n      const oldestActive = particlesRef.current.find(p => p.active);\n      if (oldestActive) {\n        oldestActive.active = false;\n        oldestActive.element.style.display = 'none';\n      }\n    }\n  }, [particleParams]);\n\n  // Optimized update function with performance monitoring\n  const updateParticles = useCallback(() => {\n    const now = performance.now();\n    const delta = now - lastUpdateRef.current;\n\n    // Performance monitoring\n    performanceMonitorRef.current.frames++;\n    if (now - performanceMonitorRef.current.lastCheck > 1000) {\n      const fps = performanceMonitorRef.current.frames;\n      performanceMonitorRef.current.frames = 0;\n      performanceMonitorRef.current.lastCheck = now;\n\n      // Reduce particles if performance is poor\n      if (fps < FPS * 0.75 && !reduced) {\n        setReduced(true);\n      }\n    }\n\n    if (delta < frameDelay) {\n      animationFrameRef.current = requestAnimationFrame(updateParticles);\n      return;\n    }\n\n    lastUpdateRef.current = now;\n    \n    particlesRef.current.forEach(particle => {\n      if (!particle.active) return;\n\n      // Simplified physics calculations\n      particle.phase += 0.006; // Further reduced from 0.008\n      particle.energy = Math.sin(particle.phase) * 0.2 + 0.8; // Reduced variation\n      \n      particle.x += particle.speedX;\n      particle.y += particle.speedY;\n\n      // Wrap around edges with boundary check\n      if (particle.x > 100 || particle.x < 0) {\n        particle.speedX *= -1;\n        particle.x = Math.max(0, Math.min(100, particle.x));\n      }\n      if (particle.y > 100 || particle.y < 0) {\n        particle.speedY *= -1;\n        particle.y = Math.max(0, Math.min(100, particle.y));\n      }\n\n      // Batch transform updates\n      particle.element.style.transform = \n        `translate(${particle.x}%, ${particle.y}%) scale(${1 + particle.energy * 0.1})`;\n      particle.element.style.opacity = (particle.opacity * particle.energy).toString();\n    });\n\n    animationFrameRef.current = requestAnimationFrame(updateParticles);\n  }, [frameDelay, FPS, reduced]);\n\n  useEffect(() => {\n    // Initialize particle pool\n    initializeParticlePool();\n    \n    // Reduced particle creation frequency\n    const intervalId = setInterval(activateParticle, reduced ? 800 : 600);\n    \n    // Initialize performance monitoring\n    performanceMonitorRef.current = { lastCheck: performance.now(), frames: 0 };\n    lastUpdateRef.current = performance.now();\n    \n    // Start update loop\n    updateParticles();\n\n    return () => {\n      clearInterval(intervalId);\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      // Clean up particles\n      if (containerRef.current) {\n        while (containerRef.current.firstChild) {\n          containerRef.current.firstChild.remove();\n        }\n      }\n      particlesRef.current = [];\n    };\n  }, [initializeParticlePool, activateParticle, updateParticles, reduced]);\n\n  return (\n    <div \n      ref={containerRef} \n      className={styles.particleBackground}\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        pointerEvents: 'none',\n        mixBlendMode: 'screen',\n        willChange: 'transform',\n        transform: 'translateZ(0)',\n        zIndex: -1\n      }}\n    />\n  );\n};\n\n// Prevent unnecessary re-renders\nexport default React.memo(ParticleBackground);\n","import React from \"react\";\r\nimport styles from \"../styles/LottieBackground.module.scss\";\r\n\r\nconst LottieBackground: React.FC = () => {\r\n  return (\r\n    <div className={styles.lottieBackground}>\r\n      <div className={styles.animatedBackground}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LottieBackground;\r\n","// Cache Time-To-Live: Duration in milliseconds for which cached data remains valid\nexport const CACHE_TTL = 600000;\n\n// Maximum upload size: Limit for file uploads in bytes (default is ~1.5GB)\nexport const MAX_UPLOAD_SIZE = 1610612736;\n\n// Supported image formats: List of file extensions for allowed image uploads\nexport const SUPPORTED_IMAGE_FORMATS = ['.jpg', '.jpeg', '.png', '.gif'];\n\n// API base URL: Root URL for API endpoints\nexport const API_BASE_URL = 'http://localhost:3000/api';\n\n// Server port: Port number on which the server will listen\nexport const PORT = 3000;\n\n// Host: Hostname or IP address on which the server will run\nexport const HOST = 'localhost';\n\n// Custom properties for dynamic styling\nexport const CUSTOM_PROPERTIES = {\n  SCROLL_Y: '--scroll-y',\n  MOUSE_X: '--mouse-x',\n  MOUSE_Y: '--mouse-y',\n};\n\n// Default values for custom properties\nexport const DEFAULT_CUSTOM_PROPERTY_VALUES = {\n  [CUSTOM_PROPERTIES.SCROLL_Y]: '0px',\n  [CUSTOM_PROPERTIES.MOUSE_X]: '0px',\n  [CUSTOM_PROPERTIES.MOUSE_Y]: '0px',\n};","import React, { useState, useEffect } from 'react';\nimport Sidebar from './Sidebar.js';\nimport Navbar from './Navbar.js';\nimport MainContent from './MainContent.js';\nimport { FolderInfo, ImageInfo, ViewMode } from '../types.js';\nimport { getImages } from '../lib/api.js'; // Assume this function exists to fetch images\nimport ParticleBackground from \"./ParticleBackground.js\";\nimport LottieBackground from './LottieBackground.js';\nimport { useCustomProperties } from '../hooks/useCustomProperties';\n\n// Define the props interface for the Layout component\ninterface LayoutProps {\n  children: React.ReactNode;\n  folders: FolderInfo[];\n  selectedFolder: string;\n  onFolderChange: (folder: string) => void;\n  currentDirectory: string;\n  onSearch: (query: string) => void;\n  zoom: number;\n  onZoomChange: (newZoom: number) => void;\n  isGrouped: boolean;\n  onGroupToggle: () => void;\n  viewMode: ViewMode;\n  onViewModeChange: (mode: ViewMode) => void;\n}\n\n// Define the Layout component\nconst Layout: React.FC<LayoutProps> = ({\n  children,\n  folders,\n  selectedFolder,\n  onFolderChange,\n  currentDirectory,\n  onSearch,\n  zoom,\n  onZoomChange,\n  isGrouped,\n  onGroupToggle,\n  viewMode,\n  onViewModeChange,\n}) => {\n  useCustomProperties();\n\n  // State variables for managing images, loading state, error, and search query\n  const [images, setImages] = useState<ImageInfo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // Effect hook to fetch images when the selected folder changes\n  useEffect(() => {\n    const fetchImages = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const fetchedImages = await getImages(selectedFolder);\n        setImages(fetchedImages || []); // Ensure we always set an array\n      } catch (err: any) {\n        const errorMessage = err.message || \"Failed to fetch images\";\n        setError(errorMessage);\n        setImages([]); // Set empty array on error\n        console.error(\"Error fetching images:\", err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (selectedFolder) {\n      fetchImages();\n    } else {\n      setImages([]);\n      setError(\"No folder selected\");\n    }\n  }, [selectedFolder]);\n\n  // Handler for search functionality\n  const handleSearch = (query: string) => {\n    setSearchQuery(query);\n    onSearch(query);\n  };\n\n  // Handler for when image upload is complete\n  const handleUploadComplete = () => {\n    // Refetch images after upload\n    const fetchImages = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const fetchedImages = await getImages(selectedFolder);\n        setImages(fetchedImages);\n      } catch (err) {\n        setError(\"Failed to fetch images\");\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchImages();\n  };\n\n  // Render the layout structure\n  return (\n    <div className=\"flex flex-col h-screen relative bg-transparent\">\n      <div className=\"gradient-overlay\"></div>\n      <LottieBackground />\n      <ParticleBackground />\n      <Navbar\n        currentDirectory={currentDirectory}\n        onSearch={onSearch}\n        zoom={zoom}\n        onZoomChange={onZoomChange}\n        isGrouped={isGrouped}\n        onGroupToggle={onGroupToggle}\n        viewMode={viewMode}\n        onViewModeChange={onViewModeChange}\n      />\n      <div className=\"flex flex-1 overflow-hidden\">\n        <Sidebar\n          folders={folders}\n          selectedFolder={selectedFolder}\n          onFolderChange={onFolderChange}\n        />\n        <main className=\"flex-1 overflow-auto p-4 relative bg-transparent\">\n          <div className=\"relative z-10\">\n            <MainContent\n              images={images}\n              selectedFolder={selectedFolder}\n              searchQuery={searchQuery}\n              isLoading={isLoading}\n              error={error}\n              zoom={zoom}\n              isGrouped={isGrouped}\n              viewMode={viewMode}\n            />\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;","import { useEffect } from \"react\";\r\nimport { CUSTOM_PROPERTIES, DEFAULT_CUSTOM_PROPERTY_VALUES } from '../utils/constants';\r\n\r\nexport function useCustomProperties() {\r\n  useEffect(() => {\r\n    function updateCustomProperties(e: MouseEvent) {\r\n      const mouseX = e.clientX;\r\n      const mouseY = e.clientY;\r\n\r\n      document.documentElement.style.setProperty(CUSTOM_PROPERTIES.MOUSE_X, `${mouseX}px`);\r\n      document.documentElement.style.setProperty(CUSTOM_PROPERTIES.MOUSE_Y, `${mouseY}px`);\r\n      \r\n      console.log(`Mouse event: x=${mouseX}, y=${mouseY}, target=${e.target}`);\r\n    }\r\n\r\n    function updateScrollProperty() {\r\n      const scrollY = window.scrollY;\r\n      document.documentElement.style.setProperty(CUSTOM_PROPERTIES.SCROLL_Y, `${scrollY}px`);\r\n    }\r\n\r\n    // Set default values\r\n    Object.entries(DEFAULT_CUSTOM_PROPERTY_VALUES).forEach(([property, value]) => {\r\n      document.documentElement.style.setProperty(property, value);\r\n    });\r\n\r\n    window.addEventListener(\"scroll\", updateScrollProperty);\r\n    document.addEventListener(\"mousemove\", updateCustomProperties);\r\n    document.addEventListener(\"click\", updateCustomProperties);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", updateScrollProperty);\r\n      document.removeEventListener(\"mousemove\", updateCustomProperties);\r\n      document.removeEventListener(\"click\", updateCustomProperties);\r\n    };\r\n  }, []);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/Layout.js\";\nimport MainContent from \"../components/MainContent.js\";\nimport { getFolders, getImages } from \"../lib/api.js\";\nimport { ImageInfo, FolderInfo, ViewMode } from \"../types.js\";\n\n/**\n * Home component - the main page of the application.\n * It manages the overall state and layout of the app.\n *\n * @component\n * @returns {JSX.Element} The main application page.\n */\nconst Home: React.FC = () => {\n  // State declarations for managing application data and UI\n  const [folders, setFolders] = useState<FolderInfo[]>([]);\n  const [selectedFolder, setSelectedFolder] = useState<string>(\"\");\n  const [images, setImages] = useState<ImageInfo[]>([]);\n  const [zoom, setZoom] = useState<number>(1);\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [currentDirectory, setCurrentDirectory] = useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [isGrouped, setIsGrouped] = useState<boolean>(true);\n  const [viewMode, setViewMode] = useState<ViewMode>(ViewMode.GRID);\n\n  /**\n   * Effect hook to fetch the list of folders when the component mounts.\n   * Sets the first folder as selected if available.\n   */\n  useEffect(() => {\n    const fetchFolders = async () => {\n      try {\n        const folderList = await getFolders();\n        setFolders(folderList);\n        if (folderList.length > 0) {\n          setSelectedFolder(folderList[0].name);\n        }\n      } catch (error) {\n        console.error(\"Error fetching folders:\", error);\n        setError(\"Failed to fetch folders\");\n      }\n    };\n\n    fetchFolders();\n  }, []);\n\n  /**\n   * Effect hook to fetch images when the selected folder changes.\n   * Updates loading state and handles errors.\n   */\n  useEffect(() => {\n    const fetchImages = async () => {\n      if (!selectedFolder) return;\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const imageList = await getImages(selectedFolder);\n        setImages(imageList);\n      } catch (error) {\n        console.error(\"Error fetching images:\", error);\n        setError(\"Failed to fetch images\");\n        setImages([]);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchImages();\n  }, [selectedFolder]);\n\n  /**\n   * Handler for folder selection change.\n   * Updates the selected folder state.\n   * @param {string} folder - The newly selected folder.\n   */\n  const handleFolderChange = (folder: string) => {\n    setSelectedFolder(folder);\n  };\n\n  /**\n   * Handler for zoom level change.\n   * Updates the zoom state.\n   * @param {number} newZoom - The new zoom level.\n   */\n  const handleZoomChange = (newZoom: number) => {\n    setZoom(newZoom);\n  };\n\n  /**\n   * Handler for search query change.\n   * Updates the search query state.\n   * @param {string} query - The new search query.\n   */\n  const handleSearch = (query: string) => {\n    setSearchQuery(query);\n    // TODO: Implement search functionality\n  };\n\n  /**\n   * Handler for file upload completion.\n   * Refreshes the images in the current folder.\n   */\n  const handleUploadComplete = () => {\n    // Refresh the images in the current folder\n    getImages(selectedFolder).then(setImages);\n  };\n\n  /**\n   * Handler for grouping toggle.\n   * Toggles the grouping state.\n   */\n  const handleGroupToggle = () => {\n    setIsGrouped(prevState => !prevState);\n  };\n\n  const handleViewModeChange = (newMode: ViewMode) => {\n    setViewMode(newMode);\n  };\n\n  // Render the main layout with all necessary props\n  return (\n    <Layout\n      folders={folders}\n      selectedFolder={selectedFolder}\n      onFolderChange={handleFolderChange}\n      currentDirectory={selectedFolder}\n      onSearch={handleSearch}\n      zoom={zoom}\n      onZoomChange={handleZoomChange}\n      isGrouped={isGrouped}\n      onGroupToggle={handleGroupToggle}\n      viewMode={viewMode}\n      onViewModeChange={handleViewModeChange}\n    >\n      <MainContent\n        images={images}\n        zoom={zoom}\n        searchQuery={searchQuery}\n        isLoading={isLoading}\n        error={error}\n        selectedFolder={selectedFolder}\n        // onUploadComplete={handleUploadComplete}\n        isGrouped={isGrouped}\n        viewMode={viewMode}\n      />\n    </Layout>\n  );\n};\n\nexport default Home;\n","import React from 'react'\r\nimport Home from './pages/Home.js'\r\nimport './styles/views.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOMServer from 'react-dom/server'\r\nimport App from './App.js'\r\n\r\nexport function render() {\r\n  const html = ReactDOMServer.renderToString(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  )\r\n  return { html }\r\n}\r\n"],"names":["Sidebar","folders","selectedFolder","onFolderChange","jsx","motion","div","initial","x","animate","transition","type","stiffness","className","styles","children","map","folder","onClick","name","CurrentDirectoryButton","currentDirectory","jsxs","button","whileHover","scale","whileTap","IconFolder","size","clipPath","duration","SearchBar","onSearch","query","setQuery","useState","useAnimation","form","onSubmit","e","preventDefault","width","damping","background","input","value","onChange","target","placeholder","whileFocus","ZoomSlider","zoom","onZoomChange","isDragging","setIsDragging","controls","sliderSpring","useSpring","config","tension","friction","precision","glowSpring","opacity","useEffect","start","style","boxShadow","Math","max","svg","height","viewBox","fill","xmlns","rotate","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","animated","position","top","left","transform","pointerEvents","min","step","parseFloat","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","ViewMode","Navbar","isGrouped","onGroupToggle","viewMode","onViewModeChange","svgRef","useRef","current","path","querySelector","length","getTotalLength","strokeDasharray","strokeDashoffset","getBoundingClientRect","y","ref","Object","values","mode","charAt","toUpperCase","slice","ImageSkeleton","containerWidth","containerHeight","imageItem","imageSkeleton","maxWidth","maxHeight","aspectRatio","skeletonAnimation","truncateImageTitle","title","formattedTitle","replace","split","word","match","toLowerCase","join","trim","substring","MIN_IMAGE_WIDTH","MIN_ZOOM","aspectRatioCache","WeakMap","sortedImagesCache","Map","rowLayoutCache","constructor","maxSize","__publicField","this","cache","set","key","firstKey","keys","next","delete","data","get","currentWidth","entry","abs","clear","calculateGapSize","baseGap","roundedGap","round","getAspectRatio","image","ratio","batchProcessAspectRatios","images","calculateOptimalDistribution","gap","aspectRatios","totalAspectRatio","reduce","sum","totalGapWidth","idealHeight","widths","floor","checkRowFit","minWidth","allImagesWideEnough","every","totalWidth","fits","predictedWidths","distributeImages","targetRowHeight","console","warn","sortedImages","cacheKey","img","id","has","sorted","sort","a","b","getSortedImages","rows","currentRow","currentRowAspectRatio","i","testRow","currentHeight","currentWidths","push","imageWidths","offset","calculateLayout","columns","effectiveWidth","baseColumns","calculateColumns","minImageWidth","maxImageWidth","gsap","registerPlugin","ScrollTrigger","CustomEase","_AnimationSystem","state","energy","MIN_ENERGY","activeItems","Set","timeline","ripples","spatialGrid","colorEnergy","startEnergyDecay","initializeCustomEases","create","getInstance","instance","ticker","add","ENERGY_DECAY_RATE","now","Date","ripple","entries","timestamp","RIPPLE_LIFETIME","addEnergy","amount","ENERGY_BOOST","MAX_ENERGY","getEnergy","getAnimationProperties","itemId","isActive","ease","transformOrigin","rotation","random","calculateRippleEffect","element","rect","elementCenter","totalEffect","blur","brightness","translateZ","distance","hypot","maxDistance","window","innerWidth","innerHeight","normalizedDistance","rippleAge","rippleStrength","strength","energyFactor","createBreathingAnimation","repeat","updateSpatialGrid","effects","breathingIntensity","BREATHING_INTENSITY","to","filter","createHoverAnimation","intensity","rippleEffect","rotationX","rotationY","onComplete","createProximityAnimation","globalX","globalY","addRipple","createMorphAnimation","borderRadius","gridKey","GRID_SIZE","forEach","items","getNearbyItems","point","gridX","gridY","nearby","dx","dy","Array","from","rippleId","toString","MAX_RIPPLES","oldest","updateColorEnergy","hue","document","documentElement","setProperty","getRipples","AnimationSystem","ImageItem$1","memo","groupCount","imageProcessor","onResize","isCarousel","groupImages","processedImage","onRipple","imageRef","containerRef","isHovered","setIsHovered","isLoaded","setIsLoaded","currentImage","setCurrentImage","low","src","animationSystem","useMemo","breathingAnimation","gestureEnergy","setGestureEnergy","gestureTimeoutRef","lastMousePosition","velocityRef","isIntersecting","options","setIsIntersecting","targetRef","observer","IntersectionObserver","observe","unobserve","useIntersectionObserver","threshold","rootMargin","triggerOnce","dimensions","maintainAspectRatio","_a","kill","handleHoverStart","useCallback","pause","overwrite","handleHoverEnd","resume","handleMouseMove","clientX","clientY","normalizedX","normalizedY","speed","newEnergy","clearTimeout","setTimeout","prev","animation","willChange","postMessage","action","imageSrc","ceil","handleMessage","event","addEventListener","removeEventListener","high","overflow","backfaceVisibility","WebkitBackfaceVisibility","perspective","WebkitPerspective","onMouseMove","onMouseLeave","onHoverStart","onHoverEnd","layout","layoutDependency","imageWrapper","alt","loading","objectFit","layoutId","onLoad","AnimatePresence","groupCounter","exit","carouselIndicator","imageTitle","prevProps","nextProps","ImageRow","onImageClick","isLastRow","rowHeight","groupedImages","processedImages","onImageOverflow","rowRef","imageStates","setImageStates","isOverflowing","setIsOverflowing","optimizedLayout","row","generateCacheKey","cachedLayout","normalizedZoom","availableWidth","minRequiredHeight","maxAllowedHeight","remainingWidth","widthPerImage","extraPixels","_","index","finalTotalWidth","diff","optimizedRow","optimizeRowLayout","proportion","newIsOverflowing","adjustmentPerImage","usedWidth","w","display","marginBottom","justifyContent","alignItems","flexWrap","group","find","g","some","flexShrink","flexGrow","ImageItem","imageId","newMap","ImageProcessor","worker","Worker","URL","url","initDB","onmessage","handleWorkerMessage","bind","db","openDB","upgrade","createObjectStore","getCachedImage","cacheImage","imageData","put","processNextMessage","isProcessing","messageQueue","message","shift","processImage","processBatch","cachedImage","uncachedImages","terminate","BannerView","delay","MasonryView","Masonry","breakpointCols","default","columnClassName","NextArrow","props","FaChevronRight","PrevArrow","FaChevronLeft","CarouselView","Slider","dots","infinite","slidesToShow","slidesToScroll","nextArrow","prevArrow","adaptiveHeight","customPaging","RippleEffect","resolution","propagationSpeed","onReady","canvasRef","bufferRef","previous","ripplesRef","frameRef","contextRef","initializeBuffers","buffer","radius","j","px","py","sqrt","factor","updateSimulation","nextBuffer","val","render","ctx","getImageData","pixelIndex","putImageData","requestAnimationFrame","canvas","getContext","cancelAnimationFrame","handleInteraction","touches","mixBlendMode","onTouchMove","ImageFeed","isLoading","windowSize","setWindowSize","handleResize","newWidth","newHeight","timeoutId","debouncedResize","useWindowSize","feedRef","setContainerWidth","setColumns","lightboxIndex","setLightboxIndex","lightboxImages","setLightboxImages","rowTransforms","setRowTransforms","scrollY","useViewportScroll","y1","useTransform","setProcessedImages","energyColor","setEnergyColor","setRipples","waterEffectReady","setWaterEffectReady","updateContainerWidth","resizeObserver","ResizeObserver","disconnect","interval","setInterval","getComputedStyle","getPropertyValue","clearInterval","isArray","validImages","groups","processedTitle","groupedRows","GRID","firstImages","handleImageOverflow","handleImageClick","clickedImage","groupIndex","findIndex","imagePath","handleRipple","r","flexDirection","feedContent","commonProps","BANNER","MASONRY","CAROUSEL","gridContainer","Lightbox","slides","description","open","close","plugins","Captions","Counter","Zoom","Thumbnails","thumbnails","border","padding","fade","swipe","carousel","finite","preload","spacing","imageFit","buttonPrev","buttonNext","parallaxLayer","ImageViewer","error","MainContent","searchQuery","filteredImages","includes","Fragment","api","axios","baseURL","async","getImages","Error","response","encodeURIComponent","statusText","request","ParticleBackground$1","React","particlesRef","animationFrameRef","lastUpdateRef","performanceMonitorRef","lastCheck","frames","reduced","setReduced","FPS","frameDelay","particleParams","maxParticles","baseHues","sizeRange","opacityRange","speedRange","poolSize","initializeParticlePool","particle","remove","createElement","classList","appendChild","speedX","speedY","phase","active","activateParticle","inactiveParticle","p","hueIndex","assign","PI","cssText","oldestActive","updateParticles","performance","delta","fps","sin","intervalId","firstChild","zIndex","LottieBackground","CUSTOM_PROPERTIES","DEFAULT_CUSTOM_PROPERTY_VALUES","CUSTOM_PROPERTIES_SCROLL_Y","CUSTOM_PROPERTIES_MOUSE_X","CUSTOM_PROPERTIES_MOUSE_Y","Layout","updateCustomProperties","mouseX","mouseY","log","updateScrollProperty","property","setImages","setIsLoading","setError","setSearchQuery","fetchedImages","err","errorMessage","fetchImages","ParticleBackground","Home","setFolders","setSelectedFolder","setZoom","setIsGrouped","setViewMode","folderList","getFolders","fetchFolders","imageList","newZoom","prevState","newMode","App","html","ReactDOMServer","renderToString","StrictMode"],"mappings":"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"}