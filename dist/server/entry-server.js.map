{"version":3,"file":"entry-server.js","sources":["../../src/shared/constants.ts","../../src/shared/lib/api.ts","../../src/client/hooks/useApiQueries.ts","../../src/client/components/Sidebar.tsx","../../src/client/components/CurrentDirectoryButton.tsx","../../src/client/components/SearchBar.tsx","../../src/client/components/ZoomSlider.tsx","../../src/client/components/Navbar.tsx","../../src/shared/utils/logger.ts","../../src/client/components/ParticleBackground.tsx","../../src/client/components/LottieBackground.tsx","../../src/client/components/Layout.tsx","../../src/client/components/ImageSkeleton.tsx","../../src/client/components/ImageItem.tsx","../../src/client/hooks/useIntersectionObserver.ts","../../src/client/components/ImageRow.tsx","../../src/client/hooks/useWindowSize.ts","../../src/shared/utils/stringUtils.ts","../../src/client/workers/workerPool.ts","../../src/shared/lib/imageCache.ts","../../src/client/workers/imageProcessor.ts","../../src/client/components/ChunkObserver.tsx","../../src/client/components/ImageFeed.tsx","../../src/client/components/ImageViewer.tsx","../../src/client/components/MainContent.tsx","../../src/client/pages/Home.tsx","../../src/client/App.tsx","../../src/entry-server.tsx"],"sourcesContent":["/// <reference types=\"vite/client\" />\r\n\r\nconst env = import.meta.env || {};\r\n\r\nconst getEnv = (key: string, defaultValue: string): string => {\r\n  return env[key] || defaultValue;\r\n};\r\n\r\n// Cache Time-To-Live: Duration in milliseconds for which cached data remains valid\r\nexport const CACHE_TTL = parseInt(getEnv('VITE_CACHE_TTL', '600000'), 10);\r\n\r\n// Maximum upload size: Limit for file uploads in bytes (default is ~1.5GB)\r\nexport const MAX_UPLOAD_SIZE = parseInt(getEnv('VITE_MAX_UPLOAD_SIZE', '1610612736'), 10);\r\n\r\n// Supported image formats: List of file extensions for allowed image uploads\r\nexport const SUPPORTED_IMAGE_FORMATS = ['.jpg', '.jpeg', '.png', '.gif'];\r\n\r\n// Client port: Port number for the Vite dev server\r\nexport const CLIENT_PORT = parseInt(getEnv('VITE_CLIENT_PORT', '5173'), 10);\r\n\r\n// API port: Port number on which the API server will listen\r\nexport const API_PORT = parseInt(getEnv('VITE_API_PORT', '3000'), 10);\r\n\r\n// API base URL: Root URL for API endpoints\r\nexport const API_BASE_URL = getEnv('VITE_API_BASE_URL', `http://localhost:${API_PORT}`);\r\n\r\n// Host: Hostname or IP address on which the server will run\r\nexport const HOST = getEnv('VITE_HOST', 'localhost');\r\n\r\n// Custom properties for dynamic styling\r\nexport const CUSTOM_PROPERTIES = {\r\n  SCROLL_Y: '--scroll-y',\r\n  MOUSE_X: '--mouse-x',\r\n  MOUSE_Y: '--mouse-y',\r\n};\r\n\r\n// Default values for custom properties\r\nexport const DEFAULT_CUSTOM_PROPERTY_VALUES = {\r\n  [CUSTOM_PROPERTIES.SCROLL_Y]: '0px',\r\n  [CUSTOM_PROPERTIES.MOUSE_X]: '0px',\r\n  [CUSTOM_PROPERTIES.MOUSE_Y]: '0px',\r\n};\r\n\r\n// API route constants\r\nexport const API_ROUTES = {\r\n  FOLDERS: '/api/folders',\r\n  IMAGES: '/api/images',\r\n  IMAGE: '/api/image',\r\n  SEARCH: '/api/search',\r\n  UPLOAD: '/api/upload',\r\n  HEALTH: '/api/health',\r\n  GET_CURRENT_DIRECTORY: '/api/getCurrentDirectory',\r\n  IMAGE_DYNAMIC: '/api/image/*',\r\n};","/// <reference path=\"../types/api.d.ts\" />\r\n\r\nimport axios from \"axios\";\r\nimport { ImageInfo, FolderInfo } from \"../../shared/types/types.js\";\r\nimport * as Api from \"../../shared/types/api.js\";\r\nimport { API_ROUTES } from \"../../shared/constants.js\";\r\n\r\nconst api = axios.create({\r\n  baseURL: import.meta.env.VITE_API_BASE_URL || '',\r\n});\r\n\r\n/**\r\n * Fetches the list of folders from the server.\r\n *\r\n * @returns {Promise<FolderInfo[]>} A promise that resolves to an array of folder information.\r\n * @throws Will throw an error if the API request fails.\r\n */\r\nexport const getFolders: typeof Api.getFolders = async () => {\r\n  try {\r\n    console.log('Fetching folders from:', `${api.defaults.baseURL}/api/folders`);\r\n    const response = await api.get(API_ROUTES.FOLDERS);\r\n    console.log('Response headers:', response.headers);\r\n    if (response.headers[\"content-type\"].includes(\"application/json\")) {\r\n      return response.data;\r\n    } else {\r\n      console.error(`Unexpected content type: ${response.headers[\"content-type\"]}`);\r\n      console.error(\"Response data:\", response.data);\r\n      throw new Error(`Server returned unexpected content type: ${response.headers[\"content-type\"]}`);\r\n    }\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error)) {\r\n      console.error(\"Axios error:\", error.message);\r\n      console.error(\"Response:\", error.response?.data);\r\n      console.error(\"Request URL:\", error.config?.url);\r\n      console.error(\"Request method:\", error.config?.method);\r\n      throw new Error(`Failed to fetch folders: ${error.message}`);\r\n    }\r\n    console.error(\"Error fetching folders:\", error);\r\n    throw new Error(\"Failed to fetch folders. Please try again later.\");\r\n  }\r\n}\r\n\r\n/**\r\n * Fetches the list of images for a specific folder from the server.\r\n *\r\n * @param {string} folder - The name of the folder to fetch images from.\r\n * @returns {Promise<ImageInfo[]>} A promise that resolves to an array of image information.\r\n * @throws Will throw an error if the API request fails.\r\n */\r\nexport async function getImages(folder: string | undefined): Promise<ImageInfo[]> {\r\n  if (!folder) {\r\n    console.warn(\"Folder parameter is missing or empty\");\r\n    return [];\r\n  }\r\n  try {\r\n    const response = await api.get<ImageInfo[]>(`/api/images?folder=${encodeURIComponent(folder)}`);\r\n    return response.data.map(img => ({\r\n      ...img,\r\n      width: isNaN(img.width) ? 0 : img.width,\r\n      height: isNaN(img.height) ? 0 : img.height\r\n    }));\r\n  } catch (error) {\r\n    console.error(\"Error in getImages:\", error);\r\n    throw new Error(\"Failed to fetch images\");\r\n  }\r\n}\r\n\r\n/**\r\n * Uploads files to a specified folder on the server.\r\n *\r\n * @param {string} folder - The name of the folder to upload files to.\r\n * @param {File[]} files - An array of File objects to be uploaded.\r\n * @param {function} onProgress - A callback function to report upload progress.\r\n * @returns {Promise<void>} A promise that resolves when the upload is complete.\r\n * @throws Will throw an error if the API request fails.\r\n */\r\nexport const uploadFiles: typeof Api.uploadFiles = async (\r\n  folder,\r\n  files,\r\n  onProgress\r\n) => {\r\n  const formData = new FormData();\r\n  formData.append(\"folder\", folder);\r\n  files.forEach((file) => formData.append(\"files\", file));\r\n\r\n  try {\r\n    await api.post(\"/api/upload\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      onUploadProgress: (progressEvent) => {\r\n        if (progressEvent.total) {\r\n          const percentCompleted = Math.round(\r\n            (progressEvent.loaded * 100) / progressEvent.total\r\n          );\r\n          onProgress(percentCompleted);\r\n        }\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error in uploadFiles:\", error);\r\n    throw new Error(\"Failed to upload files\");\r\n  }\r\n}\r\n\r\n/**\r\n * Searches for images across all folders based on a query string.\r\n *\r\n * @param {string} query - The search query string.\r\n * @returns {Promise<ImageInfo[]>} A promise that resolves to an array of image information matching the search query.\r\n * @throws Will throw an error if the API request fails.\r\n */\r\nexport const searchImages: typeof Api.searchImages = async (query) => {\r\n  try {\r\n    const response = await api.get<ImageInfo[]>(`/api/search?q=${encodeURIComponent(query)}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error in searchImages:\", error);\r\n    throw new Error(\"Failed to search images\");\r\n  }\r\n}\r\n\r\n/**\r\n * Fetches the current main directory from the server.\r\n *\r\n * @returns {Promise<string>} A promise that resolves to the current main directory path.\r\n * @throws Will throw an error if the API request fails.\r\n */\r\nexport const getCurrentDirectory: typeof Api.getCurrentDirectory = async () => {\r\n  try {\r\n    const response = await api.get<{ currentDirectory: string }>(\"/api/getCurrentDirectory\");\r\n    return response.data.currentDirectory;\r\n  } catch (error) {\r\n    console.error(\"Error in getCurrentDirectory:\", error);\r\n    throw new Error(\"Failed to get current directory\");\r\n  }\r\n}\r\n\r\nexport const deleteImage = async (imageId: string): Promise<void> => {\r\n  try {\r\n    await api.delete(`/api/images/${imageId}`);\r\n  } catch (error) {\r\n    console.error(\"Error in deleteImage:\", error);\r\n    throw new Error(\"Failed to delete image\");\r\n  }\r\n};\r\n","import { useQuery, useMutation, useQueryClient, UseQueryResult } from \"@tanstack/react-query\";\r\nimport * as api from \"../../shared/lib/api\";\r\nimport { FolderInfo, ImageInfo } from \"../../shared/types/types\";\r\n\r\ntype FoldersQueryResult = UseQueryResult<FolderInfo[], Error>;\r\ntype ImagesQueryResult = UseQueryResult<ImageInfo[], Error>;\r\n\r\nexport function useFoldersQuery(): FoldersQueryResult {\r\n  return useQuery<FolderInfo[], Error>({\r\n    queryKey: [\"folders\"],\r\n    queryFn: api.getFolders,\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n    retry: 3,\r\n  });\r\n}\r\n\r\nexport function useImagesQuery(folder: string | undefined): ImagesQueryResult {\r\n  return useQuery<ImageInfo[], Error>({\r\n    queryKey: [\"images\", folder],\r\n    queryFn: () => api.getImages(folder),\r\n    enabled: !!folder,\r\n    staleTime: 2 * 60 * 1000, // 2 minutes\r\n    retry: 2,\r\n  }) as ImagesQueryResult;\r\n}\r\n\r\nexport const useUploadFilesMutation = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: ({ folder, files, onProgress }: { folder: string; files: File[]; onProgress: (progress: number) => void }) => \r\n      api.uploadFiles(folder, files, onProgress),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: [\"images\"] });\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Error uploading files:\", error);\r\n    },\r\n  });\r\n};\r\n\r\nexport const useDeleteImageMutation = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: (imageId: string) => api.deleteImage(imageId),\r\n    onSuccess: (_, imageId) => {\r\n      queryClient.invalidateQueries({ queryKey: [\"images\"] });\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Error deleting image:\", error);\r\n    },\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { FolderInfo } from \"@shared/types/types.js\";\r\nimport styles from \"../styles/Sidebar.module.scss\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useFoldersQuery } from \"../hooks/useApiQueries\";\r\n\r\n// Define the props interface for the Sidebar component\r\ninterface SidebarProps {\r\n  selectedFolder: string;\r\n  setSelectedFolder: (folder: string) => void;\r\n}\r\n\r\n// Define the Sidebar component\r\nconst Sidebar: React.FC<SidebarProps> = ({\r\n  selectedFolder,\r\n  setSelectedFolder,\r\n}) => {\r\n  const { data: folders, isLoading, error } = useFoldersQuery();\r\n\r\n  if (isLoading) return <div>Loading folders...</div>;\r\n  if (error) return <div>Error loading folders</div>;\r\n  if (!folders) return null;\r\n\r\n  return (\r\n    // Main sidebar container\r\n    <motion.div\r\n      initial={{ x: -300 }}\r\n      animate={{ x: 0 }}\r\n      transition={{ type: \"spring\", stiffness: 120 }}\r\n      className={styles.sidebar}\r\n    >\r\n      <div className={`${styles.sidebar} flex flex-col h-full`}>\r\n        {/* Logo section */}\r\n        <div className={styles.logo}>Lora Finder</div>\r\n        {/* Folder list */}\r\n        <ul className={`${styles.folderList} flex-grow overflow-y-auto`}>\r\n          {/* Map through folders and create buttons for each */}\r\n          {folders.map((folder) => (\r\n            <li key={folder.name} className={styles.folderItem}>\r\n              <button\r\n                onClick={() => setSelectedFolder(folder.name)}\r\n                className={`${styles.folderButton} ${\r\n                  selectedFolder === folder.name ? styles.selectedFolder : \"\"\r\n                }`}\r\n              >\r\n                {folder.name}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {/* Upload button */}\r\n        <div className=\"p-8 mt-auto\">\r\n          <button className={`${styles.uploadButton} w-full`}>Upload</button>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\n// Export the Sidebar component\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { IconFolder } from '@tabler/icons-react';\r\nimport { motion } from 'framer-motion';\r\n\r\n/** Props for the CurrentDirectoryButton component. */\r\ninterface CurrentDirectoryButtonProps {\r\n  currentDirectory: string;\r\n}\r\n\r\n/** CurrentDirectoryButton component that displays the current directory.*/\r\nconst CurrentDirectoryButton: React.FC<CurrentDirectoryButtonProps> = ({ currentDirectory }) => {\r\n  return (\r\n    <motion.button\r\n      className=\"flex items-center bg-gray-700 px-3 py-1 rounded-md text-peach text-sm hover:bg-gray-600 transition-all duration-300 ease-in-out\"\r\n      whileHover={{ scale: 1.05 }}\r\n      whileTap={{ scale: 0.95 }}\r\n    >\r\n      {/* Folder icon */}\r\n      <IconFolder size={16} className=\"mr-2 text-yellow-500\" />\r\n      \r\n      {/* Current directory path */}\r\n      <motion.div\r\n        className=\"truncate max-w-xs\"\r\n        initial={{ clipPath: 'circle(0% at 50% 50%)' }}\r\n        animate={{ clipPath: 'circle(100% at 50% 50%)' }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n        <span>{currentDirectory}</span>\r\n      </motion.div>\r\n    </motion.button>\r\n  );\r\n};\r\n\r\nexport default CurrentDirectoryButton;\r\n","import { motion, useAnimation } from \"framer-motion\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport styles from \"../../client/styles/SearchBar.module.scss\";\r\n\r\n// Define the props interface for the SearchBar component\r\ninterface SearchBarProps {\r\n  onSearch: (query: string) => void;\r\n}\r\n\r\n// Define the SearchBar component\r\nconst SearchBar: React.FC<SearchBarProps> = ({ onSearch }) => {\r\n  // State to manage the search query\r\n  const [query, setQuery] = useState('');\r\n  const [debouncedQuery] = useDebounce(query, 300);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const controls = useAnimation();\r\n\r\n  // Handler for form submission\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onSearch(query);\r\n  };\r\n\r\n  // Fetch suggestions based on debouncedQuery\r\n  useEffect(() => {\r\n    if (debouncedQuery) {\r\n      // Update suggestions state\r\n    }\r\n  }, [debouncedQuery]);\r\n\r\n  // Render the SearchBar component\r\n  return (\r\n    <motion.form\r\n      onSubmit={handleSubmit}\r\n      className={styles.searchBarContainer}\r\n      initial={{ width: '200px' }}\r\n      animate={{ width: query ? '300px' : '200px' }}\r\n      transition={{ type: 'spring', stiffness: 300, damping: 30 }}\r\n    >\r\n      <motion.div\r\n        className={styles.searchBackground}\r\n        animate={{\r\n          background: query\r\n            ? 'linear-gradient(90deg, #4a00e0 0%, #8e2de2 100%)'\r\n            : 'rgba(255, 255, 255, 0.1)',\r\n        }}\r\n      />\r\n      <motion.input\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        className={styles.searchInput}\r\n        placeholder=\"Search the future...\"\r\n        whileFocus={{ scale: 1.05 }}\r\n        transition={{ type: 'spring', stiffness: 400, damping: 30 }}\r\n      />\r\n      {suggestions.length > 0 && (\r\n        <motion.ul\r\n          initial={{ opacity: 0, y: -10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className={styles.suggestions}\r\n        >\r\n          {suggestions.map((suggestion, index) => (\r\n            <motion.li\r\n              key={index}\r\n              whileHover={{ scale: 1.02, backgroundColor: 'rgba(255,255,255,0.1)' }}\r\n            >\r\n              {suggestion}\r\n            </motion.li>\r\n          ))}\r\n        </motion.ul>\r\n      )}\r\n    </motion.form>\r\n  );\r\n};\r\n\r\n// Export the SearchBar component\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\n// Define the props interface for the ZoomSlider component\r\ninterface ZoomSliderProps {\r\n  zoom: number;\r\n  onZoomChange: (zoom: number) => void;\r\n}\r\n\r\n// ZoomSlider component for adjusting image zoom level\r\nconst ZoomSlider: React.FC<ZoomSliderProps> = ({ zoom, onZoomChange }) => {\r\n  const sliderSpring = useSpring({\r\n    width: `${(zoom - 0.5) / 1.5 * 100}%`,\r\n    config: { tension: 300, friction: 10 }\r\n  });\r\n\r\n  return (\r\n    // Container for the zoom slider\r\n    <div className=\"flex items-center bg-gray-600 rounded-full p-2 overflow-hidden\">\r\n      {/* Zoom out icon */}\r\n      <motion.svg\r\n        whileHover={{ scale: 1.2 }}\r\n        className=\"text-gray-200 mr-2\"\r\n        width=\"20\"\r\n        height=\"20\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path d=\"M21 21L16.65 16.65M11 8V14M8 11H14M19 11C19 15.4183 15.4183 19 11 19C6.58172 19 3 15.4183 3 11C3 6.58172 6.58172 3 11 3C15.4183 3 19 6.58172 19 11Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n      </motion.svg>\r\n      {/* Range input for zoom control */}\r\n      <div className=\"relative w-24 h-2 bg-gray-500 rounded-full overflow-hidden\">\r\n        <animated.div className=\"absolute top-0 left-0 h-full bg-blue-400 rounded-full\" style={sliderSpring} />\r\n        <input\r\n          type=\"range\"\r\n          min=\"0.5\"\r\n          max=\"2\"\r\n          step=\"0.1\"\r\n          value={zoom}\r\n          onChange={(e) => onZoomChange(parseFloat(e.target.value))}\r\n          className=\"absolute top-0 left-0 w-full h-full opacity-0 cursor-pointer\"\r\n        />\r\n      </div>\r\n      {/* Zoom in icon */}\r\n      <motion.svg\r\n        whileHover={{ scale: 1.2 }}\r\n        className=\"text-gray-200 ml-2\"\r\n        width=\"20\"\r\n        height=\"20\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path d=\"M21 21L16.65 16.65M19 11C19 15.4183 15.4183 19 11 19C6.58172 19 3 15.4183 3 11C3 6.58172 6.58172 3 11 3C15.4183 3 19 6.58172 19 11Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n      </motion.svg>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export the ZoomSlider component\r\nexport default ZoomSlider;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { motion, useAnimation } from 'framer-motion';\r\nimport { gsap } from \"gsap\";\r\nimport CurrentDirectoryButton from \"../../client/components/CurrentDirectoryButton\";\r\nimport SearchBar from \"../../client/components/SearchBar\";\r\nimport ZoomSlider from \"../../client/components/ZoomSlider\";\r\nimport styles from \"../../client/styles/Navbar.module.scss\";\r\n\r\n// Update the props interface for the Navbar component\r\ninterface NavbarProps {\r\n  currentDirectory: string;\r\n  onSearch: (query: string) => void;\r\n  zoom: number;\r\n  onZoomChange: (newZoom: number) => void;\r\n  isGrouped: boolean;\r\n  onGroupToggle: () => void;\r\n}\r\n\r\n// Define the Navbar component\r\nconst Navbar: React.FC<NavbarProps> = ({\r\n  currentDirectory,\r\n  onSearch,\r\n  zoom,\r\n  onZoomChange,\r\n  isGrouped,\r\n  onGroupToggle,\r\n}) => {\r\n  const svgRef = useRef<SVGSVGElement>(null);\r\n  const controls = useAnimation();\r\n  const lightRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const svg = svgRef.current;\r\n    if (svg) {\r\n      const path = svg.querySelector('path');\r\n      if (path) {\r\n        gsap.to(path, {\r\n          attr: { d: \"M0,0 Q100,50 200,0 T400,0 V100 Q300,150 200,100 T0,100 Z\" },\r\n          duration: 2,\r\n          repeat: -1,\r\n          yoyo: true,\r\n          ease: \"power1.inOut\"\r\n        });\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleHover = () => {\r\n    controls.start({\r\n      scale: 1.05,\r\n      transition: { duration: 0.3 }\r\n    });\r\n  };\r\n\r\n  const handleHoverEnd = () => {\r\n    controls.start({\r\n      scale: 1,\r\n      transition: { duration: 0.3 }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (lightRef.current) {\r\n      gsap.to(lightRef.current, {\r\n        opacity: 0.7,\r\n        duration: 2,\r\n        repeat: -1,\r\n        yoyo: true,\r\n        ease: \"power1.inOut\"\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // Render the Navbar component\r\n  return (\r\n    <motion.nav\r\n      className={styles.navbar}\r\n      initial={{ y: -50, opacity: 0 }}\r\n      animate={{ y: 0, opacity: 1 }}\r\n      transition={{ duration: 0.5, ease: \"easeOut\" }}\r\n    >\r\n      <div ref={lightRef} className={styles.cornerLight}></div>\r\n      <svg ref={svgRef} className={styles.navbarBackground}>\r\n        <path d=\"M0,0 Q50,20 100,10 T200,30 T300,5 T400,25 V100 Q350,80 300,90 T200,70 T100,95 T0,75 Z\" />\r\n      </svg>\r\n      <motion.div \r\n        className={styles.leftSection}\r\n        whileHover={{ scale: 1.05 }}\r\n        whileTap={{ scale: 0.95 }}\r\n        animate={controls}\r\n      >\r\n        {/* Display the current directory */}\r\n        <CurrentDirectoryButton currentDirectory={currentDirectory} />\r\n        {/* Search functionality */}\r\n        <SearchBar onSearch={onSearch} />\r\n      </motion.div>\r\n      <motion.div \r\n        className={styles.rightSection}\r\n        whileHover={{ scale: 1.05 }}\r\n        whileTap={{ scale: 0.95 }}\r\n      >\r\n        {/* Add this button */}\r\n        <motion.button\r\n          onClick={onGroupToggle}\r\n          className={styles.viewToggleButton}\r\n          whileHover={{ scale: 1.05 }}\r\n          whileTap={{ scale: 0.95 }}\r\n        >\r\n          {isGrouped ? 'Ungroup' : 'Group'}\r\n        </motion.button>\r\n        {/* Zoom control slider */}\r\n        <ZoomSlider zoom={zoom} onZoomChange={onZoomChange} />\r\n      </motion.div>\r\n    </motion.nav>\r\n  );\r\n};\r\n\r\n// Export the Navbar component\r\nexport default Navbar;","import winston from 'winston';\r\n\r\nconst isBrowser = typeof window !== 'undefined';\r\n\r\nlet logger: any;\r\n\r\nif (isBrowser) {\r\n  // Browser-specific logger\r\n  logger = {\r\n    error: console.error,\r\n    warn: console.warn,\r\n    info: console.info,\r\n    debug: console.debug,\r\n    log: console.log,\r\n  };\r\n} else {\r\n  // Node.js-specific logger using Winston\r\n  logger = winston.createLogger({\r\n    level: 'info',\r\n    format: winston.format.combine(\r\n      winston.format.timestamp(),\r\n      winston.format.json()\r\n    ),\r\n    transports: [\r\n      new winston.transports.Console(),\r\n      new winston.transports.File({ filename: 'error.log', level: 'error' }),\r\n      new winston.transports.File({ filename: 'combined.log' }),\r\n    ],\r\n  });\r\n}\r\n\r\nexport default logger;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport styles from \"../../client/styles/ParticleBackground.module.scss\";\r\nimport { throttle } from 'lodash-es';\r\nimport logger from \"../../shared/utils/logger\";\r\n\r\nconst ParticleBackground: React.FC = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const NUM_STARS = 5000;\r\n\r\n  useEffect(() => {\r\n    const initWebGL = () => {\r\n      if (!canvasRef.current) return;\r\n\r\n      const gl = canvasRef.current.getContext(\"webgl2\");\r\n      if (!gl) {\r\n        logger.error(\"WebGL 2 not supported\");\r\n        return;\r\n      }\r\n\r\n      // Create shaders\r\n      const vertexShaderSource = `\r\n        attribute vec3 position;\r\n        attribute vec4 color;\r\n        varying vec4 vColor;\r\n        uniform float time;\r\n        void main() {\r\n          float angle = time * 0.1 + float(gl_InstanceID);\r\n          float shimmer = (sin(angle) * 0.5 + 0.5) * 0.3;\r\n          gl_Position = vec4(position, 1.0);\r\n          vColor = color * (1.0 + shimmer);\r\n        }\r\n      `;\r\n      const fragmentShaderSource = `\r\n        precision mediump float;\r\n        varying vec4 vColor;\r\n        void main() {\r\n          float star = smoothstep(0.5, 0.0, length(vColor.rgb));\r\n          gl_FragColor = vec4(vColor.rgb * star, star);\r\n        }\r\n      `;\r\n\r\n      const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\r\n      const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\r\n\r\n      if (!vertexShader || !fragmentShader) {\r\n        logger.error(\"Failed to create shaders\");\r\n        return;\r\n      }\r\n\r\n      // Create program\r\n      const program = createProgram(gl, vertexShader, fragmentShader);\r\n      if (!program) {\r\n        logger.error(\"Failed to create shader program\");\r\n        return;\r\n      }\r\n\r\n      // Set up attributes and uniforms\r\n      const positionAttribute = gl.getAttribLocation(program, \"position\");\r\n      const colorAttribute = gl.getAttribLocation(program, \"color\");\r\n      const timeUniform = gl.getUniformLocation(program, \"time\");\r\n\r\n      if (positionAttribute === -1 || colorAttribute === -1 || timeUniform === null) {\r\n        logger.error(\"Failed to get attribute or uniform locations\");\r\n        return;\r\n      }\r\n\r\n      // Create buffers\r\n      const starBuffer = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, starBuffer);\r\n\r\n      const starData = new Float32Array(NUM_STARS * 7);\r\n      for (let i = 0; i < NUM_STARS; i++) {\r\n        const baseIndex = i * 7;\r\n        starData[baseIndex] = Math.random() * 2 - 1; // x\r\n        starData[baseIndex + 1] = Math.random() * 2 - 1; // y\r\n        starData[baseIndex + 2] = Math.random(); // z\r\n        starData[baseIndex + 3] = Math.random(); // r\r\n        starData[baseIndex + 4] = Math.random(); // g\r\n        starData[baseIndex + 5] = Math.random(); // b\r\n        starData[baseIndex + 6] = Math.random() * 0.5 + 0.5; // a\r\n      }\r\n      gl.bufferData(gl.ARRAY_BUFFER, starData, gl.STATIC_DRAW);\r\n\r\n      const handleMouseMove = throttle((event: MouseEvent) => {\r\n        const rect = canvasRef.current?.getBoundingClientRect();\r\n        if (!rect) return;\r\n\r\n        const x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\r\n        const y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, starBuffer);\r\n        const starData = new Float32Array(NUM_STARS * 7);\r\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, starData);\r\n\r\n        for (let i = 0; i < NUM_STARS; i++) {\r\n          const baseIndex = i * 7;\r\n          starData[baseIndex] += (x - starData[baseIndex]) * 0.01;\r\n          starData[baseIndex + 1] += (y - starData[baseIndex + 1]) * 0.01;\r\n        }\r\n\r\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, starData);\r\n      }, 16);\r\n\r\n      window.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n      const startTime = performance.now();\r\n\r\n      const animate = () => {\r\n        const now = performance.now();\r\n        const time = (now - startTime) / 1000; // Convert to seconds\r\n\r\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n        gl.clearColor(0, 0, 0, 1);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n        gl.useProgram(program);\r\n        gl.uniform1f(timeUniform, time);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, starBuffer);\r\n        gl.enableVertexAttribArray(positionAttribute);\r\n        gl.vertexAttribPointer(positionAttribute, 3, gl.FLOAT, false, 28, 0);\r\n        gl.enableVertexAttribArray(colorAttribute);\r\n        gl.vertexAttribPointer(colorAttribute, 4, gl.FLOAT, false, 28, 12);\r\n\r\n        gl.drawArrays(gl.POINTS, 0, NUM_STARS);\r\n\r\n        requestAnimationFrame(animate);\r\n      };\r\n\r\n      animate();\r\n\r\n      return () => {\r\n        window.removeEventListener(\"mousemove\", handleMouseMove);\r\n        handleMouseMove.cancel();\r\n      };\r\n    };\r\n\r\n    initWebGL();\r\n  }, []);\r\n\r\n  return <canvas ref={canvasRef} className={styles.particleBackground} />;\r\n};\r\n\r\nconst createShader = (gl: WebGL2RenderingContext, type: number, source: string): WebGLShader | null => {\r\n  const shader = gl.createShader(type);\r\n  if (!shader) {\r\n    logger.error(\"Unable to create shader\");\r\n    return null;\r\n  }\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    logger.error(\"An error occurred compiling the shaders: \" + gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n  return shader;\r\n};\r\n\r\nconst createProgram = (gl: WebGL2RenderingContext, vertexShader: WebGLShader | null, fragmentShader: WebGLShader | null): WebGLProgram | null => {\r\n  if (!vertexShader || !fragmentShader) {\r\n    logger.error(\"Invalid shaders\");\r\n    return null;\r\n  }\r\n  const program = gl.createProgram();\r\n  if (!program) {\r\n    logger.error(\"Unable to create program\");\r\n    return null;\r\n  }\r\n  gl.attachShader(program, vertexShader);\r\n  gl.attachShader(program, fragmentShader);\r\n  gl.linkProgram(program);\r\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n    logger.error(\"Unable to initialize the shader program: \" + gl.getProgramInfoLog(program));\r\n    return null;\r\n  }\r\n  return program;\r\n};\r\n\r\nexport default ParticleBackground;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport styles from \"../../client/styles/LottieBackground.module.scss\";\r\nimport ParticleBackground from \"../../client/components/ParticleBackground\";\r\n\r\nconst LottieBackground: React.FC = () => {\r\n  const gradientRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const updateGradient = (event: MouseEvent) => {\r\n      if (gradientRef.current) {\r\n        const x = event.clientX / window.innerWidth;\r\n        const y = event.clientY / window.innerHeight;\r\n        gradientRef.current.style.background = `\r\n          radial-gradient(\r\n            circle at ${x * 100}% ${y * 100}%,\r\n            rgba(238, 119, 82, 0.3),\r\n            rgba(231, 60, 126, 0.3),\r\n            rgba(35, 166, 213, 0.3),\r\n            rgba(35, 213, 171, 0.3)\r\n          )\r\n        `;\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"mousemove\", updateGradient);\r\n    return () => window.removeEventListener(\"mousemove\", updateGradient);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.lottieBackground}>\r\n      <div ref={gradientRef} className={styles.animatedBackground}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LottieBackground;\r\n","import React from 'react';\r\nimport Sidebar from \"../../client/components/Sidebar\";\r\nimport Navbar from \"../../client/components/Navbar\";\r\nimport MainContent from \"../../client/components/MainContent\";\r\nimport { FolderInfo, ImageInfo } from \"../../shared/types/types\";\r\nimport { getImages } from \"../../shared/lib/api\";\r\nimport ParticleBackground from \"../../client/components/ParticleBackground\";\r\nimport LottieBackground from \"../../client/components/LottieBackground\";\r\nimport { useCustomProperties } from \"../../client/hooks/useCustomProperties\";\r\nimport { useFoldersQuery, useImagesQuery } from \"../../client/hooks/useApiQueries\";\r\n\r\ninterface LayoutProps {\r\n  folders?: FolderInfo[];\r\n  selectedFolder: string;\r\n  onFolderChange: (folder: string) => void;\r\n  currentDirectory: string;\r\n  onSearch: (query: string) => void;\r\n  zoom: number;\r\n  onZoomChange: (newZoom: number) => void;\r\n  isGrouped: boolean;\r\n  onGroupToggle: () => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Layout: React.FC<LayoutProps> = ({\r\n  folders,\r\n  selectedFolder,\r\n  onFolderChange,\r\n  currentDirectory,\r\n  onSearch,\r\n  zoom,\r\n  onZoomChange,\r\n  isGrouped,\r\n  onGroupToggle,\r\n  children,\r\n}) => {\r\n  return (\r\n    <div className=\"flex flex-col h-screen relative bg-transparent\">\r\n      <div className=\"gradient-overlay\"></div>\r\n      <LottieBackground />\r\n      <ParticleBackground />\r\n      <Navbar\r\n        currentDirectory={currentDirectory}\r\n        onSearch={onSearch}\r\n        zoom={zoom}\r\n        onZoomChange={onZoomChange}\r\n        isGrouped={isGrouped}\r\n        onGroupToggle={onGroupToggle}\r\n      />\r\n      <div className=\"flex flex-1 overflow-hidden\">\r\n        <Sidebar\r\n          selectedFolder={selectedFolder}\r\n          setSelectedFolder={onFolderChange}\r\n        />\r\n        <main className=\"flex-1 overflow-auto p-4 relative bg-transparent\">\r\n          <div className=\"relative z-10\">\r\n            {children}\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;","import React from \"react\";\r\nimport styles from \"../../client/styles/ImageItem.module.scss\";\r\n\r\ninterface ImageSkeletonProps {\r\n  containerWidth: number;\r\n  containerHeight: number;\r\n}\r\n\r\nconst ImageSkeleton: React.FC<ImageSkeletonProps> = ({ containerWidth, containerHeight }) => {\r\n  return (\r\n    <div \r\n      className={`${styles.imageItem} ${styles.imageSkeleton}`}\r\n      style={{\r\n        width: containerWidth,\r\n        height: containerHeight,\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n        aspectRatio: `${containerWidth} / ${containerHeight}`,\r\n      }}\r\n    >\r\n      <div className={styles.skeletonAnimation}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageSkeleton;\r\n","import React, { memo, useState, useEffect, useCallback } from 'react';\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { ImageInfo } from \"../../shared/types/types\";\r\nimport styles from \"../../client/styles/ImageItem.module.scss\";\r\nimport { useIntersectionObserver } from \"../../client/hooks/useIntersectionObserver\";\r\nimport { WorkerPool } from \"../../shared/types/workerPool\";\r\nimport { createImageProcessor } from \"../../client/workers/imageProcessor\";\r\n\r\ninterface ImageItemProps {\r\n  image: ImageInfo;\r\n  onClick: (image: ImageInfo) => void;\r\n  containerWidth: number;\r\n  containerHeight: number;\r\n  zoom: number;\r\n  groupCount?: number;\r\n  workerPool: WorkerPool;\r\n  imageProcessor: ReturnType<typeof createImageProcessor>;\r\n}\r\n\r\nconst ImageItem: React.FC<ImageItemProps> = ({ \r\n  image, \r\n  onClick, \r\n  containerWidth, \r\n  containerHeight, \r\n  zoom, \r\n  groupCount,\r\n  workerPool,\r\n  imageProcessor // Add this line\r\n}) => {\r\n  const [ref, isIntersecting] = useIntersectionObserver({\r\n    threshold: 0.1,\r\n    triggerOnce: true\r\n  }) as [React.RefObject<HTMLDivElement>, boolean];\r\n\r\n  const [processedImage, setProcessedImage] = useState<string | null>(null);\r\n\r\n  const setProcessedImageCallback = useCallback((processedImage: string) => {\r\n    console.log('Image processed:', image.id);\r\n    setProcessedImage(processedImage);\r\n  }, [image.id]);\r\n\r\n  useEffect(() => {\r\n    if (isIntersecting) {\r\n      workerPool.processImage(image, isIntersecting).then(setProcessedImageCallback);\r\n    }\r\n  }, [isIntersecting, image, workerPool, setProcessedImageCallback]);\r\n\r\n  const clipPathVariants = {\r\n    hidden: { clipPath: 'inset(100% 0 0 0)' },\r\n    visible: { \r\n      clipPath: 'inset(0% 0 0 0)',\r\n      transition: { duration: 0.5, ease: \"easeOut\" }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      ref={ref as React.Ref<HTMLDivElement>}\r\n      className={styles.imageItem}\r\n      style={{\r\n        width: containerWidth,\r\n        height: containerHeight,\r\n      }}\r\n      whileHover={{ \r\n        scale: 1.05,\r\n      }}\r\n      whileTap={{ scale: 0.95 }}\r\n      onClick={() => onClick(image)}\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      exit={{ opacity: 0, y: -20 }}\r\n      transition={{\r\n        type: \"spring\",\r\n        stiffness: 260,\r\n        damping: 20\r\n      }}\r\n    >\r\n      <AnimatePresence>\r\n        {isIntersecting ? (\r\n          <motion.div\r\n            key=\"image\"\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"hidden\"\r\n            variants={clipPathVariants}\r\n          >\r\n            <motion.img\r\n              src={processedImage || image.src}\r\n              alt={image.alt}\r\n              style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                objectFit: 'cover',\r\n              }}\r\n              whileHover={{\r\n                scale: 1.1,\r\n                transition: { duration: 0.3 }\r\n              }}\r\n            />\r\n          </motion.div>\r\n        ) : (\r\n          <motion.div\r\n            key=\"skeleton\"\r\n            className={styles.imageSkeleton}\r\n            style={{\r\n              width: '100%',\r\n              height: '100%',\r\n              backgroundColor: '#f0f0f0',\r\n            }}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n      \r\n      {groupCount && groupCount > 1 && (\r\n        <motion.div \r\n          className={styles.groupCounter}\r\n          initial={{ opacity: 0, scale: 0.5 }}\r\n          animate={{ opacity: 1, scale: 1 }}\r\n          transition={{ delay: 0.2, duration: 0.3 }}\r\n        >\r\n          {groupCount}\r\n        </motion.div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\n// Use React.memo to memoize the component\r\nexport default memo(ImageItem, (prevProps, nextProps) => {\r\n  return (\r\n    prevProps.image.id === nextProps.image.id &&\r\n    prevProps.containerWidth === nextProps.containerWidth &&\r\n    prevProps.containerHeight === nextProps.containerHeight &&\r\n    prevProps.zoom === nextProps.zoom &&\r\n    prevProps.groupCount === nextProps.groupCount\r\n  );\r\n});\r\n","import { useEffect, useState, useRef } from \"react\";\r\n\r\nexport function useIntersectionObserver(options = {}) {\r\n  const [isIntersecting, setIsIntersecting] = useState(false);\r\n  const targetRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      setIsIntersecting(entry.isIntersecting);\r\n    }, options);\r\n\r\n    if (targetRef.current) {\r\n      observer.observe(targetRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (targetRef.current) {\r\n        observer.unobserve(targetRef.current);\r\n      }\r\n    };\r\n  }, [options]);\r\n\r\n  return [targetRef, isIntersecting];\r\n}\r\n","import React, { useRef, useImperativeHandle, forwardRef, useState, useEffect } from \"react\";\r\nimport useWindowSize from \"../../client/hooks/useWindowSize\";\r\nimport { ImageInfo } from \"../../shared/types/types\";\r\nimport ImageItem from \"../../client/components/ImageItem\";\r\nimport styles from \"../../client/styles/ImageRow.module.scss\";\r\nimport { motion } from \"framer-motion\";\r\nimport { WorkerPool } from \"../../shared/types/workerPool\";\r\nimport { createImageProcessor } from \"../../client/workers/imageProcessor\";\r\n\r\n// Add this interface at the top of the file\r\ninterface LayoutItem {\r\n  id: string;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\n// Define the props interface for the ImageRow component\r\ninterface ImageRowProps {\r\n  images: ImageInfo[];\r\n  onImageClick: (image: ImageInfo, groupImages: ImageInfo[]) => void;\r\n  columns: number;\r\n  zoom: number;\r\n  isLastRow: boolean;\r\n  rowHeight: number;\r\n  groupedImages: { key: string; images: ImageInfo[]; isCarousel: boolean }[];\r\n  processedImages: { [key: string]: { low: string; high: string } };\r\n  workerPool: WorkerPool;\r\n  imageProcessor: ReturnType<typeof createImageProcessor>;\r\n  isVisible: boolean;\r\n  isIntersecting:  boolean;\r\n  intersectionRef: React.RefObject<HTMLDivElement> | ((node: HTMLDivElement | null) => void);\r\n  layout: LayoutItem[];\r\n  containerWidth: number;\r\n}\r\n\r\n// Define the ref interface\r\nexport interface ImageRowHandle {\r\n  getNode: () => HTMLDivElement | null;\r\n}\r\n\r\n// Modify the component to use forwardRef\r\nconst ImageRow = forwardRef<ImageRowHandle, ImageRowProps>((props, ref) => {\r\n  const {\r\n    images,\r\n    onImageClick,\r\n    columns,\r\n    zoom,\r\n    isLastRow,\r\n    groupedImages,\r\n    rowHeight,\r\n    processedImages,\r\n    workerPool,\r\n    imageProcessor,\r\n    isVisible,\r\n    isIntersecting,\r\n    intersectionRef,\r\n    layout,\r\n    containerWidth,\r\n  } = props;\r\n\r\n  const rowRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Implement useImperativeHandle\r\n  useImperativeHandle(ref, () => ({\r\n    getNode: () => rowRef.current,\r\n  }));\r\n\r\n  // Create a ref for the row div and a state for its width\r\n  const [rowWidth, setRowWidth] = useState(0);\r\n  const { width: windowWidth } = useWindowSize();\r\n\r\n  // Effect to update row width when the ref changes\r\n  useEffect(() => {\r\n    if (rowRef.current) {\r\n      setRowWidth(rowRef.current.offsetWidth);\r\n    }\r\n  }, [rowRef.current, windowWidth]);\r\n\r\n  // Add a check for images\r\n  if (!images || images.length === 0) {\r\n    return null; // or return a placeholder component\r\n  }\r\n\r\n  // Calculate the total aspect ratio of all images in the row\r\n  const totalAspectRatio = images.reduce(\r\n    (sum, img) => sum + img.width / img.height,\r\n    0\r\n  );\r\n\r\n  // Calculate the ideal row width\r\n  const idealRowWidth = rowWidth * zoom;\r\n\r\n  const imageWidths = images.map((image, index) => {\r\n    const aspectRatio = image.width / image.height;\r\n    return (aspectRatio / totalAspectRatio) * idealRowWidth;\r\n  });\r\n\r\n  const containerHeight =\r\n    isLastRow && images.length < columns\r\n      ? (imageWidths[0] / images[0].width) * images[0].height\r\n      : (imageWidths[0] / images[0].width) * images[0].height;\r\n\r\n  const rowVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.1,\r\n      },\r\n    },\r\n  };\r\n\r\n  const imageVariants = {\r\n    hidden: { opacity: 0, scale: 0.8 },\r\n    visible: {\r\n      opacity: 1,\r\n      scale: 1,\r\n      transition: {\r\n        type: 'spring',\r\n        damping: 15,\r\n        stiffness: 100,\r\n      },\r\n    },\r\n  };\r\n\r\n  if (!isVisible) {\r\n    return <div style={{ height: containerHeight }} />;\r\n  }\r\n\r\n  if (!isVisible || !isIntersecting) {\r\n    return <div ref={intersectionRef} style={{ height: containerHeight }} />;\r\n  }\r\n\r\n  const safeHeight = isNaN(containerHeight) || containerHeight <= 0\r\n    ? `${rowHeight}px`\r\n    : `${containerHeight}px`;\r\n\r\n  return (\r\n    <motion.div\r\n      ref={rowRef}\r\n      className={styles.imageRow}\r\n      variants={rowVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      style={{ \r\n        height: safeHeight,\r\n        transform: `translateY(${layout[0]?.y ?? 0}px)`\r\n      }}\r\n    >\r\n      {images.map((image, index) => {\r\n        const group = groupedImages.find(g => g.images.some(img => img.id === image.id));\r\n        const groupCount = group ? group.images.length : 1;\r\n\r\n        return (\r\n          <motion.div\r\n            key={image.id}\r\n            className={styles.imageWrapper}\r\n            style={{ \r\n              width: `${(imageWidths[index] / idealRowWidth) * 100}%`,\r\n              height: containerHeight,\r\n            }}\r\n            variants={imageVariants}\r\n            data-image-id={image.id}\r\n          >\r\n            <ImageItem\r\n              image={image}\r\n              onClick={() =>\r\n                onImageClick(image, group ? group.images : [image])\r\n              }\r\n              containerWidth={imageWidths[index]}\r\n              containerHeight={containerHeight}\r\n              zoom={zoom}\r\n              groupCount={groupCount}\r\n              imageProcessor={imageProcessor}\r\n              workerPool={workerPool}\r\n            />\r\n          </motion.div>\r\n        );\r\n      })}\r\n    </motion.div>\r\n  );\r\n});\r\n\r\nexport default ImageRow;\r\n","import { useState, useEffect } from 'react';\r\n\r\n// Define the structure for the window size object\r\ninterface WindowSize {\r\n  width: number | undefined;\r\n  height: number | undefined;\r\n}\r\n\r\n// Custom hook to track and return the current window size\r\nfunction useWindowSize() {\r\n  // State to store the current window size\r\n  const [windowSize, setWindowSize] = useState<WindowSize>({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Variables for debouncing and tracking size changes\r\n    let timeoutId: NodeJS.Timeout | null = null;\r\n    let lastWidth = window.innerWidth;\r\n    let lastHeight = window.innerHeight;\r\n\r\n    // Function to handle window resize events\r\n    function handleResize() {\r\n      // Clear any existing timeout to debounce the resize event\r\n      if (timeoutId) clearTimeout(timeoutId);\r\n\r\n      // Set a new timeout to update the window size after a short delay\r\n      timeoutId = setTimeout(() => {\r\n        const newWidth = window.innerWidth;\r\n        const newHeight = window.innerHeight;\r\n\r\n        // Only update the state if the size has actually changed\r\n        if (newWidth !== lastWidth || newHeight !== lastHeight) {\r\n          lastWidth = newWidth;\r\n          lastHeight = newHeight;\r\n          setWindowSize({ width: newWidth, height: newHeight });\r\n        }\r\n      }, 200); // 200ms delay for debouncing\r\n    }\r\n\r\n    // Add event listener for window resize\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Call handleResize immediately to set initial size\r\n    handleResize();\r\n    \r\n    // Cleanup function to remove event listener\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n\r\n  // Return the current window size\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;","export function truncateImageTitle(title: string | undefined): string {\r\n  if (!title) return \"Untitled\";\r\n\r\n  // Remove file extension\r\n  const withoutExtension = title.replace(/\\.[^/.]+$/, \"\");\r\n\r\n  // Remove common suffixes and numbers at the end\r\n  const cleanTitle = withoutExtension\r\n    .replace(/\\.(preview|thumbnail)$/, \"\")\r\n    .replace(/_thumb$/, \"\")\r\n    .replace(/\\s*\\d+$/, \"\"); // Remove numbers at the end\r\n\r\n  // Replace underscores and hyphens with spaces, then capitalize each word\r\n  const formattedTitle = cleanTitle\r\n    .replace(/[_-]/g, \" \")\r\n    .replace(\r\n      /\\w\\S*/g,\r\n      (word) => word.charAt(0).toUpperCase() + word.substr(1).toLowerCase()\r\n    );\r\n\r\n  // Trim any leading or trailing spaces\r\n  const trimmedTitle = formattedTitle.trim();\r\n\r\n  // Truncate to a maximum length (e.g., 30 characters)\r\n  const maxLength = 30;\r\n  return trimmedTitle.length > maxLength\r\n    ? trimmedTitle.substring(0, maxLength) + \"...\"\r\n    : trimmedTitle;\r\n}\r\n","import { ImageInfo } from \"../../shared/types/types\";\r\nimport ImageProcessorWorker from \"./imageProcessorWorker?worker\";\r\n\r\nclass BrowserWorkerPool {\r\n  private workers: Worker[];\r\n  private queue: { image: ImageInfo; resolve: (result: string) => void; isVisible: boolean }[];\r\n  private busyWorkers: Set<Worker>;\r\n\r\n  constructor(size: number) {\r\n    this.workers = Array.from({ length: size }, () => new ImageProcessorWorker());\r\n    this.queue = [];\r\n    this.busyWorkers = new Set();\r\n\r\n    this.workers.forEach((worker) => {\r\n      worker.onmessage = this.handleWorkerMessage.bind(this, worker);\r\n    });\r\n  }\r\n\r\n  private handleWorkerMessage(worker: Worker, event: MessageEvent) {\r\n    if (event.data.action === \"imageProcessed\") {\r\n      const task = this.queue.shift();\r\n      if (task) {\r\n        task.resolve(event.data.processedImage);\r\n      }\r\n      this.busyWorkers.delete(worker);\r\n      this.processQueue();\r\n    }\r\n  }\r\n\r\n  private processQueue() {\r\n    this.queue.sort((a, b) => (a.isVisible === b.isVisible) ? 0 : a.isVisible ? -1 : 1);\r\n\r\n    while (this.queue.length > 0 && this.busyWorkers.size < this.workers.length) {\r\n      const worker = this.workers.find((w) => !this.busyWorkers.has(w));\r\n      if (worker) {\r\n        const task = this.queue.shift()!;\r\n        worker.postMessage({ action: \"processImage\", ...task.image, isVisible: task.isVisible });\r\n        this.busyWorkers.add(worker);\r\n      }\r\n    }\r\n  }\r\n\r\n  public processImage(image: ImageInfo, isVisible: boolean): Promise<string> {\r\n    return new Promise((resolve) => {\r\n      this.queue.push({ image, resolve, isVisible });\r\n      this.processQueue();\r\n    });\r\n  }\r\n\r\n  public terminate() {\r\n    this.workers.forEach((worker) => worker.terminate());\r\n  }\r\n}\r\n\r\nclass NodeWorkerPool {\r\n  constructor(size: number) {\r\n    console.warn('NodeWorkerPool is not implemented yet');\r\n  }\r\n\r\n  processImage(image: ImageInfo, isVisible: boolean): Promise<string> {\r\n    console.warn('NodeWorkerPool.processImage is not implemented yet');\r\n    return Promise.resolve('dummy-processed-image-data');\r\n  }\r\n\r\n  terminate() {\r\n    console.warn('NodeWorkerPool.terminate is not implemented yet');\r\n  }\r\n}\r\n\r\ninterface WorkerPool {\r\n  processImage(image: ImageInfo, isVisible: boolean): Promise<string>;\r\n  terminate(): void;\r\n}\r\n\r\nexport function createWorkerPool(size: number = 4): WorkerPool {\r\n  if (typeof window !== 'undefined' && typeof Worker !== 'undefined') {\r\n    return new BrowserWorkerPool(size);\r\n  } else {\r\n    return new NodeWorkerPool(size);\r\n  }\r\n}\r\n\r\n// Remove this line\r\n// export const workerPool = new WorkerPool(navigator.hardwareConcurrency || 4);\r\n","import { CACHE_TTL } from \"../../shared/constants.js\";\r\nimport { ImageInfo } from \"../../shared/types/types.js\";\r\n\r\n// Define the structure of a cache item\r\ninterface CacheItem {\r\n  data: ImageInfo[];\r\n  expiry: number;\r\n}\r\n\r\n// Initialize the cache object\r\nconst cache: { [key: string]: CacheItem } = {};\r\n\r\n// Set the maximum number of items in the cache\r\nconst MAX_CACHE_SIZE = 100; // Adjust as needed\r\n\r\n// Function to remove the oldest item when cache exceeds maximum size\r\nfunction trimCache() {\r\n  const cacheKeys = Object.keys(cache);\r\n  if (cacheKeys.length > MAX_CACHE_SIZE) {\r\n    const oldestKey = cacheKeys.reduce((a, b) =>\r\n      cache[a].expiry < cache[b].expiry ? a : b\r\n    );\r\n    delete cache[oldestKey];\r\n  }\r\n}\r\n\r\n// Function to retrieve cached images for a specific folder\r\nexport function getCachedImages(folder: string): ImageInfo[] | undefined {\r\n  const item = cache[folder];\r\n  if (item && Date.now() < item.expiry) {\r\n    return item.data;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n// Function to store images in the cache for a specific folder\r\nexport function setCachedImages(folder: string, images: ImageInfo[]): void {\r\n  cache[folder] = {\r\n    data: images,\r\n    expiry: Date.now() + CACHE_TTL,\r\n  };\r\n  trimCache();\r\n}\r\n\r\n// Function to remove a specific folder from the cache\r\nexport function invalidateCache(folder: string): void {\r\n  delete cache[folder];\r\n}\r\n\r\n// Function to check if an image is cached in a folder\r\nexport function isCached(folder: string, imageId: string): boolean {\r\n  const cachedImages = getCachedImages(folder);\r\n  return cachedImages ? cachedImages.some((img) => img.id === imageId) : false;\r\n}\r\n","import { openDB, IDBPDatabase } from \"idb\";\r\nimport {\r\n  getCachedImages,\r\n  setCachedImages,\r\n  isCached,\r\n  invalidateCache,\r\n} from \"../../shared/lib/imageCache\";\r\n\r\ntype ImageProcessorMessage =\r\n  | { action: \"processImage\"; images: { id: string; src: string; width: number; height: number; folder: string }[] }\r\n  | { action: \"processBatch\"; images: { id: string; src: string; width: number; height: number; folder: string }[] }\r\n  | { action: \"imageProcessed\"; id: string; processedImage: string; folder: string };\r\n\r\nclass ImageProcessor {\r\n  private worker: Worker;\r\n  private db: IDBPDatabase | null = null;\r\n  private messageQueue: ImageProcessorMessage[] = [];\r\n  private isProcessing = false;\r\n\r\n  constructor() {\r\n    this.worker = new Worker(\r\n      new URL(\"./imageProcessorWorker.ts\", import.meta.url),\r\n      { type: \"module\" }\r\n    );\r\n    this.initDB();\r\n    this.worker.onmessage = this.handleWorkerMessage.bind(this);\r\n  }\r\n\r\n  private async initDB() {\r\n    this.db = await openDB(\"imageCache\", 1, {\r\n      upgrade(db) {\r\n        db.createObjectStore(\"images\");\r\n      },\r\n    });\r\n  }\r\n\r\n  private async getCachedImage(id: string): Promise<string | null> {\r\n    if (!this.db) return null;\r\n    return this.db.get(\"images\", id);\r\n  }\r\n\r\n  private async cacheImage(id: string, imageData: string) {\r\n    if (!this.db) return;\r\n    await this.db.put(\"images\", imageData, id);\r\n  }\r\n\r\n  private async processNextMessage() {\r\n    if (this.isProcessing || this.messageQueue.length === 0) return;\r\n\r\n    this.isProcessing = true;\r\n    const message = this.messageQueue.shift()! as ImageProcessorMessage;\r\n\r\n    if (message.action === \"processImage\" && \"images\" in message) {\r\n      await this.processImage(message.images[0]);\r\n    } else if (message.action === \"processBatch\" && \"images\" in message) {\r\n      await this.processBatch(message.images);\r\n    }\r\n\r\n    this.isProcessing = false;\r\n    this.processNextMessage();\r\n  }\r\n  private async processImage(image: {\r\n    id: string;\r\n    src: string;\r\n    width: number;\r\n    height: number;\r\n    folder: string; // Add this line\r\n  }) {\r\n    const cachedImage = await this.getCachedImage(image.id);\r\n    if (cachedImage) {\r\n      this.postMessage({\r\n        action: \"imageProcessed\",\r\n        id: image.id,\r\n        processedImage: cachedImage,\r\n        folder: image.folder,\r\n      });\r\n    } else {\r\n      this.worker.postMessage({ action: \"processImage\", ...image });\r\n    }\r\n  }\r\n\r\n  private async processBatch(\r\n    images: {\r\n      id: string;\r\n      src: string;\r\n      width: number;\r\n      height: number;\r\n      folder: string;\r\n    }[]\r\n  ) {\r\n    const uncachedImages = [];\r\n    const cachedResults = [];\r\n\r\n    for (const image of images) {\r\n      if (isCached(image.folder, image.id)) {\r\n        const cachedImage = await this.getCachedImage(image.id);\r\n        if (cachedImage) {\r\n          cachedResults.push({\r\n            action: \"imageProcessed\" as const,\r\n            id: image.id,\r\n            processedImage: cachedImage,\r\n            folder: image.folder,\r\n          });\r\n        } else {\r\n          uncachedImages.push(image);\r\n        }\r\n      } else {\r\n        uncachedImages.push(image);\r\n      }\r\n    }\r\n\r\n    // Send cached results immediately\r\n    cachedResults.forEach((result) => this.postMessage(result));\r\n\r\n    if (uncachedImages.length > 0) {\r\n      this.worker.postMessage({\r\n        action: \"processBatch\",\r\n        images: uncachedImages,\r\n      });\r\n    }\r\n  }\r\n\r\n  private handleWorkerMessage(event: MessageEvent) {\r\n    if (event.data.action === \"imageProcessed\") {\r\n      this.cacheImage(event.data.id, event.data.processedImage);\r\n      this.postMessage(event.data);\r\n      // Update the image cache\r\n      const cachedImages = getCachedImages(event.data.folder) || [];\r\n      const updatedImages = cachedImages.map((img) =>\r\n        img.id === event.data.id\r\n          ? { ...img, processedImage: event.data.processedImage }\r\n          : img\r\n      );\r\n      setCachedImages(event.data.folder, updatedImages);\r\n    } else if (event.data.action === \"batchProcessed\") {\r\n      event.data.results.forEach(\r\n        (result: { id: string; processedImage: string; folder: string }) => {\r\n          this.cacheImage(result.id, result.processedImage);\r\n          this.postMessage({\r\n            action: \"imageProcessed\",\r\n            id: result.id,\r\n            processedImage: result.processedImage,\r\n            folder: result.folder,\r\n          });\r\n          // Update the image cache\r\n          const cachedImages = getCachedImages(result.folder) || [];\r\n          const updatedImages = cachedImages.map((img) =>\r\n            img.id === result.id\r\n              ? { ...img, processedImage: result.processedImage }\r\n              : img\r\n          );\r\n          setCachedImages(result.folder, updatedImages);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public postMessage(message: ImageProcessorMessage) {\r\n    if (message.action === \"processBatch\") {\r\n      this.messageQueue.push(message);\r\n      this.processNextMessage();\r\n    } else if (message.action === \"processImage\") {\r\n      this.messageQueue.push(message);\r\n      this.processNextMessage();\r\n    } else {\r\n      // For \"imageProcessed\" action, directly emit the result\r\n      if (this.onMessage) {\r\n        this.onMessage(message);\r\n      }\r\n    }\r\n  }\r\n\r\n  public onMessage: ((message: ImageProcessorMessage) => void) | null = null;\r\n\r\n  public terminate() {\r\n    this.worker.terminate();\r\n  }\r\n}\r\nexport function createImageProcessor() {\r\n  return new ImageProcessor();\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\ninterface ChunkObserverProps {\r\n  children: React.ReactNode;\r\n  chunkIndex: number;\r\n  setVisibleChunks: React.Dispatch<React.SetStateAction<number[]>>;\r\n}\r\n\r\nconst ChunkObserver: React.FC<ChunkObserverProps> = ({ children, chunkIndex, setVisibleChunks }) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          setVisibleChunks(prev => [...prev, chunkIndex]);\r\n        }\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    if (ref.current) {\r\n      observer.observe(ref.current);\r\n    }\r\n\r\n    return () => observer.disconnect();\r\n  }, [chunkIndex, setVisibleChunks]);\r\n\r\n  return <div ref={ref}>{children}</div>;\r\n};\r\n\r\nexport default ChunkObserver;\r\n","import React, {\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n} from \"react\";\r\nimport { ImageInfo } from \"../../shared/types/types\";\r\nimport ImageSkeleton from \"../../client/components/ImageSkeleton\";\r\nimport Lightbox from \"yet-another-react-lightbox\";\r\nimport \"yet-another-react-lightbox/styles.css\";\r\nimport styles from \"../../client/styles/ImageFeed.module.scss\";\r\nimport ImageRow from \"../../client/components/ImageRow\";\r\nimport Captions from \"yet-another-react-lightbox/plugins/captions\";\r\nimport Counter from \"yet-another-react-lightbox/plugins/counter\";\r\nimport Zoom from \"yet-another-react-lightbox/plugins/zoom\";\r\nimport Thumbnails from \"yet-another-react-lightbox/plugins/thumbnails\";\r\nimport \"yet-another-react-lightbox/plugins/thumbnails.css\";\r\nimport \"yet-another-react-lightbox/plugins/captions.css\";\r\nimport \"yet-another-react-lightbox/plugins/counter.css\";\r\nimport { truncateImageTitle } from \"../../shared/utils/stringUtils\";\r\nimport { motion, useViewportScroll, useTransform } from \"framer-motion\";\r\n// import Lottie from 'react-lottie';\r\nimport { createWorkerPool } from \"../../client/workers/workerPool\";\r\nimport { createImageProcessor } from \"../../client/workers/imageProcessor\";\r\nimport { useIntersectionObserver } from \"../../client/hooks/useIntersectionObserver\";\r\nimport LayoutWorker from \"../../client/workers/layoutWorker?worker\";\r\nimport ChunkObserver from \"../../client/components/ChunkObserver\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n// Define the props interface for ImageFeed component\r\ninterface ImageFeedProps {\r\n  images: ImageInfo[];\r\n  isLoading: boolean;\r\n  isGrouped: boolean;\r\n  zoom: number;\r\n}\r\n\r\n// Define the ImageFeed component\r\nconst ImageFeed: React.FC<ImageFeedProps> = ({\r\n  images,\r\n  isLoading,\r\n  isGrouped,\r\n  zoom,\r\n}) => {\r\n  // State for managing displayed images, pagination, lightbox, and columns\r\n  const [displayedImages, setDisplayedImages] = useState<ImageInfo[]>(\r\n    images.slice(0, 20)\r\n  );\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [lightboxIndex, setLightboxIndex] = useState<number>(-1);\r\n  const [columns, setColumns] = useState(4);\r\n  const [lightboxImages, setLightboxImages] = useState<ImageInfo[]>([]);\r\n  const [rowTransforms, setRowTransforms] = useState<number[]>([]);\r\n  const feedRef = useRef<HTMLDivElement>(null);\r\n  const { scrollY } = useViewportScroll();\r\n  const y1 = useTransform(scrollY, [0, 300], [0, 200]);\r\n  const y2 = useTransform(scrollY, [0, 300], [0, -200]);\r\n  const [processedImages, setProcessedImages] = useState<{\r\n    [key: string]: { low: string; high: string };\r\n  }>({});\r\n  const [visibleChunks, setVisibleChunks] = useState<number[]>([]);\r\n  const chunkSize = 20; // Adjust this value based on your needs\r\n  const [visibleImages, setVisibleImages] = useState<Set<string>>(new Set());\r\n  const layoutWorkerRef = useRef<Worker | null>(null);\r\n  const [containerWidth, setContainerWidth] = useState(0);\r\n\r\n  console.log(\"ImageFeed rendering with images:\", images.length);\r\n\r\n  // Group images by similar titles\r\n  const groupedImages = useMemo(() => {\r\n    if (!isGrouped) {\r\n      return images.map((image) => ({\r\n        key: image.id,\r\n        images: [image],\r\n        isCarousel: false,\r\n      }));\r\n    }\r\n    const groups: { [key: string]: ImageInfo[] } = {};\r\n    images.forEach((image) => {\r\n      const processedTitle = truncateImageTitle(image.alt);\r\n      if (!groups[processedTitle]) {\r\n        groups[processedTitle] = [];\r\n      }\r\n      groups[processedTitle].push(image);\r\n    });\r\n    console.log(\"groupedImages updated:\", groups.length);\r\n    return Object.entries(groups).map(([key, group]) => ({\r\n      key,\r\n      images: group,\r\n      isCarousel: group.length > 1,\r\n    }));\r\n  }, [images, isGrouped]);\r\n\r\n  // Calculate rows with grouped images\r\n  const groupedRows = useMemo(() => {\r\n    const rows: ImageInfo[][] = [];\r\n    let currentRow: ImageInfo[] = [];\r\n    let currentAspectRatio = 0;\r\n\r\n    groupedImages.forEach((group) => {\r\n      const representativeImage = group.images[0];\r\n      const aspectRatio =\r\n        representativeImage.width / representativeImage.height;\r\n\r\n      if (currentAspectRatio + aspectRatio > columns && currentRow.length > 0) {\r\n        rows.push(currentRow);\r\n        currentRow = [];\r\n        currentAspectRatio = 0;\r\n      }\r\n\r\n      currentRow.push(representativeImage);\r\n      currentAspectRatio += aspectRatio;\r\n    });\r\n\r\n    if (currentRow.length > 0) {\r\n      rows.push(currentRow);\r\n    }\r\n\r\n    // Chunk the rows\r\n    const chunkedRows: ImageInfo[][][] = [];\r\n    for (let i = 0; i < rows.length; i += chunkSize) {\r\n      chunkedRows.push(rows.slice(i, i + chunkSize));\r\n    }\r\n\r\n    // If there are no chunks, create one with all available rows\r\n    if (chunkedRows.length === 0 && rows.length > 0) {\r\n      chunkedRows.push(rows);\r\n    }\r\n\r\n    console.log(\"groupedRows updated:\", chunkedRows.length);\r\n    return chunkedRows;\r\n  }, [images, groupedImages, columns, chunkSize]);\r\n\r\n  // Update handleImageClick to work with grouped images and set lightbox plugins\r\n  const handleImageClick = useCallback(\r\n    (clickedImage: ImageInfo) => {\r\n      const groupIndex = groupedImages.findIndex((group) =>\r\n        group.images.some((img) => img.id === clickedImage.id)\r\n      );\r\n      if (groupIndex !== -1) {\r\n        const group = groupedImages[groupIndex];\r\n        setLightboxIndex(groupIndex);\r\n        setLightboxImages(group.images);\r\n      }\r\n    },\r\n    [groupedImages, images]\r\n  );\r\n\r\n  // Callback function to load more images\r\n  const loadMore = useCallback(() => {\r\n    const newImages = images.slice(\r\n      displayedImages.length,\r\n      displayedImages.length + 20\r\n    );\r\n    setDisplayedImages((prevImages) => [...prevImages, ...newImages]);\r\n    if (displayedImages.length + newImages.length >= images.length) {\r\n      setHasMore(false);\r\n    }\r\n  }, [images, displayedImages]);\r\n\r\n  // Callback function to get the correct image URL\r\n  const getImageUrl = useCallback((imagePath: string) => {\r\n    const cleanPath = imagePath\r\n      .replace(/^(\\/|api\\/image\\/)+/, \"\")\r\n      .replace(/\\\\/g, \"/\");\r\n    return `/api/images/${cleanPath}`;\r\n  }, []);\r\n\r\n  // Function to calculate the number of columns based on container width\r\n  const calculateColumns = (containerWidth: number) => {\r\n    if (containerWidth >= 2560) return 7;\r\n    if (containerWidth >= 1920) return 6;\r\n    if (containerWidth >= 1440) return 5;\r\n    if (containerWidth >= 1200) return 4;\r\n    if (containerWidth >= 992) return 3;\r\n    if (containerWidth >= 576) return 2;\r\n    return 1;\r\n  };\r\n\r\n  // Effect hook to handle window resize and update columns\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const width = window.innerWidth;\r\n      const newColumns = calculateColumns(width);\r\n      setColumns(newColumns);\r\n    };\r\n\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  // Effect hook to handle scroll events and update row transforms\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const feed = feedRef.current;\r\n      if (!feed) return;\r\n\r\n      const scrollTop = feed.scrollTop;\r\n      const feedHeight = feed.clientHeight;\r\n      const scrollHeight = feed.scrollHeight;\r\n\r\n      const newRowTransforms = groupedRows.map((_, index) => {\r\n        const row = feed.querySelector(\r\n          `.image-row:nth-child(${index + 1})`\r\n        ) as HTMLElement;\r\n        if (!row) return 0;\r\n\r\n        const rowTop = row.offsetTop;\r\n        const rowHeight = row.clientHeight;\r\n\r\n        const scrollPercentage =\r\n          (scrollTop - rowTop) / (scrollHeight - feedHeight);\r\n        const transform = scrollPercentage * (feedHeight - rowHeight);\r\n\r\n        return transform;\r\n      });\r\n\r\n      setRowTransforms(newRowTransforms);\r\n    };\r\n\r\n    const feed = feedRef.current;\r\n    if (feed) {\r\n      feed.addEventListener(\"scroll\", handleScroll);\r\n    }\r\n\r\n    return () => {\r\n      if (feed) {\r\n        feed.removeEventListener(\"scroll\", handleScroll);\r\n      }\r\n    };\r\n  }, [groupedRows]);\r\n\r\n  // Effect hook to handle scroll events and update row transforms with 3D effects\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const scrollY = window.scrollY;\r\n      const rows = feedRef.current?.querySelectorAll(\".image-row\");\r\n\r\n      rows?.forEach((row, index) => {\r\n        const speed = 1 + (index % 3) * 0.1; // Vary speed for each row\r\n        const yOffset = scrollY * speed;\r\n        const rotation = Math.sin(scrollY * 0.002 + index) * 5; // Subtle rotation\r\n\r\n        row.animate(\r\n          [\r\n            {\r\n              transform: `translateY(${yOffset}px) rotateX(${rotation}deg) translateZ(${\r\n                -index * 10\r\n              }px)`,\r\n            },\r\n          ],\r\n          {\r\n            duration: 1000,\r\n            fill: \"forwards\",\r\n            easing: \"ease-out\",\r\n          }\r\n        );\r\n      });\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  // Effect hook to handle scroll events and update row transforms with parallax effect\r\n  useEffect(() => {\r\n    const observerOptions = {\r\n      root: null,\r\n      rootMargin: \"0px\",\r\n      threshold: 0.1,\r\n    };\r\n\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          entry.target.classList.add(styles.visible);\r\n        } else {\r\n          entry.target.classList.remove(styles.visible);\r\n        }\r\n      });\r\n    }, observerOptions);\r\n\r\n    document.querySelectorAll(`.${styles.imageWrapper}`).forEach((img) => {\r\n      observer.observe(img);\r\n    });\r\n\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Starting image processing\");\r\n    groupedImages.forEach((group) => {\r\n      group.images.forEach((image) => {\r\n        workerPool\r\n          .processImage(image, visibleImages.has(image.id))\r\n          .then((processedImage: string) => {\r\n            console.log(\"Image processed:\", image.id);\r\n            setProcessedImages((prev) => ({\r\n              ...prev,\r\n              [image.id]: { ...prev[image.id], low: processedImage },\r\n            }));\r\n          });\r\n      });\r\n    });\r\n  }, [groupedImages]);\r\n\r\n  const imageProcessor = useMemo(() => createImageProcessor(), []);\r\n\r\n  useEffect(() => {\r\n    if (!layoutWorkerRef.current) {\r\n      layoutWorkerRef.current = new LayoutWorker();\r\n    }\r\n\r\n    return () => {\r\n      if (layoutWorkerRef.current) {\r\n        layoutWorkerRef.current.terminate();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const intersectionRef = useRef<HTMLDivElement>(null);\r\n  const [isIntersecting, setIsIntersecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        setIsIntersecting(entry.isIntersecting);\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    if (intersectionRef.current) {\r\n      observer.observe(intersectionRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (intersectionRef.current) {\r\n        observer.unobserve(intersectionRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleIntersection = useCallback(() => {\r\n    if (isIntersecting && intersectionRef.current) {\r\n      const imageId = intersectionRef.current.getAttribute(\"data-image-id\");\r\n      if (imageId) {\r\n        setVisibleImages((prev) => new Set(prev).add(imageId));\r\n      }\r\n    }\r\n  }, [isIntersecting, intersectionRef]);\r\n\r\n  useEffect(() => {\r\n    handleIntersection();\r\n  }, [handleIntersection]);\r\n\r\n  useEffect(() => {\r\n    if (layoutWorkerRef.current && visibleImages.size > 0 && feedRef.current) {\r\n      const visibleImagesList = images.filter((img) =>\r\n        visibleImages.has(img.id)\r\n      );\r\n      layoutWorkerRef.current.postMessage({\r\n        action: \"calculateLayout\",\r\n        images: visibleImagesList,\r\n        containerWidth: feedRef.current.clientWidth,\r\n        containerHeight: feedRef.current.clientHeight,\r\n        targetRowHeight: 200, // Adjust this value as needed\r\n      });\r\n\r\n      layoutWorkerRef.current.onmessage = (event) => {\r\n        if (event.data.action === \"layoutCalculated\") {\r\n          setRowTransforms(event.data.layout);\r\n        }\r\n      };\r\n    }\r\n  }, [visibleImages, images]);\r\n\r\n  useEffect(() => {\r\n    if (feedRef.current) {\r\n      setContainerWidth(feedRef.current.clientWidth);\r\n    }\r\n  }, []);\r\n\r\n  const workerPool = useMemo(() => createWorkerPool(navigator.hardwareConcurrency || 4), []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      workerPool.terminate();\r\n    };\r\n  }, [workerPool]);\r\n\r\n  return (\r\n    <div\r\n      className=\"image-feed overflow-x-hidden\"\r\n      ref={feedRef}\r\n      style={{ perspective: \"1000px\" }}\r\n    >\r\n      <motion.div className={styles.parallaxLayer} style={{ y: y1 }}>\r\n        {/* Add some background elements for parallax effect */}\r\n      </motion.div>\r\n      {groupedRows.map((chunk, chunkIndex) => (\r\n        <ChunkObserver\r\n          key={chunkIndex}\r\n          chunkIndex={chunkIndex}\r\n          setVisibleChunks={setVisibleChunks}\r\n        >\r\n          {chunk.map((row, rowIndex) => (\r\n            <ImageRow\r\n              key={`${chunkIndex}-${rowIndex}`}\r\n              images={row}\r\n              onImageClick={handleImageClick}\r\n              columns={columns}\r\n              zoom={zoom}\r\n              isLastRow={rowIndex === groupedRows.length - 1}\r\n              groupedImages={groupedImages}\r\n              rowHeight={200} // Adjust this value as needed\r\n              processedImages={processedImages}\r\n              workerPool={workerPool}\r\n              imageProcessor={imageProcessor}\r\n              isVisible={visibleChunks.includes(\r\n                Math.floor(rowIndex / chunkSize)\r\n              )}\r\n              isIntersecting={isIntersecting}\r\n              intersectionRef={intersectionRef}\r\n              layout={[\r\n                {\r\n                  id: uuidv4(),\r\n                  x: 0,\r\n                  y: rowTransforms[chunkIndex * chunkSize + rowIndex] || 0,\r\n                  width: containerWidth,\r\n                  height: 200, // Use your rowHeight here\r\n                },\r\n              ]}\r\n              containerWidth={containerWidth}\r\n            />\r\n          ))}\r\n        </ChunkObserver>\r\n      ))}\r\n      {isLoading && (\r\n        <ImageSkeleton containerWidth={800} containerHeight={600} />\r\n      )}\r\n      <Lightbox\r\n        slides={lightboxImages.map((image) => ({\r\n          src: image.src,\r\n          alt: image.alt,\r\n          title: truncateImageTitle(image.alt),\r\n          description: `Image ${image.id}`,\r\n        }))}\r\n        open={lightboxIndex >= 0}\r\n        index={lightboxIndex}\r\n        close={() => setLightboxIndex(-1)}\r\n        plugins={[\r\n          Captions,\r\n          Counter,\r\n          Zoom,\r\n          ...(lightboxImages.length > 1 ? [Thumbnails] : []),\r\n        ]}\r\n        thumbnails={{\r\n          position: \"bottom\",\r\n          width: 120,\r\n          height: 80,\r\n          border: 1,\r\n          borderRadius: 4,\r\n          padding: 4,\r\n          gap: 16,\r\n        }}\r\n        animation={{\r\n          fade: 300,\r\n          swipe: 300,\r\n        }}\r\n        carousel={{\r\n          finite: true,\r\n          preload: 2,\r\n        }}\r\n      />\r\n      <motion.div className={styles.parallaxLayer} style={{ y: y2 }}>\r\n        {/* Add some foreground elements for parallax effect */}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageFeed;\r\n","import React from \"react\";\r\nimport ImageFeed from \"../../client/components/ImageFeed\";\r\nimport { ImageInfo } from \"../../shared/types/types\";\r\nimport styles from \"../../client/styles/ImageViewer.module.scss\";\r\n\r\n// Define the props interface for the ImageViewer component\r\ninterface ImageViewerProps {\r\n  images: ImageInfo[];\r\n  isLoading: boolean;\r\n  error: Error | string | null;\r\n  selectedFolder: string;\r\n  isGrouped: boolean;\r\n  zoom: number;\r\n}\r\n\r\n// Define the ImageViewer component\r\nconst ImageViewer: React.FC<ImageViewerProps> = ({\r\n  images,\r\n  isLoading,\r\n  error,\r\n  selectedFolder,\r\n  isGrouped,\r\n  zoom,\r\n}) => {\r\n\r\n  return (\r\n    // Main container with flex layout\r\n    <div className={`${styles.imageViewer} flex flex-col h-full`}>\r\n      {/* Content container with scrolling */}\r\n      <div className={`${styles.contentContainer} flex-1`}>\r\n        {/* Conditional rendering based on error, loading, and image availability */}\r\n        {error ? (\r\n          // Display error message if there's an error\r\n          <div className=\"text-center text-accent-red\">\r\n            <p>Error: {error instanceof Error ? error.message : String(error)}</p>\r\n            <p>\r\n              Please try again later or contact support if the problem persists.\r\n            </p>\r\n          </div>\r\n        ) : isLoading ? (\r\n          // Display loading message while images are being fetched\r\n          <div className=\"text-center text-gray-300\">Loading images...</div>\r\n        ) : images.length === 0 ? (\r\n          // Display message when no images are found in the folder\r\n          <div className=\"text-center text-gray-300\">\r\n            No images found in this folder.\r\n          </div>\r\n        ) : (\r\n          // Render ImageFeed component when images are available\r\n          <ImageFeed\r\n            images={images}\r\n            isLoading={isLoading}\r\n            isGrouped={isGrouped}\r\n            zoom={zoom}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export the ImageViewer component\r\nexport default ImageViewer;\r\n","import React, { useMemo } from \"react\";\r\nimport ImageViewer from \"../../client/components/ImageViewer\";\r\nimport { ImageInfo } from \"../../shared/types/types\";\r\nimport { useImagesQuery } from \"../../client/hooks/useApiQueries\";\r\n\r\n// Define the props interface for the MainContent component\r\ninterface MainContentProps {\r\n  images: ImageInfo[];\r\n  selectedFolder: string;\r\n  searchQuery: string;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  zoom: number;\r\n  isGrouped: boolean;\r\n}\r\n\r\n// MainContent component that renders the primary content area of the application\r\nconst MainContent: React.FC<MainContentProps> = ({\r\n  selectedFolder,\r\n  searchQuery,\r\n  zoom,\r\n  isGrouped,\r\n}) => {\r\n  const { data: images, isLoading, error } = useImagesQuery(selectedFolder);\r\n\r\n  console.log(\"MainContent rendering\", { images, selectedFolder, searchQuery, isLoading, error, zoom, isGrouped });\r\n  \r\n  if (isLoading) {\r\n    return <div>Loading images...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error loading images: {error.message}</div>;\r\n  }\r\n\r\n  // Memoized filtered images based on the search query\r\n  const filteredImages = useMemo(() => {\r\n    if (!images) return [];\r\n    if (!searchQuery) return images;\r\n    return images.filter(image => \r\n      image.alt.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n  }, [images, searchQuery]);\r\n\r\n  // Render the main content\r\n  return (\r\n    <>\r\n      {/* Render the ImageViewer component */}\r\n      <ImageViewer\r\n        images={filteredImages}\r\n        isLoading={isLoading}\r\n        error={error}\r\n        selectedFolder={selectedFolder}\r\n        zoom={zoom}\r\n        isGrouped={isGrouped}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n// Export the MainContent component\r\nexport default MainContent;","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../client/components/Layout\";\r\nimport MainContent from \"../../client/components/MainContent\";\r\nimport { getImages } from \"../../shared/lib/api\";\r\nimport { ImageInfo, FolderInfo } from \"../../shared/types/types\";\r\nimport { useFoldersQuery } from \"../../client/hooks/useApiQueries\";\r\n\r\ninterface HomeProps {\r\n  webGLSupported: boolean;\r\n}\r\n\r\n/**\r\n * Home component - the main page of the application.\r\n * It manages the overall state and layout of the app.\r\n *\r\n * @component\r\n * @returns {JSX.Element} The main application page.\r\n */\r\nconst Home: React.FC<HomeProps> = ({ webGLSupported }) => {\r\n  const [selectedFolder, setSelectedFolder] = useState<string>(\"\");\r\n  const [images, setImages] = useState<ImageInfo[]>([]);\r\n  const [zoom, setZoom] = useState<number>(1);\r\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\r\n  const [currentDirectory, setCurrentDirectory] = useState<string>(\"\");\r\n  const [isGrouped, setIsGrouped] = useState<boolean>(true);\r\n  const { data: folders, isLoading, error } = useFoldersQuery();\r\n\r\n  /**\r\n   * Effect hook to fetch images when the selected folder changes.\r\n   * Updates loading state and handles errors.\r\n   */\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      if (!selectedFolder) {\r\n        setImages([]);\r\n        return;\r\n      }\r\n\r\n      const imageList = await getImages(selectedFolder);\r\n      setImages(imageList);\r\n    };\r\n\r\n    fetchImages();\r\n  }, [selectedFolder]);\r\n\r\n  /**\r\n   * Handler for folder selection change.\r\n   * Updates the selected folder state.\r\n   * @param {string} folder - The newly selected folder.\r\n   */\r\n  const handleFolderChange = (folder: string) => {\r\n    setSelectedFolder(folder);\r\n  };\r\n\r\n  /**\r\n   * Handler for zoom level change.\r\n   * Updates the zoom state.\r\n   * @param {number} newZoom - The new zoom level.\r\n   */\r\n  const handleZoomChange = (newZoom: number) => {\r\n    setZoom(newZoom);\r\n  };\r\n\r\n  /**\r\n   * Handler for search query change.\r\n   * Updates the search query state.\r\n   * @param {string} query - The new search query.\r\n   */\r\n  const handleSearch = (query: string) => {\r\n    setSearchQuery(query);\r\n    // TODO: Implement search functionality\r\n  };\r\n\r\n  /**\r\n   * Handler for file upload completion.\r\n   * Refreshes the images in the current folder.\r\n   */\r\n  const handleUploadComplete = () => {\r\n    // Refresh the images in the current folder\r\n    getImages(selectedFolder).then(setImages);\r\n  };\r\n\r\n  /**\r\n   * Handler for grouping toggle.\r\n   * Toggles the grouping state.\r\n   */\r\n  const handleGroupToggle = () => {\r\n    setIsGrouped(prevState => !prevState);\r\n  };\r\n\r\n  // Render the main layout with all necessary props\r\n  return (\r\n    <Layout\r\n      folders={folders ?? []}\r\n      selectedFolder={selectedFolder}\r\n      onFolderChange={handleFolderChange}\r\n      currentDirectory={currentDirectory}\r\n      onSearch={handleSearch}\r\n      zoom={zoom}\r\n      onZoomChange={handleZoomChange}\r\n      isGrouped={isGrouped}\r\n      onGroupToggle={handleGroupToggle}\r\n    >\r\n      <MainContent\r\n        images={images}\r\n        selectedFolder={selectedFolder}\r\n        searchQuery={searchQuery}\r\n        isLoading={isLoading}\r\n        error={error?.message ?? null}\r\n        zoom={zoom}\r\n        isGrouped={isGrouped}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Home from \"../client/pages/Home\";\r\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\n\r\ninterface AppProps {\r\n  webGLSupported?: boolean;\r\n}\r\n\r\nconst queryClient = new QueryClient()\r\n\r\nfunction App({ webGLSupported = false }: AppProps) {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <div className=\"App\">\r\n        <Home webGLSupported={webGLSupported} />\r\n      </div>\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport App from './client/App';\r\n\r\n/**\r\n * Renders the React application to an HTML string.\r\n *\r\n * @param url - The URL requested by the client.\r\n * @returns An object containing the rendered HTML.\r\n */\r\nexport async function render(url: string) {\r\n  // You can add data fetching logic here if needed\r\n  const appHtml = ReactDOMServer.renderToString(<App />);\r\n  return { html: appHtml };\r\n}\r\n"],"names":["env","getEnv","key","defaultValue","CACHE_TTL","parseInt","API_PORT","API_ROUTES","api","axios","create","baseURL","getFolders","async","console","log","defaults","response","get","headers","includes","data","error","Error","isAxiosError","message","_a","_b","config","url","_c","method","getImages","folder","warn","encodeURIComponent","map","img","width","isNaN","height","useFoldersQuery","useQuery","queryKey","queryFn","api.getFolders","staleTime","retry","Sidebar","selectedFolder","setSelectedFolder","folders","isLoading","jsxDEV","children","fileName","lineNumber","columnNumber","this","motion","div","initial","x","animate","transition","type","stiffness","className","styles","onClick","name","CurrentDirectoryButton","currentDirectory","button","whileHover","scale","whileTap","IconFolder","size","clipPath","duration","SearchBar","onSearch","query","setQuery","useState","debouncedQuery","useDebounce","suggestions","setSuggestions","useAnimation","useEffect","form","onSubmit","e","preventDefault","damping","background","input","value","onChange","target","placeholder","whileFocus","length","ul","opacity","y","suggestion","index","li","backgroundColor","ZoomSlider","zoom","onZoomChange","sliderSpring","useSpring","tension","friction","svg","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","animated","style","min","max","step","parseFloat","Navbar","isGrouped","onGroupToggle","svgRef","useRef","controls","lightRef","current","path","querySelector","gsap","to","attr","repeat","yoyo","ease","nav","navbar","ref","cornerLight","navbarBackground","leftSection","rightSection","viewToggleButton","logger","window","info","debug","winston","createLogger","level","format","combine","timestamp","json","transports","Console","File","filename","logger$1","ParticleBackground","canvasRef","NUM_STARS","gl","getContext","vertexShader","createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","positionAttribute","getAttribLocation","colorAttribute","timeUniform","getUniformLocation","starBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","starData","Float32Array","i","baseIndex","Math","random","bufferData","STATIC_DRAW","handleMouseMove","throttle","event","rect","getBoundingClientRect","clientX","left","clientY","top","bufferSubData","addEventListener","startTime","performance","now","time","viewport","canvas","clearColor","clear","COLOR_BUFFER_BIT","useProgram","uniform1f","enableVertexAttribArray","vertexAttribPointer","FLOAT","drawArrays","POINTS","requestAnimationFrame","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","LottieBackground","gradientRef","updateGradient","innerWidth","innerHeight","removeEventListener","Layout","onFolderChange","ImageSkeleton","containerWidth","containerHeight","maxWidth","maxHeight","aspectRatio","ImageItem$1","memo","image","groupCount","workerPool","imageProcessor","isIntersecting","options","setIsIntersecting","targetRef","observer","IntersectionObserver","entry","observe","unobserve","useIntersectionObserver","threshold","triggerOnce","processedImage","setProcessedImage","setProcessedImageCallback","useCallback","id","processImage","then","exit","AnimatePresence","variants","hidden","visible","src","alt","objectFit","delay","prevProps","nextProps","ImageRow","forwardRef","props","images","onImageClick","columns","isLastRow","groupedImages","rowHeight","processedImages","isVisible","intersectionRef","layout","rowRef","useImperativeHandle","getNode","rowWidth","setRowWidth","windowWidth","windowSize","setWindowSize","timeoutId","lastWidth","lastHeight","handleResize","setTimeout","newWidth","newHeight","useWindowSize","offsetWidth","totalAspectRatio","reduce","sum","idealRowWidth","imageWidths","imageVariants","safeHeight","staggerChildren","transform","group","find","g","some","ImageItem","truncateImageTitle","title","trimmedTitle","replace","word","charAt","toUpperCase","substr","toLowerCase","trim","substring","BrowserWorkerPool","constructor","__publicField","workers","Array","from","ImageProcessorWorker","queue","busyWorkers","Set","forEach","worker","onmessage","handleWorkerMessage","bind","action","task","shift","resolve","delete","processQueue","sort","a","b","w","has","postMessage","add","Promise","push","terminate","NodeWorkerPool","cache","getCachedImages","item","Date","expiry","setCachedImages","cacheKeys","Object","keys","oldestKey","isCached","imageId","cachedImages","ImageProcessor","Worker","URL","initDB","db","openDB","upgrade","createObjectStore","getCachedImage","cacheImage","imageData","put","processNextMessage","isProcessing","messageQueue","processBatch","cachedImage","uncachedImages","cachedResults","result","updatedImages","results","onMessage","ChunkObserver","chunkIndex","setVisibleChunks","prev","disconnect","ImageFeed","displayedImages","setDisplayedImages","slice","hasMore","setHasMore","lightboxIndex","setLightboxIndex","setColumns","lightboxImages","setLightboxImages","rowTransforms","setRowTransforms","feedRef","scrollY","useViewportScroll","y1","useTransform","y2","setProcessedImages","visibleChunks","visibleImages","setVisibleImages","layoutWorkerRef","setContainerWidth","useMemo","isCarousel","groups","processedTitle","entries","groupedRows","rows","currentRow","currentAspectRatio","representativeImage","chunkedRows","handleImageClick","clickedImage","groupIndex","findIndex","newImages","prevImages","imagePath","newColumns","handleScroll","feed","scrollTop","feedHeight","clientHeight","scrollHeight","newRowTransforms","_","row","rowTop","offsetTop","querySelectorAll","yOffset","rotation","sin","easing","classList","remove","root","rootMargin","document","low","LayoutWorker","handleIntersection","getAttribute","visibleImagesList","filter","clientWidth","targetRowHeight","createWorkerPool","navigator","hardwareConcurrency","perspective","chunk","rowIndex","floor","uuidv4","Lightbox","slides","description","open","close","plugins","Captions","Counter","Zoom","Thumbnails","thumbnails","position","border","borderRadius","padding","gap","animation","fade","swipe","carousel","finite","preload","ImageViewer","String","MainContent","searchQuery","api.getImages","enabled","filteredImages","Fragment","Home","webGLSupported","setImages","setZoom","setSearchQuery","setCurrentDirectory","setIsGrouped","imageList","newZoom","prevState","queryClient","QueryClient","App","QueryClientProvider","client","render","html","ReactDOMServer","renderToString"],"mappings":"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"}