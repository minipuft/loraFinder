let e=null;self.onmessage=async t=>{if("processImage"===t.data.action){const{id:a,src:n,width:r,height:o}=t.data;let i;if(e||await async function(){const t=new OffscreenCanvas(1,1);return e=t.getContext("webgl"),!!e||(console.error("WebGL not supported on this browser."),!1)}()){const t=await fetch(n).then((e=>e.blob())).then((e=>createImageBitmap(e)));i=await async function(t,a,n){if(!e)return new ImageData(a,n);const r=new OffscreenCanvas(a,n);e=r.getContext("webgl");const o=e.createTexture();e.bindTexture(e.TEXTURE_2D,o),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR);const i=e.createShader(e.VERTEX_SHADER);e.shaderSource(i,"\n    attribute vec2 a_position;\n    varying vec2 v_texCoord;\n    void main() {\n      gl_Position = vec4(a_position, 0, 1);\n      v_texCoord = a_position * 0.5 + 0.5;\n    }\n  "),e.compileShader(i);const s=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(s,"\n    precision mediump float;\n    uniform sampler2D u_image;\n    varying vec2 v_texCoord;\n    void main() {\n      gl_FragColor = texture2D(u_image, v_texCoord);\n    }\n  "),e.compileShader(s);const c=e.createProgram();e.attachShader(c,i),e.attachShader(c,s),e.linkProgram(c),e.useProgram(c);const d=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,d),e.bufferData(e.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,1,1]),e.STATIC_DRAW);const g=e.getAttribLocation(c,"a_position");e.enableVertexAttribArray(g),e.vertexAttribPointer(g,2,e.FLOAT,!1,0,0),e.drawArrays(e.TRIANGLE_STRIP,0,4);const E=new Uint8ClampedArray(a*n*4);return e.readPixels(0,0,a,n,e.RGBA,e.UNSIGNED_BYTE,E),new ImageData(E,a,n)}(t,r,o)}else{console.warn("WebGL not supported, falling back to CPU processing");const e=await fetch(n).then((e=>e.blob())).then((e=>createImageBitmap(e)));i=await async function(e,t,a){const n=new OffscreenCanvas(t,a).getContext("2d");if(!n)throw new Error("Could not get 2D context");n.drawImage(e,0,0,t,a);const r=n.getImageData(0,0,t,a);for(let o=0;o<r.data.length;o+=4){const e=(r.data[o]+r.data[o+1]+r.data[o+2])/3;r.data[o]=r.data[o+1]=r.data[o+2]=e}return r}(e,r,o)}const s=new OffscreenCanvas(r,o),c=s.getContext("2d");null==c||c.putImageData(i,0,0);const d=await s.convertToBlob({type:"image/jpeg",quality:.9}),g=URL.createObjectURL(d);self.postMessage({action:"imageProcessed",id:a,processedImage:g})}};
//# sourceMappingURL=imageProcessorWorker.DzbAkOQ5.js.map
