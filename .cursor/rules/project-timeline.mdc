---
description:
globs:
alwaysApply: false
---
# Project Timeline

_(Note: This is a placeholder document. Actual timelines and milestones need to be defined based on project planning.)_

## Phase 1: Initial Setup & Core Features

- **Milestone 1.1:** Project initialization, Vite/Express/React setup, basic SSR configuration.
- **Milestone 1.2:** Implement core folder/image browsing functionality.
- **Milestone 1.3:** Develop API endpoints for folders and images.
- **Milestone 1.4:** Implement responsive masonry grid layout.
- **Milestone 1.5:** Basic search functionality.

## Phase 2: Enhancements & Optimization

- **Milestone 2.1:** Implement advanced image viewing (lightbox).
- **Milestone 2.2:** Add caching mechanisms (client and server - including feed state cache).
- **Milestone 2.3:** Implement Suspense-based loading skeletons:
  - **Sub-task:** Modify `useFolderImages` hook to use `useSuspenseQuery`.
  - **Sub-task:** Create `ImageFeedSkeleton` component for folder-level loading fallback.
  - **Sub-task:** Implement folder-level `Suspense` boundary in `ImageViewer`.
  - **Sub-task:** Create `imageResource` utility for per-image loading.
  - **Sub-task:** Create `SuspenseImage` component.
  - **Sub-task:** Implement per-image `Suspense` boundary in `ImageItem`.
- **Milestone 2.4:** Performance optimizations (verify code splitting, lazy loading, implement scroll prefetch optimization using `usePrefetchManager` hook).
  - **Sub-task:** Introduce `usePrefetchManager` (in `src/hooks/usePrefetchManager.ts`) with a fixed-size max-heap (`src/utils/MaxHeap.ts`) and distance-based priority calculation (`src/utils/priorityCalculator.ts`) to efficiently prefetch offscreen images based on viewport proximity.
- **Milestone 2.5:** Refine search functionality.
- **Milestone 2.6:** Implement file uploads.

## Phase 3: Quality Assurance & Deployment

- **Milestone 3.1:** Comprehensive testing (unit, integration, E2E) - including Suspense behavior.
- **Milestone 3.2:** Documentation updates (README, PRD - `implementation.mdc` updated).
- **Milestone 3.3:** Final performance tuning.
- **Milestone 3.4:** Deployment preparation and execution.

## Future Considerations

- Real-time updates (e.g., using WebSockets if file system changes).
- Advanced metadata extraction/editing.
- User accounts and permissions.
- More sophisticated caching strategies.
- Integration with external services.
