# Project Structure

This document outlines the file and directory structure for the MediaFlow project.

```
mediaflow/
├── dist/                     # Production build output
│   ├── client/               # Client-side assets
│   └── server/               # Server-side bundle
├── node_modules/             # Project dependencies
├── public/                   # Static assets (served directly by Express)
├── scripts/                  # Utility scripts (e.g., check-engines.js)
├── src/                      # Source code
│   ├── client/               # Client-specific code (React components, pages, etc.)
│   │   ├── api/              # Client-side API interaction logic (using React Query)
│   │   ├── assets/           # Static assets processed by Vite (e.g., images, fonts)
│   │   ├── components/       # Reusable React UI components
│   │   ├── contexts/         # React Context providers
│   │   ├── hooks/            # Custom React hooks
│   │   ├── lib/              # Client-specific libraries (e.g., feedStateCache.ts)
│   │   ├── pages/            # Page-level components/views
│   │   ├── main.tsx          # Client-side entry point (hydration)
│   │   └── App.tsx           # Main React application component
│   ├── server/               # Server-specific code (Express routes, SSR logic)
│   │   ├── api/              # Express API route handlers
│   │   ├── lib/              # Server-specific libraries/modules
│   │   │   └── cache/        # Server-side caching utilities
│   │   │       ├── providers/ # Concrete cache implementations
│   │   │       │   └── lruCache.ts # LRU cache provider
│   │   │       ├── index.ts    # Cache factory function
│   │   │       └── types.ts    # Shared cache provider types
│   │   ├── utils/            # Server-specific utility functions (e.g., imageUtils.js)
│   │   └── entry-server.tsx  # Server-side rendering entry point
│   ├── shared/               # Code shared between client and server
│   │   ├── types/            # Shared TypeScript type definitions (e.g., ImageInfo)
│   │   └── utils/            # Shared utility functions
│   └── .env.d.ts             # Type definitions for environment variables
├── .cursor/                  # Cursor IDE specific files
│   └── rules/                # PRD documents (like this one)
├── .env                      # Environment variables (local, not committed)
├── .eslintrc.js              # ESLint configuration (adjust filename if needed)
├── .gitignore                # Files/directories ignored by Git
├── .prettierrc.json          # Prettier configuration (adjust filename if needed)
├── commitlint.config.js      # Commitlint configuration
├── husky.config.js           # Husky configuration (or in .husky/)
├── index.html                # HTML template entry point (used by Vite)
├── LICENSE                   # Project license file (if applicable)
├── package.json              # Project metadata and dependencies
├── package-lock.json         # Exact dependency versions
├── postcss.config.js         # PostCSS configuration (for Tailwind/Autoprefixer)
├── README.md                 # Project overview and setup instructions
├── server.ts                 # Express server entry point and setup
├── tailwind.config.js        # Tailwind CSS configuration
├── tsconfig.json             # TypeScript compiler configuration
├── vite.config.client.ts     # Vite configuration for client build
└── vite.config.server.ts     # Vite configuration for server/SSR build
```

## Key Directories & Files

- **`src/`**: Contains separate `client/`, `server/`, and `shared/` directories.
- **`src/client/`**: Houses the frontend React application code.
- **`src/server/`**: Contains backend Express code, including API routes (`src/server/api/`) and server libraries (`src/server/lib/`).
- **`src/shared/`**: Code used by both client and server (types, utilities).
- **`src/main.tsx`**: Initializes the React app on the client-side, handling hydration.
- **`src/entry-server.tsx`**: Exports the rendering function used by `server.ts` for SSR.
- **`index.html`**: The root HTML file template used by Vite during development and builds.
- **`.cursor/rules/`**: Contains Product Requirements Document (PRD) markdown files.

- **`src/main.tsx`**: Initializes the React app on the client-side, handling hydration.
- **`src/entry-server.tsx`**: Exports the rendering function used by `server.ts` for SSR.
- **`index.html`**: The root HTML file template used by Vite during development and builds.
- **`.cursor/rules/`**: Contains Product Requirements Document (PRD) markdown files.
