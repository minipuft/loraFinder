.imageContainer {
  position: relative;
  overflow: hidden;
  cursor: pointer;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  background-color: var(--placeholder-bg, #2a2a2a);
  transition:
    transform 0.3s ease-out,
    box-shadow 0.3s ease-out;
  will-change: transform;

  &:hover {
    transform: scale(1.05);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
    z-index: 10;
  }
}

.imageWrapper {
  position: relative;
  overflow: hidden;
  border-radius: 8px;
  flex-grow: 0;
  flex-shrink: 1;
  will-change: transform, opacity;

  &:hover {
    z-index: 2;
  }
}

.image {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  border-radius: inherit;
  transition: opacity 0.4s ease-in-out;
  opacity: 1;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
}

.imageTitle {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background: linear-gradient(to top, rgba(0, 0, 0, 0.7) 0%, rgba(0, 0, 0, 0) 100%);
  color: white;
  padding: 1rem 0.75rem 0.5rem;
  font-size: 0.8rem;
  font-weight: 500;
  text-align: left;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  border-bottom-left-radius: inherit;
  border-bottom-right-radius: inherit;
  opacity: 0;
}

.groupCounter {
  position: absolute;
  top: 8px;
  right: 8px;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.75rem;
  font-weight: bold;
  z-index: 5;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.carouselIndicator {
  position: absolute;
  top: 8px;
  left: 8px;
  background-color: rgba(30, 100, 200, 0.8);
  color: white;
  padding: 2px 6px;
  border-radius: 4px;
  font-size: 0.7rem;
  font-weight: 500;
  z-index: 5;
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%) translateZ(0);
  }
  100% {
    transform: translateX(100%) translateZ(0);
  }
}

.loading {
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(
      90deg,
      transparent 0%,
      rgba(255, 255, 255, 0.1) 50%,
      transparent 100%
    );
    transform: translateX(-100%) translateZ(0);
    will-change: transform;
    animation: shimmer 1s infinite linear;
  }
}

@media (prefers-reduced-motion: reduce) {
  .imageItem,
  .imageWrapper,
  .image,
  .imageTitle,
  .groupCounter,
  .carouselIndicator {
    transition: none;
    animation: none;
    transform: none;
  }

  .loading::before {
    animation: none;
  }
}

.imageSkeleton {
  border-radius: 8px;
  background: linear-gradient(
    -45deg,
    var(--skeleton-bg1, #2c2c2e),
    var(--skeleton-bg2, #3a3a3c),
    var(--skeleton-bg1, #2c2c2e),
    var(--skeleton-bg2, #3a3a3c)
  );
  background-size: 400% 400%;
  animation: gradientBG 10s ease infinite;
  width: 100%;
  height: 0;
  padding-bottom: 75%;
  position: relative;
}

@keyframes gradientBG {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.skeletonGridContainer {
  display: grid;
  grid-template-columns: repeat(var(--skeleton-cols, 4), 1fr);
  gap: var(--gap-medium, 1rem);
  width: 100%;
}

.placeholder {
  position: absolute;
  inset: 0;
  background-color: var(--placeholder-color, #333);
  z-index: 1;
  border-radius: inherit;
}

.imageElement {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
  position: absolute;
  inset: 0;
  z-index: 2;
  border-radius: inherit;
  will-change: opacity, transform;
}

.parallaxLayer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  will-change: transform;
}

.overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  padding: 8px 12px;
  background: linear-gradient(to top, rgba(0, 0, 0, 0.7) 0%, rgba(0, 0, 0, 0) 100%);
  color: white;
  font-size: 0.875rem;
  z-index: 3;
  pointer-events: none;
}

.title {
  margin: 0;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.groupIndicator {
  position: absolute;
  top: 8px;
  right: 8px;
  background-color: rgba(0, 0, 0, 0.6);
  color: white;
  padding: 2px 6px;
  border-radius: 4px;
  font-size: 0.75rem;
  font-weight: bold;
  z-index: 4;
}

.errorIndicator {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(255, 0, 0, 0.1);
  color: rgba(255, 0, 0, 0.8);
  font-weight: bold;
  z-index: 3;
}

.dragging {
  opacity: 0.4;
  transform: scale(0.95);
  cursor: grabbing;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  z-index: 100;
  transition:
    transform 0.15s ease-out,
    opacity 0.15s ease-out;
}

.isDropTarget {
  outline: 2px solid rgba(59, 130, 246, 0.5);
  z-index: 20;
  transition:
    outline 0.2s ease-out,
    transform 0.2s ease-out;
  position: relative;

  &::after {
    content: '';
    position: absolute;
    inset: 0;
    z-index: 5;
    pointer-events: none;
    background: rgba(59, 130, 246, 0.1);
    border-radius: inherit;
  }

  // Add subtle scale effect to highlight the target
  transform: scale(1.02);
}

.dropBefore,
.dropAfter {
  position: relative;
}

.dropIndicator {
  position: absolute;
  z-index: 10;
  border-radius: 2px;

  &[data-position='before'] {
    left: -2px;
    top: 0;
    width: 6px;
    height: 100%;
    background: linear-gradient(90deg, rgba(59, 130, 246, 1) 0%, rgba(59, 130, 246, 0.7) 100%);
    box-shadow:
      0 0 8px rgba(59, 130, 246, 0.6),
      0 0 4px rgba(59, 130, 246, 0.3);
    animation: pulseIndicator 1.5s infinite;
  }

  &[data-position='after'] {
    right: -2px;
    top: 0;
    width: 6px;
    height: 100%;
    background: linear-gradient(90deg, rgba(59, 130, 246, 0.7) 0%, rgba(59, 130, 246, 1) 100%);
    box-shadow:
      0 0 8px rgba(59, 130, 246, 0.6),
      0 0 4px rgba(59, 130, 246, 0.3);
    animation: pulseIndicator 1.5s infinite;
  }
}

.imageItemInner {
  width: 100%;
  height: 100%;
  position: relative;
  border-radius: 8px;
  overflow: hidden;
  cursor: pointer;
}

.smooth {
  transition: transform 0.2s ease-out;
}

@keyframes pulseIndicator {
  0%,
  100% {
    opacity: 0.8;
    box-shadow:
      0 0 8px rgba(59, 130, 246, 0.6),
      0 0 4px rgba(59, 130, 246, 0.3);
  }
  50% {
    opacity: 1;
    box-shadow:
      0 0 12px rgba(59, 130, 246, 0.8),
      0 0 6px rgba(59, 130, 246, 0.5);
  }
}

// For accessibility - reduce motion
@media (prefers-reduced-motion: reduce) {
  .dropIndicator {
    animation: none;
    opacity: 1;
  }

  .isDragging,
  .smooth {
    transition: none;
  }
}

.isDragging {
  // Styles previously here might be handled by Framer variants now
  cursor: grabbing;
}

.isDropTarget {
  // Subtle indication that this item is a potential drop zone
  // Example: slightly brighter background or outline
  // outline: 2px solid rgba(59, 130, 246, 0.5); // Example: blue outline
  // background-color: rgba(255, 255, 255, 0.05); // Example: slight overlay
}

// --- Add Indicator Styles ---

.dropIndicatorBase {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  width: 4px; // Width of the indicator line
  background-color: #3b82f6; // Blue indicator color (Tailwind blue-500)
  z-index: 15; // Ensure it's above the item content but potentially below dragged item
  border-radius: 2px;
  box-shadow: 0 0 5px rgba(59, 130, 246, 0.5);
  pointer-events: none; // Don't interfere with drag events
}

// Style for the element rendered when dropping before
.dropIndicatorBefore {
  @extend .dropIndicatorBase;
  left: -6px; // Position slightly to the left of the item
}

// Style for the element rendered when dropping after
.dropIndicatorAfter {
  @extend .dropIndicatorBase;
  right: -6px; // Position slightly to the right of the item
}

// Note: The .dropBefore and .dropAfter classes on the item itself might not be needed
// if we rely solely on rendering the .dropIndicatorBefore/.dropIndicatorAfter elements.
// Keeping them for now in case specific item-level styling is desired.
.dropBefore {
  // Example: could add a slight border if needed
  // border-left: 3px solid rgba(59, 130, 246, 0.7);
}

.dropAfter {
  // Example:
  // border-right: 3px solid rgba(59, 130, 246, 0.7);
}

.imageItem {
  position: relative; // Ensure indicators can be positioned absolutely
  overflow: hidden; // Keep content clipped
  // ... other .imageItem styles
}

// --- Add Indicator Styles ---
.indicatorBefore,
.indicatorAfter {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 4px; // Example width
  background-color: rgba(59, 130, 246, 0.7); // Example color (Tailwind blue-500)
  opacity: 0; // Initially hidden - controlled by AnimationPipeline
  pointer-events: none; // Prevent interference with clicks/hovers
  z-index: 5; // Ensure they appear above the image but below drag overlay maybe
  // Optional: Add a subtle shadow or rounded corners
  border-radius: 2px;
  box-shadow: 0 0 5px rgba(59, 130, 246, 0.5);
  // transform: scaleX(0); // Alternative initial state if animating scale
  // transform-origin: center; // Or left/right
}
