/* Main container for the image grid */
.imageGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  padding: 1rem;
  perspective: 1000px;
  transform-style: preserve-3d;
  transition: all 0.5s cubic-bezier(0.25, 0.1, 0.25, 1);

  @media (min-width: 2560px) {
    @apply px-6;
  }
}

/* Masonry grid container */
.myMasonryGrid {
  @apply flex -ml-2 w-auto;
}

/* Individual column in the masonry grid */
.myMasonryGridColumn {
  @apply pl-2 bg-clip-padding;
}

/* Wrapper for each image */
.imageWrapper {
  @apply relative overflow-hidden rounded-lg shadow-md transition-transform duration-300 ease-in-out;

  &:hover {
    @apply transform scale-105;
  }
}

/* Styles for the image itself */
.image {
  @apply relative top-0 left-0 w-full h-auto object-fill transition-transform duration-300 ease-in-out;

  &:hover {
    @apply transform scale-105;
  }
}

/* Styles for the image title overlay */
.imageTitle {
  @apply absolute bottom-0 left-0 right-0 bg-black bg-opacity-70 text-white p-2 text-center;
}

/* Utility class for smooth transitions */
.smoothTransition {
  @apply transition-all duration-300 ease-in-out;
}

/* Styles for the immersive image feed */
.imageFeed {
  perspective: 1000px;
  transform-style: preserve-3d;
  overflow: hidden;
}

.imageRow {
  opacity: 0;
  transform: translateY(20px) rotateX(-10deg);
  transition:
    opacity 0.5s ease,
    transform 0.5s ease;

  &.visible {
    opacity: 1;
    transform: translateY(0) rotateX(0);
  }
}

.imageWrapper {
  position: relative;
  transition: transform 0.5s ease-out;
  transform: translateZ(0) rotateX(0);
  opacity: 0;
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);

  &.visible {
    opacity: 1;
    transform: translateZ(50px) rotateX(10deg);
    clip-path: polygon(10% 10%, 90% 10%, 90% 90%, 10% 90%);
  }
}

.image {
  width: 100%;
  height: auto;
  transition: transform 0.3s ease-out;

  &:hover {
    transform: scale(1.05);
  }
}

.parallaxLayer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
}

.masked-image-feed {
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 100%;
}

.image-feed {
  position: relative;
  isolation: isolate;
  min-height: 100vh;
  width: 100%;
  background: linear-gradient(
    135deg,
    rgba(2, 8, 20, 0.95) 0%,
    rgba(5, 15, 35, 0.9) 50%,
    rgba(2, 8, 20, 0.95) 100%
  );

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background:
      radial-gradient(circle at 20% 30%, rgba(0, 30, 60, 0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0, 40, 80, 0.1) 0%, transparent 60%);
    pointer-events: none;
    z-index: 0;
  }

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: repeating-linear-gradient(
      0deg,
      rgba(0, 20, 40, 0.03) 0%,
      rgba(0, 30, 60, 0.05) 50%,
      rgba(0, 20, 40, 0.03) 100%
    );
    background-size: 100% 10px;
    opacity: 0.5;
    pointer-events: none;
    z-index: 1;
  }
}

.feedContent {
  position: relative;
  z-index: 2;
  width: 100%;
  height: 100%;
  padding: 2rem;
}

.waterMask {
  position: absolute;
  inset: 0;
  backdrop-filter: blur(1.5px);
  mix-blend-mode: overlay;
  background: linear-gradient(180deg, rgba(0, 20, 40, 0.2) 0%, rgba(0, 30, 60, 0.15) 100%);
  z-index: 3;
  pointer-events: none;
}

.ripple {
  position: absolute;
  border-radius: 50%;
  transform: scale(0);
  background: radial-gradient(
    circle,
    rgba(255, 255, 255, 0.4) 0%,
    rgba(255, 255, 255, 0.2) 50%,
    transparent 70%
  );
  pointer-events: none;
  z-index: 4;
}

// Remove old ripple overlay styles
.rippleOverlay {
  display: none;
}

// Ensure proper stacking context
.image-feed {
  isolation: isolate;

  & > div {
    transform: translateZ(0);
  }
}

// Add water effect specific styles
:global(.image-feed) {
  transform-style: preserve-3d;

  & > div {
    transform: translateZ(0);
  }
}

.container {
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
}

.feed {
  width: 100%;
  display: flex;
  flex-direction: column;
  animation: fadeIn 0.3s ease-in-out;
}

.gridContainer {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.loading {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 16px;
  padding: 16px;
}

.noImages {
  width: 100%;
  text-align: center;
  padding: 48px;
  font-size: 18px;
  color: #666;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.imageFeedContainer {
  scroll-behavior: smooth;
  overflow-y: auto;
  height: 100%;
  width: 100%;
}

// --- Fake Card Pile Placeholder Styles ---
.fakeCardPileContainer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 150px; // Adjust size as needed
  height: 100px; // Adjust size as needed
  perspective: 800px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.fakeCard {
  position: absolute;
  width: 90%;
  height: 90%;
  background-color: rgba(100, 100, 100, 0.5); // Semi-transparent grey
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  transform-origin: center;
  // Individual offsets and rotations for stack effect
  &.card1 {
    transform: translateZ(0px) rotate(2deg) translateX(2px);
    z-index: 3;
  }
  &.card2 {
    transform: translateZ(-10px) rotate(-3deg) translateX(-3px);
    z-index: 2;
    background-color: rgba(100, 100, 100, 0.4);
  }
  &.card3 {
    transform: translateZ(-20px) rotate(4deg) translateX(1px);
    z-index: 1;
    background-color: rgba(100, 100, 100, 0.3);
  }
}
